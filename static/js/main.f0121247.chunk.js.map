{"version":3,"sources":["utils/qs.js","components/Webcam/Webcam.js","components/CameraList/CameraList.js","components/NameField/NameField.js","components/Tester/InProcessScreen.js","components/Tester/Tester.js","components/Table/TableHeader.js","components/Table/TableRow.js","components/Table/TableData.js","components/Table/PageNum.js","components/Table/PageInput.js","components/Table/TableFooter.js","components/Table/Table.js","components/Table/DataCollection.js","components/Modal.js","components/Status.js","components/Toggle/Toggle.js","components/CompleteAnimation/Checkmark/Checkmark.js","components/CompleteAnimation/Fireworks/Fireworks.js","components/CompleteAnimation/CompleteAnimation.js","components/ProgressBar.js","app/App.js","index.js","assets/svg/collapse-chevron.svg","assets/svg/expand-chevron.svg","assets/svg/beg.svg","assets/svg/end.svg","assets/data/sentences.txt","assets/data/sentences-pinyin-accent-nospecialchar.txt","utils/ip.js","assets/svg/up-chevron.svg","assets/svg/down-chevron.svg"],"names":["qs","id","parsedUrl","URL","window","location","href","searchParams","has","get","Webcam","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isRecording","recorder","videoSrc","videoEle","startTime","video","React","createRef","today","Date","getFullYear","getMonth","getDate","getTime","react_default","a","createElement","className","onClick","startRecording","controls","autoPlay","playsInline","muted","ref","props","videoRef","name","Component","CameraList","_useState","useState","_useState2","slicedToArray","availableCams","setAvailableCams","_useState3","_useState4","recordingStatus","setRecordingStatus","_useState5","_useState6","availableMics","setAvailableMics","_useState7","_useState8","pluggedInDevices","setPluggedInDevices","helper_extractRelevantCamInfo","device","camera_info","deviceId","label","groupId","initCams","navigator","mediaDevices","enumerateDevices","then","devices","videoDevices","micDevices","num","reduce","accumulator","kind","updateDetectedNumCams","helper_getNumCams","map","toLowerCase","includes","indexOf","push","helper_addToMicDevices","videodevices","devicePrior","filter","cam","mic_info","helper_addToVideoDevices","document","getElementById","click","disabled","catch","err","console","log","message","Array","prototype","diff","i","isMac","startFaceTimeCam","faceTimeDevice","defaultMic","cogoToast","success","position","hideAfter","hide","addNewCamMic","resolve","undefined","Promise","checkIfMac","Exception","allDevices","detectedTwoDevices","idAoni","newPluggedInID","length","warn","_getNewMicCam","newCam","newMic","error","getNewMicCam","_getNewMicCam2","newMicID","newCamDevice","temp","substring","initCamsDummy","stopAllCams","startAllCams","getUserMedia","audio","exact","frameRate","ideal","width","height","camera","RecordRTC","recorderType","MediaStreamRecorder","type","desiredSampRate","numberOfAudioChannels","disableLogs","getState","current","srcObject","NotYetLoadedException","triggerRecordStatusUpdate","dummy","stopRecording","blob","getBlob","socket","emit","sentence_index","camera_id","updateConnectionStatus","resumeAllCams","_unused","resumeRecording","useEffect","addCamState","on","addCam","comp_camsList","components_Webcam_Webcam","key","debug","debugControls","style","marginBottom","renderCams","NameField","saveName","value","url_state","history","pushState","updateTesterContents","updateGreenLightStatus","isNameEmpty","replace","detectEnter","e","innerText","which","startBtn","buttons","placeholder","onKeyPress","autoFocus","required","InProcessScreen","recording","setRecordState","done_recording","setDoneRecording","reset_state","reset","nameSet","setName","updateSentence","data","getRecordState","curr_sentence_index","showFileSavingLoader","stopTimer","updateRecordProgress","record","startTimer","displaySentenceToBeRead","debugMode","recordedYet","recordedProgress","disableNextButtonIfCurrNotRead","emoji","sentence","msg","makeEmojiLayout","recordedClassName","recordTimeEle","recordTimeMsg","transition","color","recordGreenLight","numFilesSaved","requiredNumCams","connectedToServer","text","data_length","detectedNumCams","NameField_NameField_NameField","getContents","Tester","intervalID","setIntervalID","clearInterval","innerHTML","time","setInterval","hour","min","sec","slice","createInterval","comp_totalProgress","comp_saveProgress","curr_sentence","hidden","TableHeader","TableRow","getClassOfRowItem","read","index","TableData","updateDataOnPageChange","_this2","page","curr_page","max_per_page","beg","end","rowItems","TableRow_TableRow","PageNum","selected","updatePage","PageInput","handleChange","event","Number","target","handleSubmit","preventDefault","onSubmit","htmlFor","onChange","TableFooter","page_num","mid_point","Math","floor","max_page","total_data","toFixed","nums_list","from","x","PageNum_PageNum","PageInput_PageInput","src","alt","prev","next","Table","TableHeader_TableHeader","TableData_TableData","sentencesPerPageInTable","TableFooter_TableFooter","DataCollection","Table_Table_Table","Modal","_useModali","useModali","animated","title","dist_default","Button","buttonCancel","isStyleCancel","toggleCompleteModal","buttonConfirm","isStyleDestructive","confirmFunc","toast","info","_useModali2","completeModal","onLoadFunc","getElementsByClassName","modalID","Status","Infinity","remainingWords","setRemainingWords","startTimeTotalSecs","getSeconds","diffSecs","hours","mins","totalRecordingTime","displayTime","tick","showTime","initTime","SomeError","date","getHours","getMinutes","Toggle","toggle","addEventListener","onChangeFunc","checked","updateDebugMode","Checkmark","version","xmlns","xlink","y","viewBox","enableBackground","xmlSpace","fill","stroke","strokeMiterlimit","d","strokeWidth","cx","cy","r","strokeLinecap","points","strokeDasharray","Fireworks","CompleteAnimation","Fireworks_Fireworks","Checkmark_Checkmark","ProgressBar","percent","curr","total","alignmentStyle","align","margin","strokeColor","shape","es","trailWidth","trailColor","App","curr_index","ip_address","showNoCamsRef","hideServerOfflineRef","Desktop","_ref","children","useMediaQuery","minWidth","Tablet","_ref2","maxWidth","Mobile","_ref3","Default","_ref4","terminal","handler_hoverMouseOutDebug","handler_hoverMouseOverDebug","classList","remove","handler_hoverMouseOutBottom","handler_hoverMouseOverBottom","override","numFilesSavedInd","Fragment","main_userView","comp_debug","comp_tester","comp_bottomAdmin","recordProgress","isMobile","marginTop","top","left","helper_toggleHideBottom","down_chevron","comp_dataCollection","comp_cameraList","main_adminView","textAlign","main_playground","comp_debugHover","comp_completeAnimation","CompleteAnimation_CompleteAnimation","DataCollection_DataCollection","updateName","currSentence","currSentenceIndex","currPageInTable","components_Tester_Tester","first_sentence","numFilesSavedTotal","totalTime","updateTotalTime","disp_showFileSavingLoader","computerID","computerStatus","toggleCamState","helper_toggleCamState","admin_resetCams","comp_status","totalWords","helper_checkIfMobileView","comp_modals","buttonConfirmId","admin_resetProgress","getStatus","setState","helper_toggleModal","handler_debugToggle","readOnly","ip","handler_IPOnChange","handler_useThisCompAsServer","helper_toggleHideDebug","up_chevron","disp_showFileSavedMessage","updateFilesSaved","numFiles","successMessage","ip_util","clientGetIP","split","loading","helper_setServerIP","debugCogoToastOnRef","debugCogoToastOffRef","showDebugOn","showDebugOff","handler_fileSaveSuccess","style_makeEmojiToastLayout","updateCompID","status","style_addThisCpuIcon","str","find","re","RegExp","ref_hideLoader","NotOnPageError","disp_showServerConencted","add","initSocketListeners","helper_showServerNotOnline","JSON","stringify","progress","connectedOrder","connectedOrderMap","update","$merge","refreshRates","conectedOrderNum","setTimeout","reload","max","new_page","bool","admin_refreshAll","origin","pathname","helper_emitInitialSocketMessages","helper_showNoCamsConnected","disconnect","io","helper_addHoverEventListeners","debugHoverArea","bottomHoverArea","helper_removeHoverEventListeners","removeEventListener","handler_keydown","inputServerIP","activeElement","react_router_dom","Helmet","react_router","path","component","fontSize","pinyin","readTextFile","sentences","handler_keyup","file","stateName","_this3","fetch","response","sum","serverID","opts","hostname","mode","ok","_context","t0","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","return","ReactDOM","render","src_app_App","module","exports","__webpack_require__","p","ifaces","require","networkInterfaces","nodeGetIP","address","keys","forEach","ifname","iface","family","internal","onNewIP","pc","RTCPeerConnection","mozRTCPeerConnection","webkitRTCPeerConnection","iceServers","noop","localIPs","ipRegex","ipIterate","createDataChannel","createOffer","sdp","line","match","setLocalDescription","onicecandidate","ice","candidate"],"mappings":"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","file":"static/js/main.f0121247.chunk.js","sourcesContent":["// let qs = (function (a) {\n//   console.log(\"in qs:\" + window.location.href)\n//   if (a === \"\") return {};\n//   var b = {};\n//   for (var i = 0; i < a.length; ++i) {\n//     var p = a[i].split('=', 2);\n//     if (p.length === 1)\n//       b[p[0]] = \"\";\n//     else\n//       b[p[0]] = decodeURIComponent(p[1].replace(/\\+/g, \" \"));\n//   }\n//   return b;\n// })(window.location.search.substr(1).split('&'));\n\nconst qs = function(id) {\n  let parsedUrl = new URL(window.location.href);\n  if (parsedUrl.searchParams.has(id)) {\n    return parsedUrl.searchParams.get(id);\n  } else {\n    return false;\n  }\n}\nexport default qs;","import React from 'react';\nimport './Webcam.scss';\nimport PropTypes from 'prop-types';\n\nclass Webcam extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isRecording: false,\n      recorder: null,\n      videoSrc: null,\n      videoEle: null,\n      startTime: 'time',\n    };\n    this.video = React.createRef();\n  }\n  getCurrentTime() {\n    let today = new Date();\n    let date =\n      today.getFullYear() +\n      '-' +\n      (today.getMonth() + 1) +\n      '-' +\n      today.getDate();\n    let time = today.getTime(); //today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n    return date + '-' + time;\n  }\n  \n  render() {\n    // console.log(this.props.videoRef);\n    return (\n      <div className='vid_card' onClick={this.startRecording}>\n        <video\n          className='cam'\n          controls\n          autoPlay\n          playsInline\n          muted\n          ref={this.props.videoRef}\n        />\n        <p className='cam_label'>{this.props.name}</p>\n      </div>\n    );\n  }\n}\n\nWebcam.propTypes = {\n  name: PropTypes.string.isRequired,\n  videoRef: PropTypes.object.isRequired\n};\n\nexport default Webcam;\n","/* eslint-disable no-console */\nimport React, { useState, useEffect } from 'react';\n// import sample_cam from '../../assets/svg/sample-cam.svg';\nimport Webcam from '../Webcam/Webcam.js';\nimport RecordRTC, { MediaStreamRecorder } from 'recordrtc';\nimport qs from '../../utils/qs'\nimport cogoToast from 'cogo-toast';\n// import PropTypes from 'prop-types';\n\nexport default function CameraList(props) {\n  const [availableCams, setAvailableCams] = useState([]);\n  const [recordingStatus, setRecordingStatus] = useState(\"recording-status-loading...\");\n  const [availableMics, setAvailableMics] = useState([]);\n  const [pluggedInDevices, setPluggedInDevices] = useState([]);\n\n  const helper_extractRelevantCamInfo = device => {\n    return {\n      camera_info: {\n        id: device.deviceId,\n        label: device.label,\n        groupId: device.groupId\n      },\n      ref: React.createRef(),\n      recorder: null\n    };\n  }\n  const helper_addToVideoDevices = (device, videodevices) => {\n    device = helper_extractRelevantCamInfo(device);\n    // console.log(availableCams);\n    const devicePrior = availableCams.filter(cam => {\n      return cam.camera_info.id === device.camera_info.id\n    })[0];\n    // console.log(devicePrior);\n    if (devicePrior) {\n      // console.log('found prior device');\n      device.mic_info = devicePrior.mic_info;\n    } else {\n      // console.log('using first cam mic!!!')\n      device.mic_info = availableMics[0];\n    }\n    videodevices.push(device);\n  }\n  const helper_addToMicDevices = (device, micDevices) => {\n    if (micDevices.indexOf(device.deviceId) < 0)\n      micDevices.push(device);\n  }\n  const helper_getNumCams = devices => {\n    const num = devices.reduce((accumulator, device) => {\n      return device.kind === 'videoinput' ? accumulator + 1 : accumulator;\n    }, 0);\n    props.updateDetectedNumCams(num);\n    return num;\n  }\n\n  const initCams = () => {\n    if (!navigator.mediaDevices || !navigator.mediaDevices.enumerateDevices) {\n      console.log('enumerateDevices() not supported.');\n    } else {\n      navigator.mediaDevices.enumerateDevices().then(devices => {\n        let videoDevices = [];\n        let micDevices = [];\n        helper_getNumCams(devices);\n\n        // console.log(\"number of cams detected: \" + numCams);\n        devices.map(function(device) {\n          if (device.kind === 'audioinput') {\n            if (\n              !device.label.toLowerCase().includes('default') &&\n              !device.label.toLowerCase().includes('communications') && \n              !device.label.toLowerCase().includes('built-in')\n            ) {\n              helper_addToMicDevices(device, micDevices);\n            }\n          }            \n          if (device.kind === 'videoinput') {\n            helper_addToVideoDevices(device, videoDevices);\n          }\n          return null;\n        });\n        setAvailableMics(micDevices);\n        setAvailableCams(videoDevices);\n\n        document.getElementById('startBtn').click();\n        document.getElementById('startBtn').disabled = true;\n        // console.log('getAvailableDevices success!');\n      })\n      .catch(function(err) {\n        console.log(err.name + ': ' + err.message);\n      });\n    }\n  }\n  // const initMics = () => {\n  //   let id = 0;\n  //   availableCams.map(cam => {\n  //     if (availableMics[id]) cam.mic_info = availableMics[id++].deviceId;\n  //   });\n  // }\n\n  Array.prototype.diff = function(a) {\n    return this.filter(function(i) {\n      return a.indexOf(i) < 0;\n    });\n  };\n\n  const getNewMicCam = (newPluggedInID, allDevices) => {\n    const newCam = allDevices.filter(device => {\n      return (\n        newPluggedInID.indexOf(device.deviceId) >= 0 &&\n        device.kind === 'videoinput'\n      );\n    });\n    // should only contain one \n    const newMic = allDevices.filter(device => {\n      return (\n        newPluggedInID.indexOf(device.deviceId) >= 0 &&\n        device.kind === 'audioinput'\n      ); \n    });\n    if (newMic.length > 1) {\n      console.error('multiple new mics detected')\n    }\n    if (newCam.length > 1) {\n      console.error('multiple new cams detected');\n    }\n    const newMicID = newMic[0].deviceId;\n\n    return [newMicID, newCam[0]];\n  }\n\n  const checkIfMac = (resolve) => {\n    let faceTimeDevice = undefined;\n    let defaultMic = undefined;\n    return new Promise(() => {\n      navigator.mediaDevices.enumerateDevices().then(devices => {\n        faceTimeDevice = devices.filter(device => {\n          return device.label.toLowerCase().includes('facetime');\n        });\n        defaultMic = devices.filter(device => {\n          return device.deviceId === 'default'\n        });\n      }).then(()=> {\n        resolve(faceTimeDevice[0], defaultMic[0]);\n      });\n    })\n  }\n\n  let isMac = false;\n\n  const startFaceTimeCam = (faceTimeDevice, defaultMic) => {\n    if (faceTimeDevice) {\n      const device = helper_extractRelevantCamInfo(faceTimeDevice)\n      device.mic_info = defaultMic.deviceId;\n      setAvailableCams([device]);\n      document.getElementById('startBtn').disabled = false;\n      document.getElementById('startBtn').click();\n      document.getElementById('dummyBtn').disabled = false;\n      document.getElementById('dummyBtn').click();\n      cogoToast.success('Mac FaceTime Camera started', {\n        position: 'top-left',\n        hideAfter: 1,\n        onClick: hide => {\n          hide()\n        }\n      });\n      props.updateDetectedNumCams(1);\n      isMac = true;\n    }\n  }\n\n\n  const addNewCamMic = () => {\n    // let isMac = false;\n    try {\n      checkIfMac(startFaceTimeCam);\n    } catch (Exception) {\n      // console.err('not a mac')\n    }\n    navigator.mediaDevices.enumerateDevices().then(devices => {\n      const allDevices = devices.filter(device => {\n        return (\n          device.label.toLowerCase().includes('aoni') &&\n          !device.label.toLowerCase().includes('communication') &&\n          !device.label.toLowerCase().includes('default')\n        );\n      });\n      let detectedTwoDevices = false;\n\n      const idAoni = allDevices.map(device => {\n        return device.deviceId;\n      });\n      // const newPluggedInPaired = allDevices.map(device => [device.kind, device.deviceId])\n      // console.log(newPluggedInPaired);\n\n      const newPluggedInID = idAoni.diff(pluggedInDevices);\n      if (newPluggedInID.length === 0) {\n        // console.log('no new devices detected');\n        if (!isMac) \n          cogoToast.warn('No additional webcams detected.', {hideAfter: 1});\n      } else if (newPluggedInID.length === 2) {\n        detectedTwoDevices = true;\n        // console.log(\n        //   'new devices: ' + newPluggedInID.map(d => d.substring(0, 5))\n        // );\n      }\n\n      if (detectedTwoDevices) {\n        let [newMicID, newCamDevice] = getNewMicCam(newPluggedInID, allDevices);\n        newCamDevice = helper_extractRelevantCamInfo(newCamDevice);\n        const existCamera = availableCams.filter(cam => {\n          return cam.camera_info.id === newCamDevice.camera_info.id;\n        })[0];\n        if (!existCamera) {\n          newCamDevice.mic_info = newMicID;\n          let temp = availableCams;\n          temp.push(newCamDevice);\n          setAvailableCams(temp);\n          // cogoToast.success(\n          //   'New webcam: ' + newCamDevice.camera_info.id.substring(0, 5) + ' added.'\n          // ), {\n          //   hideAfter: 0.5,\n          //   position: 'top-left',\n          //   onClick: hide => {\n          //     hide();\n          //   }\n          // };\n          cogoToast.success('Webcam: ' + newCamDevice.camera_info.id.substring(0, 5) + ' added.', {\n            hideAfter: 1,\n            position: 'top-left',\n            onClick: hide => hide()\n          });\n          document.getElementById('startBtn').disabled = false;\n          initCams();\n          setPluggedInDevices(idAoni);\n        }\n      }      \n    }).then(() => {\n        document.getElementById('dummyBtn').disabled = false;\n        document.getElementById('dummyBtn').click();\n    });\n  }\n\n  function useAvailableWebCams() {\n    //  runs once\n    useEffect(() => {\n      props.updateConnectionStatus();\n    }, [props.addCamState]);\n  }\n\n  const initCamsDummy = () => {\n    stopAllCams(true);\n  }\n\n  const startAllCams = () => {\n    const temp =\n    recordingStatus === 'recording-status-loading...' ? {} : recordingStatus;\n    // goes through all cams array and through each ID, accesses and opens it using navigator\n    availableCams.map(cam => {\n      // console.log(cam.mic_info);\n      if (!cam.mic_info) {\n        console.error('using default microphone...');\n      }\n      navigator.mediaDevices\n        .getUserMedia({\n          audio: {\n            deviceId: {exact: (cam.mic_info) ? cam.mic_info : 'default'}\n          },\n          video: {\n            frameRate: {exact: 30, ideal: 30},\n            width: {ideal: 1920},\n            height: {ideal: 1080},\n            deviceId: cam['camera_info'].id\n          }\n        })\n        .then(camera => {\n          // console.log(camera.getTracks().forEach(track=> {console.log(\"track:\" + track.label + \",\" + track.kind)}));\n          // console.log(\"////////////////////////\");\n          let recorder = RecordRTC(camera, {\n            recorderType: MediaStreamRecorder, //WebAssemblyRecorder,\n            type: 'video',\n            frameRate: 30,\n            desiredSampRate: 16000,\n            width: 1920,\n            height: 1080,\n            numberOfAudioChannels: 2,\n            disableLogs: true\n          });\n          if (recorder.getState() !== 'recording') {\n            recorder.camera = camera;\n            cam['recorder'] = recorder;\n            let video = cam['ref'];\n            try {\n              video.current.srcObject = camera;\n            } catch (NotYetLoadedException) {\n              //\n            }\n            // resetInitialCams(recorder);\n            recorder.startRecording();\n          }\n          triggerRecordStatusUpdate(temp, recorder, cam);\n        })\n        .catch(error => {\n          console.error(error);\n        });\n        return availableCams;\n    });\n  };\n\n  const stopAllCams = (dummy) => {\n    const temp =\n      recordingStatus === 'recording-status-loading...' ? {} : recordingStatus;\n      \n    availableCams.map(cam => {\n      let recorder = cam['recorder'];\n      if (recorder !== null) {\n        recorder.stopRecording(() => {\n          let blob = recorder.getBlob();\n          console.log(\n            '%c recorded data',\n            'background: #222; color: #bada55',\n            blob\n          );\n          if (dummy !== true) {\n            props.socket.emit('client: save data', {\n              name: qs(\"name\"),\n              sentence_index: qs(\"sentence_index\"),\n              camera_id: cam['camera_info'].id,\n              blob: blob\n            });\n          } else {\n            console.log('dummy received, did not save blob');\n          }\n\n        });\n        triggerRecordStatusUpdate(temp, recorder, cam);\n      }\n      return availableCams;\n    });\n  };\n\n  const triggerRecordStatusUpdate = (temp, recorder, cam) => {\n    try {\n      temp[cam['camera_info'].id.substring(0, 15)] = recorder.getState();\n      setRecordingStatus(temp);\n      props.updateConnectionStatus(temp);\n    } catch (NotYetLoadedException) {\n      cogoToast.warn('Camera not yet loaded!', {\n        hideAfter: 0,\n        onClick: hide => {\n          hide()\n        }\n      });\n    }\n  }\n\n  const resumeAllCams = () => {\n    const temp =\n      recordingStatus === 'recording-status-loading...' ? {} : recordingStatus;\n    availableCams.map(cam => {\n      let recorder = cam['recorder'];\n      let state = undefined;\n      try {\n        state = recorder.getState();\n      } catch {\n        cogoToast.warn(\"Camera not yet loaded!\", {\n          hideAfter: 0,\n          onClick: hide => {\n            hide()\n          }\n        });\n      }\n      if (state === \"paused\") {\n        recorder.resumeRecording();\n      } else if (state === \"stopped\"){\n        try {\n          recorder.startRecording();\n        } catch (NotYetLoadedException) {\n          cogoToast.warn('Camera not yet loaded!', {\n            hideAfter: 0,\n            onClick: hide => {\n              hide()\n            }\n          });\n        }\n      }\n      triggerRecordStatusUpdate(temp, recorder, cam);\n      return availableCams;\n    });\n  }\n\n  useAvailableWebCams();\n\n  // dummy to fix bug of first video\n  props.socket.on('server: dummy vid, do not save', function() {\n    try {\n      document.getElementById('dummyBtn').click();\n      document.getElementById('dummyBtn').disabled = true;\n    } catch (NotYetLoadedException) {\n      console.error(NotYetLoadedException);\n    }\n  });\n\n  // this is actually what calls start cams\n  props.socket.on('server: start cams', function () {\n    try {\n      document.getElementById(\"resumeBtn\").click();\n      document.getElementById(\"resumeBtn\").disabled = true;\n      document.getElementById('stopBtn').disabled = false;\n    } catch (NotYetLoadedException) {\n      console.error(NotYetLoadedException)\n    }\n\n  });\n\n  // this is actually what calls stop cams\n  props.socket.on('server: stop cams', function () {\n    try {\n      document.getElementById('stopBtn').click();\n      document.getElementById('stopBtn').disabled = true;\n      document.getElementById(\"resumeBtn\").disabled = false;\n    } catch (NotYetLoadedException) {\n      console.error(NotYetLoadedException)\n    }\n  });\n\n  const debugControls = (debug) => {\n    if (debug) {\n      return (\n        <div>\n          {/* <p>Don't click these while actual testing</p> */}\n          <button id='dummyBtn' className=\"hidden_button\" onClick={initCamsDummy}>\n            dummy reset\n          </button>\n          <button id='startBtn' className=\"hidden_button\" onClick={startAllCams}>\n            start and pause all cams\n          </button>\n          <button id='resumeBtn' className=\"hidden_button\" onClick={resumeAllCams}>\n            resume all cams\n          </button>\n          <button id='stopBtn' className=\"hidden_button\" onClick={stopAllCams}>\n            stop all cams\n          </button>\n          <button\n            id='addCamBtn'\n            className='hidden_button'\n            onClick={addNewCamMic} \n          >\n            Add Cam\n          </button>\n          {/* <button id=\"setCompID\" onClick={getSetCompID}>get set computer ID</button> */}\n        </div>\n      );\n    }\n  }\n\n  const renderCams = addCam => {\n\n    // initMics()\n    const debug = true;\n    let i = 0; \n    const comp_camsList = availableCams.map(cam => {\n      return (\n        <Webcam\n          key={i++}\n          name={'ID: ' + cam['camera_info'].id.substring(0, 15)}\n          videoRef={cam['ref']}\n        />\n      );\n    });\n      \n\n    return (\n      <div id='camera_list'>\n        {debugControls(debug)}\n        <div>\n          <button className='debug_button' style={{marginBottom: '1em'}} onClick={addCam}>Add Webcam</button>\n          <div className='cameras'>{comp_camsList}</div>\n        </div>\n      </div>\n    );\n  };\n  \n  return renderCams(props.addCam);\n}","import React, { Component } from 'react'\nimport './NameField.scss'\nimport PropTypes from 'prop-types';\n\nexport default class NameField extends Component {\n  saveName = () => {\n    let name = document.getElementById(\"name\").value;\n    // document.location.search = \"name=\" + name + \"&sentence_index=0\";\n    let url_state = '?name=' + name + '&sentence_index=0'\n    window.history.pushState(\n      null,\n      null,\n      url_state\n    );\n    \n    this.props.socket.emit('client: start testing', {\n      name,\n      sentence_index: 0\n    })\n    this.props.socket.emit('client: dummy vid, do not save');\n    this.props.socket.emit('client: update recording progress', 0);\n    this.props.socket.emit('client: save total time', [0,0,0]);\n    this.props.socket.emit('client: save total start time', new Date())\n    this.props.updateTesterContents();\n    this.props.updateGreenLightStatus(true);\n    \n  }\n\n  isNameEmpty = () => {\n    try {\n      return !document.getElementById(\"name\").value.replace(/\\s/g, '').length\n    }\n    catch (NotYetLoadedException) {\n      //\n    }\n  }\n\n  detectEnter = (e) => {\n    if (!this.isNameEmpty()) {\n      if (e.which === 13) {\n        this.saveName(e);\n      } \n    } else {\n      document.getElementById('nameNotFilled').innerText='请输入名字'\n    }\n  }\n\n  startBtn = (e) => {\n    if (!this.isNameEmpty()) {\n      if (!e.buttons) {\n        this.saveName(document.getElementById(\"name\").value);\n      }\n    } else {\n      document.getElementById('nameNotFilled').innerText = '请输入名字'\n    }\n  }\n\n\n  render() {\n    return (\n      <div>\n        <div className='name_input'>\n          <input\n            type='text'\n            name='name'\n            id='name'\n            placeholder='输入名字（拼音）'\n            onKeyPress={this.detectEnter}\n            autoFocus\n            required\n          />\n          <br/>\n          <button className=\"btn btn-center\" onClick={this.startBtn}>开始实验</button>\n          {(this.isNameEmpty()) && <p className=\"warning_message\" id=\"nameNotFilled\"></p>}\n        </div>\n      </div>\n    );\n  }\n}\n\nNameField.propTypes = {\n  socket: PropTypes.object.isRequired,\n  updateTesterContents: PropTypes.func.isRequired,\n  updateGreenLightStatus: PropTypes.func.isRequired,\n};","/* eslint-disable no-console */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport NameField from '../NameField/NameField';\nimport qs from '../../utils/qs';\n\nexport default function InProcessScreen(props) {\n  const [recording, setRecordState] = useState(false);\n  const [done_recording, setDoneRecording] = useState(false);\n  const [reset_state, reset] = useState(false);\n  const [nameSet, setName] = useState(qs('name'));\n\n  function updateSentence(data) {\n    reset(true);\n    props.updateSentence(data);\n  }\n\n  function getRecordState() {\n    if (recording) {\n      return 'Done';\n    } else if (done_recording && !reset_state) {\n      return 'Retry';\n    } else {\n      return 'Record';\n    }\n  }\n\n  function stopRecording() {\n    setDoneRecording(true);\n    setRecordState(false);\n    props.socket.emit('client: stop cams', 'in process screen');\n    reset(false);\n    props.showFileSavingLoader();\n    props.updateSentence('$next');\n\n    props.updateGreenLightStatus(false);\n    props.stopTimer();\n    markSentenceAsDone(props.curr_sentence_index);\n  }\n\n  function markSentenceAsDone(curr_sentence_index) {\n    if (curr_sentence_index >= 0 ) props.updateRecordProgress(curr_sentence_index);\n  }\n\n  function startRecording() {\n    props.socket.emit('client: start cams', 'in process screen');\n    setRecordState(true);\n    props.startTimer();\n    document.getElementById('testerRecordBtn').className = 'btn btn-danger';\n\n  }\n\n  function record() {\n    document.getElementById('showSavedFilesBtn').disabled = false;\n    if (recording) {\n      stopRecording();\n    } else {\n      startRecording();\n    }\n  }\n\n  \n  function disableNextButtonIfCurrNotRead() {\n    if (!props.debugMode) {\n      const recordedYet =\n      props.recordedProgress > props.curr_sentence_index;\n      try {\n        if (recordedYet) {\n          document.getElementById('testerNextBtn').disabled = false;\n        } else {\n          document.getElementById('testerNextBtn').disabled = true;\n        }\n      } catch (Exception) {\n        // console.log(Exception);\n      }\n    }\n  }\n\n  function makeEmojiLayout(msg, emoji) {\n    return (\n      <div className='emoji-layout-container'>\n        <div className='emoji-layout-emoji-left'> {emoji}</div>\n        <div>\n          {msg}\n        </div>\n        <div className='emoji-layout-emoji-right'> {emoji}</div>\n      </div>\n    );\n  }\n\n  function displaySentenceToBeRead() {\n    disableNextButtonIfCurrNotRead();\n    const recordedYet = \n      (props.curr_sentence_index > 0) ? \n      props.recordedProgress >= props.curr_sentence_index : \n      false;\n    const emoji = recordedYet ? '↺' : '';\n    let sentence = props.data[props.curr_sentence_index];\n    if (sentence) {\n      // const line1 = sentence.substring(0,10)\n      // const line2 = sentence.substring(10);\n      sentence = makeEmojiLayout(sentence, emoji);\n    }\n    \n    // const sentence = recordedMessage + ' ' + props.data[props.curr_sentence_index] + ' ' + recordedMessage;\n    const recordedClassName = recordedYet ? 'recorded_sentence_highlight sentence_to_be_read' : 'sentence_to_be_read'\n    return (\n      <div>\n        <div className={recordedClassName}>\n          {/* <p style={{fontSize: '16px'}}>[{props.curr_sentence_index}]</p> */}\n          {sentence}\n        </div>\n      </div>\n    );\n  }\n\n  \n\n  function trans(text) {\n    if (text === 'Done') {\n      return '结束录制';\n    } else if (text === 'Retry') {\n      return '开始录制';\n    } else if (text === 'Record') {\n      return '开始录制'\n    } else {\n      return text;\n    }\n  }\n\n  function updateTesterContents() {\n    setName(true);\n  }\n\n  function getContents() {\n    if (!nameSet) {\n      return (\n        <div>\n          <NameField\n            socket={props.socket}\n            updateTesterContents={updateTesterContents}\n            updateGreenLightStatus={props.updateGreenLightStatus}\n          />\n        </div>\n      );\n    } else {\n      try {\n        let recordTimeEle = document.getElementById('record_time_content');\n        let recordTimeMsg = document.getElementById('record_time_msg');\n        let colorRecordTime = (recordTimeEle.innerText === '00:00:00') ? 'gray' : 'red';\n        if (colorRecordTime === 'gray') {\n          recordTimeEle.style.transition = 'all 0.5 ease'\n          recordTimeMsg.style.transition = 'all 0.5 ease'\n          recordTimeEle.style.color = 'black';\n          recordTimeMsg.style.color = 'black';\n        } else {\n          recordTimeEle.style.transition = 'all 0.5 ease'\n          recordTimeMsg.style.transition = 'all 0.5 ease'\n          recordTimeEle.style.color = '#FF1053';\n          recordTimeMsg.style.color = '#FF1053';\n        }\n      } catch (NotYetLoadedException) {\n        //\n      }\n      return (\n        <div>\n          {displaySentenceToBeRead()}\n          <div className='recording_hint'>\n          <pre id='record_time_content'>00:00:00</pre>\n          <pre id='record_time_msg'>录制中</pre>\n            \n          </div>\n          <button\n            id='testerRecordBtn'\n            className={\n              getRecordState() === 'Done'\n                ? 'btn btn-danger'\n                : 'btn btn_highlight_green'\n            }\n            onClick={record}\n            disabled={\n              !props.recordGreenLight ||\n              props.numFilesSaved % props.requiredNumCams !== 0 || \n              !props.connectedToServer\n            }\n          >\n            {trans(getRecordState())}\n          </button>\n          <br />\n          <button\n            className='btn'\n            id='testerPrevBtn'\n            onClick={() => updateSentence('$prev')}\n            disabled={\n              props.curr_sentence_index === 0 ||\n              !props.recordGreenLight ||\n              props.numFilesSaved % props.requiredNumCams !== 0 ||\n              recording\n            }\n          >\n            ⬅上一句\n          </button>\n          <button\n            className='btn'\n            id='testerNextBtn'\n            onClick={() => updateSentence('$next')}\n            disabled={\n              props.curr_sentence_index === props.data_length - 1 ||\n              !props.recordGreenLight ||\n              props.numFilesSaved % props.requiredNumCams !== 0 ||\n              recording\n            }\n          >\n            下一句➡\n          </button>\n          {(props.detectedNumCams === 0) && <p className=\"warning_message\">请加摄像头</p>}\n          {(!props.connectedToServer) && <p className=\"warning_message\">请确认您链接到服务器</p>}\n        </div>\n      );\n    }\n  }\n\n  return (\n    <div className='test_container'>\n      {getContents()}\n    </div>\n  );\n}\n\nInProcessScreen.propTypes = {\n  curr_sentence_index: PropTypes.number.isRequired,\n  curr_sentence: PropTypes.string.isRequired,\n  data_length: PropTypes.number.isRequired,\n  updateSentence: PropTypes.func.isRequired,\n  socket: PropTypes.object.isRequired,\n  data: PropTypes.array.isRequired,\n  updateGreenLightStatus: PropTypes.func.isRequired,\n  recordGreenLight: PropTypes.bool.isRequired,\n  numFilesSaved: PropTypes.number.isRequired,\n  requiredNumCams: PropTypes.number.isRequired,\n  stopTimer: PropTypes.func.isRequired,\n  startTimer: PropTypes.func.isRequired,\n  recordedProgress: PropTypes.number.isRequired,\n  updateRecordProgress: PropTypes.func.isRequired,\n  showFileSavingLoader: PropTypes.func.isRequired,\n  debugMode: PropTypes.bool.isRequired,\n  connectedToServer: PropTypes.bool.isRequired,\n  detectedNumCams: PropTypes.number.isRequired,\n};\n","import React, { useState } from 'react';\nimport './Tester.scss';\nimport PropTypes from 'prop-types';\nimport InProcessScreen from './InProcessScreen.js';\nimport qs from '../../utils/qs'\n// import ProgressBar from '../ProgressBar'\n\nfunction Tester(props) {\n  const [intervalID, setIntervalID] = useState(undefined);\n\n  function comp_inProcessScreen() {\n    return (\n      <InProcessScreen\n        updateSentence={props.updateSentence}\n        curr_sentence_index={props.curr_sentence_index}\n        data_length={props.data_length}\n        socket={props.socket}\n        data={props.data}\n        curr_sentence={props.curr_sentence}\n        recordGreenLight={props.recordGreenLight}\n        updateGreenLightStatus={props.updateGreenLightStatus}\n        numFilesSaved={props.numFilesSaved}\n        requiredNumCams={props.requiredNumCams}\n        stopTimer={stopTimer}\n        startTimer={startTimer}\n        recordedProgress={props.recordedProgress}\n        updateRecordProgress={props.updateRecordProgress}\n        showFileSavingLoader={props.showFileSavingLoader}\n        debugMode={props.debugMode}\n        connectedToServer={props.connectedToServer}\n        detectedNumCams={props.detectedNumCams}\n      />\n    );\n  }\n\n  function stopTimer() {\n    clearInterval(intervalID);\n    document.getElementById('record_time_content').innerHTML = '00:00:00';\n  }\n\n  function startTimer() {\n    setIntervalID(createInterval());\n  }\n\n  function createInterval() {\n    let time = [0, 0, 0];\n    return setInterval(() => {\n      let hour = time[0];\n      let min = time[1];\n      let sec = time[2];\n\n      if (sec < 60) {\n        sec += 1;\n      }\n      if (sec === 60) {\n        min += 1;\n        sec = 0;\n      }\n      if (min === 60) {\n        hour += 1;\n        min = 0;\n      }\n      time = [hour, min, sec];\n      document.getElementById('record_time_content').innerHTML =\n        ('0' + hour).slice(-2) +\n        ':' +\n        ('0' + min).slice(-2) +\n        ':' +\n        ('0' + sec).slice(-2);\n      }, 10);\n  }\n\n  return (\n    <div className='testing_screen'>\n      {props.comp_totalProgress(false, 1.5)}\n      <div></div>\n      {/* <span/> */}\n      {props.comp_saveProgress()}\n      <div className='middle'>\n        <div className='inner'>{comp_inProcessScreen()}</div>\n      </div>\n      <pre\n        hidden={\n          props.recordGreenLight ||\n          props.curr_sentence_index === 0 ||\n          !qs('name')\n        }\n        className='warning_message'\n      >\n        如果等保存时间多余10秒钟，通知老师来从设置机器\n      </pre>\n    </div>\n  );\n}\n\nTester.propTypes = {\n  updateSentence: PropTypes.func.isRequired,\n  curr_sentence_index: PropTypes.number.isRequired,\n  curr_sentence: PropTypes.string.isRequired,\n  data_length: PropTypes.number.isRequired,\n  socket: PropTypes.object.isRequired,\n  data: PropTypes.array.isRequired,\n  recordGreenLight: PropTypes.bool.isRequired,\n  updateGreenLightStatus: PropTypes.func.isRequired,\n  numFilesSaved: PropTypes.number.isRequired,\n  requiredNumCams: PropTypes.number.isRequired,\n  recordedProgress: PropTypes.number.isRequired,\n  updateRecordProgress: PropTypes.func.isRequired,\n  totalTime: PropTypes.array.isRequired,\n  updateTotalTime: PropTypes.func.isRequired,\n  showFileSavingLoader: PropTypes.func.isRequired,\n  debugMode: PropTypes.bool.isRequired,\n  connectedToServer: PropTypes.bool.isRequired,\n  detectedNumCams: PropTypes.number.isRequired,\n  comp_saveProgress: PropTypes.func.isRequired,\n  comp_totalProgress: PropTypes.func.isRequired,\n}\n\nexport default Tester;\n","import React, { Component } from 'react'\n\nexport default class TableHeader extends Component {\n  render() {\n    return (\n      <div>\n        <div className='table_header_footer'>\n          <h3>Sentence</h3>\n          {/* <div>Length</div>\n          <div>Actions</div> */}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './TableRow.scss';\n// import Actions from './Actions';\nimport PropTypes from 'prop-types';\n\nexport default class TableRow extends Component {\n  getClassOfRowItem = () => {\n    let read = this.props.read ? 'read row_item' : 'row_item';\n    // let sentence = this.props.sentence;\n    let is_current = this.props.curr_sentence_index === this.props.index ? ' curr_sentence' : '';\n    return read + is_current;\n  }\n\n\n  render() {\n    return (\n      <div>\n        <div className='table_row'>\n          <div className={this.getClassOfRowItem()}>\n            {this.props.index + \": \" + this.props.sentence}\n          </div>\n          {/* <div className='row_item'>00:00 / {this.props.time} </div> */}\n          {/* <Actions /> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nTableRow.propTypes = {\n  sentence: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  curr_sentence_index: PropTypes.number.isRequired,\n  time: PropTypes.string.isRequired,\n  read: PropTypes.bool.isRequired,\n};\n","import React, { Component } from 'react';\nimport TableRow from './TableRow.js';\nimport PropTypes from 'prop-types';\nimport './TableData.scss';\n\nexport default class TableData extends Component {\n  updateDataOnPageChange = () => {};\n  render() {\n    let data = this.props.data;\n    let page = this.props.curr_page;\n    let max_per_page = this.props.max_per_page;\n    let beg = page * max_per_page - max_per_page;\n    let end = beg + max_per_page;\n    let small_data = data.slice(beg, end);\n    let rowItems = small_data.map((sentence, i) => (\n      <TableRow\n        curr_sentence_index={this.props.curr_sentence_index}\n        sentence={sentence}\n        time='00:00'\n        read={false}\n        key={sentence+\":\"+i}\n        index={i + beg}\n      />\n    ));\n\n    return <div className='table'>{rowItems}</div>;\n  }\n}\n\nTableData.propTypes = {\n  data: PropTypes.array.isRequired,\n  curr_sentence_index: PropTypes.number.isRequired,\n  curr_page: PropTypes.number.isRequired,\n  max_per_page: PropTypes.number.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class PageNum extends Component {\n  render() {\n    return (\n      <div \n        className={this.props.selected ? 'page_num' : 'can_click_num page_num'}\n        onClick={() => this.props.updatePage(this.props.num)}>\n        {this.props.num}\n      </div>\n    );\n  }\n}\n\nPageNum.propTypes = {\n  num: PropTypes.number.isRequired,\n  selected: PropTypes.bool.isRequired,\n  updatePage: PropTypes.func.isRequired\n};\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\n\nexport default class PageInput extends Component {\n  handleChange = (event) => {\n    this.props.updatePage(Number(event.target.value));\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n  }\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor='page'>Page:</label>\n          <input\n            type='text'\n            value={this.props.curr_page}\n            onChange={this.handleChange}\n            className = 'debug_text_input'\n          />\n        </form>\n      </div>\n    );\n  }\n}\n\nPageInput.propTypes = {\n  updatePage: PropTypes.func.isRequired,\n  curr_page: PropTypes.number.isRequired\n}","import React, { Component } from 'react'\nimport './TableFooter.scss'\nimport PageNum from './PageNum.js'\nimport next from '../../assets/svg/collapse-chevron.svg'\nimport prev from '../../assets/svg/expand-chevron.svg';\nimport PropTypes from 'prop-types';\nimport PageInput from './PageInput.js'\nimport beg from '../../assets/svg/beg.svg'\nimport end from '../../assets/svg/end.svg';\n\nexport default class TableFooter extends Component {\n  updatePage=(page_num) => {\n    this.props.updatePage(page_num);\n  }\n\n  render() {\n    let curr_page = this.props.curr_page;\n    let max_per_page = this.props.max_per_page;\n    let mid_point = Math.floor(max_per_page / 2)\n    let max_page = Number(((this.props.total_data + 1) / this.props.max_per_page + 1).toFixed(0));\n    let page_nums = Array.from(new Array(max_per_page), (x, i) => { \n      let min = 0;\n      if (curr_page <= mid_point) {\n        min = i;\n      } else if (curr_page >= max_page - mid_point) {\n        min = i + max_page - max_per_page;\n      } else {\n        min = i + curr_page - mid_point - 1;\n      }\n      return min;\n    });\n    let nums_list = page_nums.map((i) => {\n      i = i + 1;\n      return <PageNum num={i} selected={curr_page === i} key={i} updatePage={this.props.updatePage}/>\n    });\n\n    return (\n      <div>\n        <div className='table_header_footer'>\n          <div className='table_footer'>\n            <div className='left_footer'>\n              <PageInput\n                updatePage={this.props.updatePage}\n                curr_page={this.props.curr_page}\n              />\n            </div>\n            <div className='right_footer'>\n              <img\n                src={beg}\n                alt=''\n                className='small_btn'\n                onClick={() => this.props.updatePage(1)}\n              />\n              <img\n                src={prev}\n                alt=''\n                className='small_btn'\n                onClick={() => this.props.updatePage(curr_page - 1)}\n              />\n              {nums_list}\n              <img\n                src={next}\n                alt=''\n                className='small_btn'\n                onClick={() => this.props.updatePage(curr_page + 1)}\n              />\n              <img\n                src={end}\n                alt=''\n                className='small_btn'\n                onClick={() => this.props.updatePage(max_page)}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nTableFooter.propTypes = {\n  updatePage: PropTypes.func.isRequired,\n  curr_page: PropTypes.number.isRequired,\n  total_data: PropTypes.number.isRequired,\n  max_per_page: PropTypes.number.isRequired\n};","import React, { Component } from 'react'\nimport TableHeader from './TableHeader.js'\nimport './Table.scss'\nimport TableData from './TableData.js'\nimport PropTypes from 'prop-types';\nimport TableFooter from './TableFooter';\nexport default class Table extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div>\n        <TableHeader />\n        <TableData\n          data={this.props.data}\n          curr_page={this.props.curr_page}\n          max_per_page={this.props.sentencesPerPageInTable}\n          curr_sentence_index={this.props.curr_sentence_index}\n        />\n        <TableFooter\n          total_data={this.props.data.length}\n          updatePage={this.props.updatePage}\n          curr_page={this.props.curr_page}\n          max_per_page={this.props.sentencesPerPageInTable}\n        />\n      </div>\n    );\n  }\n}\n\nTable.propTypes = {\n  curr_sentence_index: PropTypes.number.isRequired,\n  curr_page: PropTypes.number.isRequired,\n  updatePage: PropTypes.func.isRequired,\n  data: PropTypes.array.isRequired,\n  sentencesPerPageInTable: PropTypes.number.isRequired,\n};","import React, { Component } from 'react';\nimport Table from './Table';\nimport PropTypes from 'prop-types';\n\nexport default class DataCollection extends Component {\n\n\n  render() {\n    return (\n      <div>\n        <div className='data_table'>\n          <Table\n            data={this.props.data}\n            curr_sentence_index={\n              this.props.curr_sentence_index\n            }\n            curr_page={this.props.curr_page}\n            updatePage={this.props.updatePage}\n            sentencesPerPageInTable={this.props.sentencesPerPageInTable}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nDataCollection.propTypes = {\n  data: PropTypes.array.isRequired,\n  curr_sentence_index: PropTypes.number.isRequired,\n  socket: PropTypes.object.isRequired,\n  updatePage: PropTypes.func.isRequired,\n  curr_page: PropTypes.number.isRequired,\n  sentencesPerPageInTable: PropTypes.number.isRequired,\n};\n","import React, { useEffect } from 'react'\nimport Modali, { useModali } from 'modali';\nimport PropTypes from 'prop-types';\nimport cogoToast from 'cogo-toast';\n\nexport default function Modal(props) {\n  const [completeModal, toggleCompleteModal] = useModali({\n    animated: true,\n    title: props.title,\n    message: props.message,\n    buttons: [\n      <Modali.Button\n        label={props.buttonCancel ? props.buttonCancel : ''}\n        isStyleCancel\n        className={!props.buttonCancel ? 'display_none' : ''}\n        key={props.buttonCancel}\n        hidden={!props.buttonCancel}\n        onClick={() => toggleCompleteModal()}\n      />,\n      <Modali.Button\n        label={props.buttonConfirm}\n        isStyleDestructive\n        onClick={() => {\n          if (props.confirmFunc) props.confirmFunc();\n          toggleCompleteModal();\n          if (props.toast) cogoToast.info(props.toast, {\n            onClick: hide => {\n              hide()\n            }\n          });\n        }}\n        hidden={!props.buttonConfirm}\n        key={props.buttonConfirm}\n      />\n    ]\n  });\n  useEffect(() => {\n    if (props.onLoadFunc) props.onLoadFunc()\n    try {\n      if (!props.buttonCancel)\n        document.getElementsByClassName(\n          'modali-button-cancel'\n          )[0].className += ' display_none';\n      if (!props.buttonConfirm)\n        document.getElementsByClassName(\n          'modali-button-destructive'\n        )[0].className += ' display_none';\n    } catch (NotYetLoadedException) {\n      // console.log(NotYetLoadedException);\n    }\n  }, [])\n\n  return (\n    <div style={{ height: '0px' }}>\n      <button\n        className=\"hidden_button\"\n        id={props.modalID}\n        onClick={toggleCompleteModal}\n      >\n        toggle modal\n      </button>\n      <Modali.Modal {...completeModal} />\n    </div>\n  );\n}\n\nModal.propTypes = {\n  socket: PropTypes.object,\n  title: PropTypes.string,\n  message: PropTypes.any,\n  buttonCancel: PropTypes.string,\n  buttonConfirm: PropTypes.string,\n  toast: PropTypes.string,\n  confirmFunc: PropTypes.func,\n  modalID: PropTypes.string,\n  onLoadFunc: PropTypes.func,\n  buttonConfirmId: PropTypes.string\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Status(props) {\n  const [remainingWords, setRemainingWords] = useState(Infinity)\n\n  let intervalID = undefined\n\n  useEffect(() => {\n    // console.log('status page loaded');\n    clearInterval(intervalID);\n    props.socket.on('server: response for start time', startTime => {\n      try {\n        // alert('setting starttime');\n        startTime = new Date(startTime);\n        const startTimeTotalSecs = getSeconds(startTime);\n        const nowSecs = getSeconds(new Date());\n        let diffSecs = nowSecs - startTimeTotalSecs;\n        // let expectedTime = diffSecs / (props.recordedProgress / props.data_length - 1)\n        // console.log(diffSecs);\n        const hours = Math.floor(diffSecs / 3600)\n        diffSecs -= hours * 3600;\n        const mins = Math.floor(diffSecs / 60);\n        diffSecs -= mins * 60;\n        const secs = diffSecs\n        const totalRecordingTime = [hours, mins, secs];\n        displayTime(totalRecordingTime);\n        intervalID = setInterval(() => tick(totalRecordingTime), 1000);\n      } catch (NotYetLoadedException) {\n        console.error(NotYetLoadedException);\n      }\n    });\n    showTime();\n    setRemainingWords(0);\n    console.log(remainingWords);\n    // setRemainingWords(totalWords - wordsCompleted)\n  }, [])\n\n  const displayTime = time => {\n    try {\n      document.getElementById('total_time_elapsed').style.color = 'rgba(255,255,255,0.8';\n      document.getElementById('total_time_elapsed').innerText =\n        '总记录时间: ' +\n        ('0' + time[0]).slice(-2) +\n        ':' +\n        ('0' + time[1]).slice(-2) +\n        ':' +\n        ('0' + time[2]).slice(-2);\n    } \n    catch(NotYetLoadedException) {\n      //\n    }\n  }\n\n  let time = undefined\n  const tick = initTime => {\n    if (!time) {\n      time = initTime;\n    } \n    // console.log('ticking')\n    let hour = time[0];\n    let min = time[1];\n    let sec = time[2];\n\n    if (sec < 60) {\n      sec += 1;\n    }\n    if (sec === 60) {\n      min += 1;\n      sec = 0;\n    }\n    if (min === 60) {\n      hour += 1;\n      min = 0;\n    }\n    time = [hour, min, sec];\n    // console.log(time);\n    try {\n      displayTime(time);\n    } catch (SomeError) {\n      console.error(SomeError);\n    }\n  };\n\n  const getSeconds = date => \n    date.getHours() * 60 * 60 +\n    date.getMinutes() * 60 +\n    date.getSeconds();\n\n  const helper_showTime = () => {\n    // console.log('asking for start time now');\n    props.socket.emit('client: ask for start time');\n  };\n\n  const showTime = () => {\n    try {\n      document.getElementById('showTimeBtn').click();\n      document.getElementById('showTimeBtn').disabled = true;\n    } catch (NotYetLoadedException) {\n      //\n    }\n  };\n\n\n\n  return (\n    <div>\n      <pre id='total_time_elapsed' style={{color: 'rgba(255,255,255,0.8'}}>总记录时间: 00:00:00</pre>\n      <button\n        onClick={helper_showTime}\n        id='showTimeBtn'\n        className='hidden_button'\n      ></button>\n    </div>\n  );\n}\n\nStatus.propTypes = {\n  // recordedProgress: PropTypes.number.isRequired,\n  // data_length: PropTypes.number.isRequired,\n  // recordGreenLight: PropTypes.bool.isRequired,\n  // helper_checkIfMobileView: PropTypes.func.isRequired,\n  socket: PropTypes.object.isRequired,\n  // totalWords: PropTypes.number.isRequired\n\n};","/**\n * **Based on: http://www.cssscript.com/demo/pure-css-css3-smooth-toggle-switch/**\n */\n\nimport React, { useEffect }from 'react'\nimport './toggle.scss'\nimport PropTypes from 'prop-types';\n\n/**\n * \n * @param {*} props \n */\nexport default function Toggle(props) {\n  useEffect(() => {\n    const toggle = document.getElementById(props.id);\n    try {\n      toggle.addEventListener('change', () => {\n        props.onChangeFunc(toggle.checked);\n      });\n      // document.getElementsByClassName('switch-wrapper')[0].addEventListener('mouseover', () => {\n      //   document.getElementsByClassName('inset-toggle')[0].classList.add('switch-hover');\n      //   console.log('hovered over')\n      // });\n      // document.getElementsByClassName('switch-wrapper')[0].addEventListener('mouseout', () => {\n      //   document.getElementsByClassName('inset-toggle')[0].classList.remove('switch-hover');\n      //   console.log('hovered out')\n      // })\n    } catch (NotYetLoadedException) {\n      //\n    }\n  }, [])\n  return (\n    <div className=\"switch-wrapper\">\n      <div className=\"switch\">\n      <div className=\"invisible_pushdown\"></div>\n        <input type=\"checkbox\" name=\"toggle\" id={props.id}  checked={props.checked} onChange={props.updateDebugMode}/>\n        <label htmlFor=\"toggle\" className=\"inset-toggle\"><i></i></label>\n      </div>  \n    </div>\n  )\n}\n\nToggle.propTypes = {\n  id: PropTypes.string.isRequired,\n  onChangeFunc: PropTypes.func.isRequired,\n  checked: PropTypes.bool.isRequired,\n  updateDebugMode: PropTypes.func.isRequired\n}","import React from 'react'\nimport './Checkmark.scss'\n\n/**\n * **Based on: https://codepen.io/ashleygalante/pen/nwoKh**\n */\nexport default function Checkmark() {\n  return (\n    <div className=\"checkmark-container\">\n      <div className=\"checkmark\">\n        <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 161.2 161.2\" enableBackground=\"new 0 0 161.2 161.2\" xmlSpace=\"preserve\">\n          <path className=\"path\" fill=\"none\" stroke=\"#FFBA49\" strokeMiterlimit=\"10\" d=\"M425.9,52.1L425.9,52.1c-2.2-2.6-6-2.6-8.3-0.1l-42.7,46.2l-14.3-16.4\n            c-2.3-2.7-6.2-2.7-8.6-0.1c-1.9,2.1-2,5.6-0.1,7.7l17.6,20.3c0.2,0.3,0.4,0.6,0.6,0.9c1.8,2,4.4,2.5,6.6,1.4c0.7-0.3,1.4-0.8,2-1.5\n            c0.3-0.3,0.5-0.6,0.7-0.9l46.3-50.1C427.7,57.5,427.7,54.2,425.9,52.1z\"/>\n          <circle className=\"path\" fill=\"none\" stroke=\"#FFBA49\" strokeWidth=\"4\" strokeMiterlimit=\"10\" cx=\"80.6\" cy=\"80.6\" r=\"62.1\"/>\n          <polyline className=\"path\" fill=\"none\" stroke=\"#FFBA49\" strokeWidth=\"6\" strokeLinecap=\"round\" strokeMiterlimit=\"10\" points=\"113,52.8 \n            74.1,108.4 48.2,86.4 \"/>\n          <circle className=\"spin\" fill=\"none\" stroke=\"#FFBA49\" strokeWidth=\"4\" strokeMiterlimit=\"10\" strokeDasharray=\"12.2175,12.2175\" cx=\"80.6\" cy=\"80.6\" r=\"73.9\"/>\n        </svg>\n      </div>\n      <p id=\"complete_message\">🔥 恭喜您完成 🔥</p>\n    </div>\n  )\n}\n","import React from 'react'\nimport './Fireworks.scss'\n\nexport default function Fireworks() {\n  return (\n    <div className=\"pyro\">\n      <div className=\"before\"></div>\n      <div className=\"after\"></div>\n      </div>\n  )\n}\n","import React from 'react'\nimport Checkmark from './Checkmark/Checkmark'\nimport Fireworks from './Fireworks/Fireworks'\nimport './CompleteAnimation.scss'\n\nexport default function CompleteAnimation() {\n  return (\n    <div className=\"CompleteAnimationBG\">\n      <Fireworks />\n      <Checkmark />\n    </div>\n  )\n}","import React from 'react'\nimport PropTypes from 'prop-types';\nimport { Line, Circle } from 'rc-progress';\n\nexport default function ProgressBar(props) {\n  const percent = ((props.curr ) / (props.total + 1) * 100).toFixed(2);\n  const alignmentStyle = props.align === 'left' ? { margin: '0' } : {};\n  return (\n    <div className=\"progress_bar\" style={alignmentStyle}>\n      <pre style={{color: props.strokeColor}}>\n        {props.title}: {props.curr} / {props.total + 1} ({percent}%)\n      </pre>\n      <div style={{height: '7px'}}></div>\n      {props.shape === 'line' &&\n      <Line\n        className=\"line-progress\"\n        percent={percent}\n        strokeWidth={props.strokeWidth}\n        trailWidth={props.strokeWidth}\n        strokeColor = {props.strokeColor}\n        trailColor='#363732'\n      />}\n      {props.shape === 'circle' &&\n      <Circle \n        className=\"circle-progress\"\n        percent={percent}\n        strokeWidth={props.strokeWidth}\n        trailWidth={props.strokeWidth}\n        strokeColor = {props.strokeColor}\n        trailColor='#363732'\n      />}\n    </div>\n  );\n}\n\nProgressBar.propTypes = {\n  curr: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  align: PropTypes.string.isRequired,\n  strokeWidth: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  shape: PropTypes.string.isRequired,\n  strokeColor: PropTypes.string.isRequired,\n};\n","/* eslint-disable no-console */\nimport React from 'react';\nimport { Helmet } from 'react-helmet'\nimport update from 'react-addons-update'\nimport qs from '../utils/qs'\nimport cogoToast from 'cogo-toast';\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport io from 'socket.io-client';\nimport { useMediaQuery } from'react-responsive'\n// scss\nimport './App.scss';\n\n// components\nimport CameraList from '../components/CameraList/CameraList';\nimport Tester from '../components/Tester/Tester';\nimport DataCollection from '../components/Table/DataCollection';\nimport Modal from '../components/Modal'\nimport Status from '../components/Status'\nimport Toggle from '../components/Toggle/Toggle'\nimport CompleteAnimation from '../components/CompleteAnimation/CompleteAnimation'\nimport ProgressBar from '../components/ProgressBar'\n\n// data\nimport sentences from '../assets/data/sentences.txt';\nimport pinyin from '../assets/data/sentences-pinyin-accent-nospecialchar.txt'\n// import sentences from '../assets/data/sentences-english-test.txt';\n\n// util\nimport ip_util from '../utils/ip'\n\n// chevron\nimport up_chevron from '../assets/svg/up-chevron.svg'\nimport down_chevron from '../assets/svg/down-chevron.svg'\n\n\nclass App extends React.Component {\n  /**\n   * **Basic Configuration**\n   */\n  sentencesPerPageInTable = 4; // sentences per page of Table\n  curr_index = qs('sentence_index'); // extracts the curr index from URL\n  ip_address = 'http://192.168.0.103:5000'; // default IP address of server\n\n  /**\n   * **CogoToast References to call to hide toasts**\n   */\n  showNoCamsRef = undefined;\n  hideServerOfflineRef = undefined;\n\n  /**\n   * **ReactJS Framework Initializing States onCreate**\n   * Constructor for main react App Component\n   * @param {object} props\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      addCamState: false,\n      connectedOrderMap: {},\n      connectedToServer: false,\n      computerID: -1,\n      computerStatus: {},\n      currSentence: '',\n      currSentenceIndex: this.curr_index ? Number(this.curr_index) : 0,\n      currPageInTable: this.curr_index\n        ? Math.floor(Number(this.curr_index) / this.sentencesPerPageInTable) + 1\n        : 1,\n      data: [],\n      detectedNumCams: 0,\n      debugMode: false,\n      ip: this.ip_address,\n      name: '',\n      numFilesSavedTotal: 0,\n      numFilesSavedInd: 0,\n      recordProgress: 0,\n      recordGreenLight: false,\n      remainingWords: 0,\n      requiredNumCams: 8,\n      sentencesPerPageInTable: this.sentencesPerPageInTable, // sentences per page\n      startTime: undefined,\n      socket: io(this.ip_address),\n      totalTime: [],\n      totalWords: 0\n    };\n  }\n\n  Desktop = ({ children }) => {\n  const isDesktop = useMediaQuery({ minWidth: 992 });\n  // if (isDesktop) {this.setState({viewMode: 'desktop'});}\n  // console.log('This is desktop mode');\n  return isDesktop ? children : null\n  }\n\n  Tablet = ({ children }) => {\n    const isTablet = useMediaQuery({ minWidth: 768, maxWidth: 991 });\n    // console.log('isTablet: ', isTablet);\n    // if (isTablet) {this.setState({viewMode: 'tablet'})}\n    return isTablet ? children : null\n  }\n  Mobile = ({ children }) => {\n    const isMobile = useMediaQuery({ maxWidth: 767 });\n    // if (isMobile) {this.setState({viewMode: 'mobile'})}\n    return isMobile ? children : null\n  }\n  Default = ({ children }) => {\n    // console.log('This is not mobile mode');\n    const isNotMobile = useMediaQuery({ minWidth: 768 });\n    // if (isNotMobile) {this.setState({viewMode: 'default'})}\n    return isNotMobile ? children : null\n  }\n\n  render() {\n    return (\n      <Router>\n        <Helmet><title>s3and0s—webcam recorder</title></Helmet>\n        {/* <Route path='/' exact component={} /> */}\n        <Route path='/admin' exact component={this.main_adminView} />\n         <div>\n          <this.Desktop>{this.main_userView()}</this.Desktop>\n          <this.Tablet>{this.main_userView()}</this.Tablet>\n          <this.Mobile>\n            {this.main_adminView()}\n            <div className='mobileAdminView' style={{textAlign: 'center'}}>\n              {/* <hr/> */}\n              {/* <p><strong>Sentence: </strong></p> */}\n              <p style={{fontSize: '0.8em'}}>句子索引: {this.state.currSentenceIndex}</p>\n              {/* <hr/> */}\n              {(this.state.pinyin) ? this.state.pinyin[this.state.currSentenceIndex]: ''}\n              <br/>\n              {this.state.data[this.state.currSentenceIndex]}\n              {/* <hr/> */}\n              <Status socket={this.state.socket}/>\n              {this.comp_totalProgress(true, 4)}\n              {/* <hr/> */}\n              {this.comp_saveProgress(true)}\n              {/* <hr/> */}\n              {this.terminal()}\n            </div>\n\n            {this.comp_bottomAdmin()}\n            </this.Mobile>\n          <this.Default>{null}</this.Default>\n        </div>\n        {this.comp_modals()}\n        {this.comp_completeAnimation()}\n      </Router>\n    );\n  }\n\n  componentDidMount() {\n    try {\n      this.helper_emitInitialSocketMessages();\n      this.readTextFile(sentences, 'data');\n      this.readTextFile(pinyin, 'pinyin');\n\n      this.initSocketListeners();\n      document.getElementById('debug_mode').checked =\n        this.state.requiredNumCams === 1;\n      window.addEventListener('keydown', this.handler_keydown);\n      window.addEventListener('keyup', this.handler_keyup);\n      if (useMediaQuery({ minWidth: 768 })) {\n        this.showNoCamsRef = this.helper_showNoCamsConnected();\n      }\n      setTimeout(() => {\n        if (\n          !document\n          .getElementsByClassName('server_status')[0]\n          .className.includes('server_online')\n        ) {\n          this.hideServerOfflineRef = this.helper_showServerNotOnline();\n        }\n      }, 1000);\n    } catch (NotYetLoadedException) {\n      // console.error(NotYetLoadedException)\n    }\n  }\n\n  terminal = () => {}\n\n  handler_hoverMouseOutDebug = () => {\n    try {\n      document.getElementsByClassName('debug-group')[0].className +=\n        ' ' + 'hideDebug';\n    } catch (NotYetLoadedException) {\n      console.error(NotYetLoadedException);\n    }\n  };\n\n  handler_hoverMouseOverDebug = () => {\n    try {\n      document\n        .getElementsByClassName('debug-group')[0]\n        .classList.remove('hideDebug');\n    } catch (NotYetLoadedException) {\n      console.error(NotYetLoadedException);\n    }\n  };\n\n  handler_hoverMouseOutBottom = () => {\n    try {\n      document.getElementsByClassName('panel_BG')[0].className +=\n        ' ' + 'hideBottom';\n    } catch (NotYetLoadedException) {\n      console.error(NotYetLoadedException);\n    }\n  };\n\n  handler_hoverMouseOverBottom = () => {\n    try {\n      document\n        .getElementsByClassName('panel_BG')[0]\n        .classList.remove('hideBottom');\n    } catch (NotYetLoadedException) {\n      console.error(NotYetLoadedException);\n    }\n  };\n\n  /**\n   * **ReactJS Framework Method**\n   */\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handler_keydown);\n  }\n\n  comp_saveProgress = override => {\n    return (qs('name') || override) && this.state.requiredNumCams !==1 ? <ProgressBar\n          title=\"视频文件已保存\"\n          curr={this.state.numFilesSavedInd}\n          total={this.state.requiredNumCams - 1}\n          align={'center'}\n          strokeWidth={17}\n          shape='circle'\n          strokeColor='lightgreen'\n        /> : <></>\n  }\n\n  /**\n   * **Component: User Page**\n   * Renders components for desktop view\n   */\n  main_userView = () => {\n    return (\n      <div className='container'>\n        {/* <span id='debug_hover_area'> */}\n          {this.comp_debug()}\n        {/* </span> */}\n        {this.comp_tester()}\n        {/* <span id='bottom_hover_area'> */}\n        \n        {this.comp_bottomAdmin(true)}\n        {/* </span> */}\n      </div>\n    );\n  };\n\n  comp_totalProgress = (override, strokeWidth) => {\n    return (qs('name') || override) ? <ProgressBar\n        shape='line'\n        title={'读完句子的进度'}\n        curr={this.state.recordProgress}\n        total={this.state.data.length - 1}\n        align={'center'}\n        strokeWidth={strokeWidth}\n        strokeColor='#3bb8ce'\n      /> : <></>\n  }\n\n  comp_bottomAdmin = (isMobile) => {\n    return <div className='contents'>\n            <div className=\"panel_BG hideBottom\">\n              <div style= {{marginTop: '-50px'}}>\n                <div style={{ width: '100vw', height: '50px', position: 'relative', top: '50px', left: '0'}} onClick={this.helper_toggleHideBottom}> </div>\n                <img style={{ position: 'relative', top: '0', left: '0'}} className='chevron' src={down_chevron}></img>\n              </div>\n              <div className='panel_container'>\n                <div className='left_panel'>{this.comp_dataCollection()}</div>\n                {isMobile &&\n                <div className='right_panel'>\n                  <h3>Cameras</h3>\n                  <div className='cameras_container'>\n                    {this.comp_cameraList()}\n                  </div>\n                </div>\n                }\n              </div>\n            </div>\n          </div>\n  }\n\n  /**\n   * **Component: Admin Page**\n   * Renders components for mobile view\n   */\n  main_adminView = () => {\n    return <div style={{ textAlign: 'center' }}>{this.comp_debug()}</div>;\n  };\n\n  /**\n   * **Component: PlaygroundPage**\n   * Renders components for experimental purposes\n   */\n  main_playground = () => {\n    return <Toggle />;\n  };\n\n  comp_debugHover = () => {};\n\n  /**\n   * **Component: Animation for Study Completion**\n   */\n  comp_completeAnimation = () => {\n    if (this.state.recordProgress + 1 === this.state.data.length) {\n      try {\n        document.getElementById('testerNextBtn').disabled = true;\n      } catch (NotYetLoadedException) {\n        //\n      }\n      return <CompleteAnimation />;\n    }\n  };\n\n  // * COMPONENT * //\n  comp_dataCollection = () => {\n    return (\n      <DataCollection\n        data={this.state.data}\n        updateName={this.updateName}\n        curr_sentence={this.state.currSentence}\n        socket={this.state.socket}\n        curr_sentence_index={this.state.currSentenceIndex}\n        curr_page={this.state.currPageInTable}\n        updatePage={this.updatePage}\n        sentencesPerPageInTable={this.state.sentencesPerPageInTable}\n      />\n    );\n  };\n\n  // * COMPONENT * //\n  comp_tester = () => {\n    return (\n      <Tester\n        updateSentence={this.updateSentence}\n        data={this.state.data}\n        curr_sentence_index={this.state.currSentenceIndex}\n        data_length={this.state.data.length}\n        first_sentence={this.state.data[this.state.currSentenceIndex]}\n        curr_sentence={this.state.currSentence}\n        socket={this.state.socket}\n        recordGreenLight={\n          this.state.recordGreenLight &&\n          this.state.numFilesSavedTotal % this.state.requiredNumCams === 0\n        }\n        debugMode={this.state.debugMode}\n        numFilesSaved={this.state.numFilesSavedTotal}\n        requiredNumCams={this.state.requiredNumCams}\n        updateGreenLightStatus={this.updateGreenLightStatus}\n        recordedProgress={this.state.recordProgress}\n        updateRecordProgress={this.updateRecordProgress}\n        totalTime={this.state.totalTime}\n        updateTotalTime={this.updateTotalTime}\n        showFileSavingLoader={this.disp_showFileSavingLoader}\n        connectedToServer={this.state.connectedToServer}\n        detectedNumCams={this.state.detectedNumCams}\n        comp_saveProgress={this.comp_saveProgress}\n        comp_totalProgress={this.comp_totalProgress}\n      />\n    );\n  };\n\n  // * COMPONENT * //\n  comp_cameraList = () => {\n    return (\n      <CameraList\n        socket={this.state.socket}\n        computerID={this.state.computerID}\n        computerStatus={this.state.computerStatus}\n        updateConnectionStatus={this.updateConnectionStatus}\n        addCamState={this.state.addCamState}\n        toggleCamState={this.helper_toggleCamState}\n        updateDetectedNumCams={this.updateDetectedNumCams}\n        addCam={this.admin_resetCams}\n      />\n    );\n  };\n\n  // * COMPONENT * //\n  comp_status = () => {\n    return (\n      <Status\n        totalWords={this.state.totalWords}\n        data_length={this.state.data.length}\n        recordedProgress={this.state.recordProgress}\n        helper_checkIfMobileView={this.helper_checkIfMobileView}\n        recordGreenLight={this.state.recordGreenLight}\n        socket={this.state.socket}\n      />\n    );\n  };\n\n  // * COMPONENT * //\n  comp_modals = () => {\n    return (\n      <div>\n        <Modal\n          modalID={'resetProgressModal'}\n          socket={this.state.socket}\n          title={'Are you sure?'}\n          message={'Resetting progress will be permanent.'}\n          buttonCancel={'Cancel'}\n          buttonConfirm={'Reset Progress'}\n          buttonConfirmId={'resetProgressBtn'}\n          toast={'Progress reset'}\n          confirmFunc={this.admin_resetProgress}\n        />\n        <Modal\n          modalID={'overallStatus'}\n          socket={this.state.socket}\n          title={'Status'}\n          onLoadFunc={this.getStatus}\n          message={this.comp_status()}\n          buttonConfirm={'Hide'}\n        />\n      </div>\n    );\n  };\n\n  updateDebugMode = () => {\n    this.setState({ debugMode: !this.state.debugMode });\n  };\n\n  // * COMPONENT * //\n  comp_debug = () => {\n    return (\n      < div className = 'debug-group hideDebug' >\n        <label className='debug_label'>Admin: </label>\n\n        {/* <button\n          onClick={() => {\n            this.helper_toggleModal('overallStatus');\n            this.getStatus();\n          }}\n          className='debug_button'\n        >\n          Status\n        </button> */}\n        <button\n          id='resetCamsBtn'\n          className='debug_button'\n          onClick={this.admin_resetCams}\n        >\n          Add Webcam\n        </button>\n        <button\n          className='debug_button'\n          onClick={() => {\n            this.helper_toggleModal('resetProgressModal');\n          }}\n        >\n          Reset Progress\n        </button>\n\n        <div className='debug_inline_group'>\n          <label className='debug_label'>Debug: </label>\n          <Toggle\n            id='debug_mode'\n            onChangeFunc={this.handler_debugToggle}\n            checked={this.state.debugMode}\n            updateDebugMode={this.updateDebugMode}\n          />\n        </div>\n       {/* {(useMediaQuery({ minWidth: 768 })) &&<br/> } */}\n        <div className='debug_inline_group'>\n          <label htmlFor='' className='debug_label'>\n            Cams:{' '}\n          </label>\n          <input\n            id='numCamsInput'\n            type='text'\n            className='debug_text_input debug_sm_input warning_message'\n            value={this.state.detectedNumCams}\n            readOnly\n          />\n        </div>\n\n        <div className='debug_inline_group'>\n            <label htmlFor='' className='debug_label'>\n            Server:{' '}\n          </label>\n          <span className='server_status'></span>\n          <input\n            id='inputServerIP'\n            type='text'\n            className='debug_text_input warning_message'\n            value={this.state.ip}\n            onChange={this.handler_IPOnChange}\n          />\n          <button\n            className='debug_button'\n            onClick={this.handler_useThisCompAsServer}\n          >\n            {' '}\n            📡{' '}\n          </button>\n        </div>\n\n\n        <div\n          style={{ width: '100%', height: '100%' }}\n          onClick={this.helper_toggleHideDebug}\n        >\n          <img className='chevron top-chevron' src={up_chevron}></img>\n          <div style={{height: '0.3em'}}></div>\n        </div>\n\n        {/* <button className='debug_button' onClick={this.admin_refreshAll}>\n          Refresh All\n        </button> */}\n\n        <button\n          onClick={this.disp_showFileSavedMessage}\n          id='showSavedFilesBtn'\n          className='hidden_button'\n        ></button>\n\n        {/* <pre hidden={this.state.numCams === 8}>\n          debug mode, remember to change num cams back to 8\n        </pre> */}\n      </div>\n    );\n  };\n\n  // * UTILITY * //\n  readTextFile(file, stateName) {\n    fetch(file)\n      .then(response => response.text())\n      .then(text => {\n        if (stateName === 'data') {\n          this.setState({ data: text.split('\\n') }, () => {\n            let currSentence = qs('sentence_index')\n              ? this.state.data[Number(qs('sentence_index'))]\n              : this.state.data[0];\n            this.setState({ currSentence }, () => {\n              // console.log(this.state.curr_sentence)\n            });\n            this.setState({\n              totalWords: this.state.data.reduce(\n                (sum, sentence) => sum + sentence.length,\n                0\n              )\n            });\n          });\n        } else {\n          this.setState({ pinyin: text.split('\\n') })\n        }\n      });\n  }\n\n  /**\n   * * UPDATE *\n   *\n   */\n  updateFilesSaved = numFiles => {\n    const successMessage =\n      numFiles % this.state.requiredNumCams === 0\n        ? ' (successful)'\n        : ' (not all saved)';\n    this.setState({\n      numFilesSavedTotal: numFiles\n    });\n    if (successMessage === ' (successful)') {\n      this.updateGreenLightStatus(true);\n    }\n    try {\n      document.getElementById('num_files_saved').innerHTML =\n        'Total Files Saved: ' + numFiles + successMessage;\n    } catch (NotYetLoadedException) {\n      // console.error(NotYetLoadedException);\n    }\n  };\n\n  handler_useThisCompAsServer = () => {\n    ip_util.clientGetIP(ip => {\n      console.log(ip);\n      if (ip.split('.').length === 4) {\n        ip = 'http://' + ip + ':5000';\n        cogoToast.loading(ip, {\n          position: 'top-right',\n          hideAfter: 3,\n          onClick: hide => {\n            hide();\n          }\n        });\n        this.helper_setServerIP(ip);\n        // if (!this.hideServerOfflineRef) {\n        //   this.hideServerOfflineRef = this.helper_showServerNotOnline();\n        // } else {\n        //   this.hideServerOfflineRef();\n        // }\n      }\n    });\n    // const [ip_v6, ip_v4] = [temp[0], temp[1]]\n    // console.log(ip_v4);\n  };\n\n  handler_IPOnChange = e => {\n    this.setState({ ip: e.target.value });\n  };\n\n  debugCogoToastOnRef = undefined;\n  debugCogoToastOffRef = undefined;\n  \n  showDebugOn = () => {\n    return cogoToast.success(<p>Debug on. <br/>Required Cams: 1</p>, { hideAfter: 1, onClick: hide => hide() });\n  }\n\n  showDebugOff = () => {\n    return cogoToast.warn(<p>Debug off. <br/>Required Cams: 8</p>, { hideAfter: 1, onClick: hide => hide() });\n  }\n\n  handler_debugToggle = debugMode => {\n    console.log('toggling debug mode');\n    this.setState({ debugMode }, () => {\n      if (debugMode) {\n        this.setState({ requiredNumCams: 1 });\n        this.debugCogoToastOnRef = this.showDebugOn();\n        {/* if (this.debugCogoToastOffRef) {this.debugCogoToastOffRef()} */}\n        {/* console.log(this.debugCogoToastOffRef); */}\n        {/* this.helper_removeHoverEventListeners(); */}\n      } else {\n        this.setState({ requiredNumCams: 8 });\n        this.debugCogoToastOffRef = this.showDebugOff();\n        {/* if (this.debugCogoToastOnRef) {this.debugCogoToastOnRef()} */}\n        {/* console.log(this.debugCogoToastOnRef); */}\n\n        // this.helper_addHoverEventListeners();\n        this.handler_hoverMouseOutBottom();\n      }\n    });\n  };\n\n  handler_fileSaveSuccess = numFiles => {\n    this.updateFilesSaved(numFiles);\n    this.setState(\n      {\n        numFilesSavedInd: this.state.numFilesSavedInd + 1\n      },\n      () => {\n        {/* console.log('this occured: ' + this.state.numFilesSavedInd + ' times.'); */}\n        if (this.state.numFilesSavedInd === this.state.requiredNumCams) {\n          {\n            /* console.log('correct number of files saved'); */ }\n          try {\n            document.getElementById('showSavedFilesBtn').click();\n            document.getElementById('showSavedFilesBtn').disabled = true;\n            this.setState({\n                numFilesSavedInd: 0\n              },\n              () => {\n                cogoToast.success(\n                  this.style_makeEmojiToastLayout(\n                    ['视频已成功保存', '可继续录'],\n                    '🔥'\n                  ), {\n                    hideAfter: 1,\n                    onClick: hide => {\n                      hide();\n                    }\n                  }\n                );\n              }\n            );\n\n            this.updateGreenLightStatus(true);\n          } catch (Exception) {\n            console.error(Exception);\n          }\n        }\n        try {\n          document.getElementById('testerNextBtn').disabled = true;\n        } catch (NotYetLoadedException) {\n          //\n        }\n        \n      }\n    );\n  };\n\n  updateDetectedNumCams = detectedNumCams => {\n    this.setState({ detectedNumCams });\n    this.state.socket.emit('client: updateTotalCams', () => [this.state.computerID, detectedNumCams]);\n    this.updateGreenLightStatus(true);\n    if (this.showNoCamsRef) {this.showNoCamsRef();}\n    try {\n      document.getElementsByClassName('debug_sm_input')[0].className +=\n        this.state.detectedNumCams > 0 ? ' serverPlaceholderConnected' : '';\n      document\n        .getElementById('numCamsInput')\n        .classList.remove('warning_message');\n    } catch (NotYetLoadedException) {\n      //\n    }\n  };\n\n  /**\n   * * UPDATE *\n   * Updates the state computerID with param id\n   * @param {string} id\n   */\n  updateCompID = id => {\n    const status = {};\n    this.setState({ computerID: id });\n    status[this.state.computerID] = [];\n    this.setState({ computerStatus: status }, () => {\n      // console.log(\"init computer status\", this.state.computerStatus);\n    });\n  };\n\n  /**\n   * * STYLE *\n   * Takes a string and finds a substring and returns a stylized version of it,\n   * specifically to add the 🖥 icon in front of the ID.\n   * @param {string} str The full string\n   * @param {string} find The particular substring to find\n   * @returns {string} The stylized string\n   */\n  style_addThisCpuIcon = (str, find) => {\n    var re = new RegExp(find, 'g');\n    return str.replace(re, '🖥: ' + find);\n  };\n\n  style_makeEmojiToastLayout = (msg, emoji) => {\n    return (\n      <div className='cogo-toast'>\n        <div className='cogo-toast-emoji-left'> {emoji}</div>\n        <div>\n          {msg[0]}\n          <br />\n          {msg[1]}\n        </div>\n        <div className='cogo-toast-emoji-right'> {emoji}</div>\n      </div>\n    );\n  };\n\n  ref_hideLoader = undefined;\n  disp_showFileSavingLoader = () => {\n    this.ref_hideLoader = cogoToast.loading(\n      this.style_makeEmojiToastLayout(['视频正在保存', '请耐心等待'], '⌛️'),\n      {\n        hideAfter: 0,\n        onClick: hide => {\n          hide();\n        }\n      }\n    );\n    // setTimeout(hideLoader, 2000);\n    // hideLoader();\n    // this.setState({ hideLoader }, () => {\n    //   console.log(hideLoader);\n    // });\n  };\n\n\n  /**\n   * Hides file saved loader\n   */\n  disp_showFileSavedMessage = () => {\n    try {\n      this.ref_hideLoader();\n    } catch (NotOnPageError) {\n      //\n    }\n  };\n\n  disp_showServerConencted = () => {\n    cogoToast.success('Server is online.', {\n      position: 'top-right',\n      hideAfter: 0,\n      onClick: hide => {\n        hide();\n      }\n    });\n    if (this.hideServerOfflineRef) this.hideServerOfflineRef();\n    try {\n      document\n        .getElementsByClassName('server_status')[0]\n        .classList.add('server_online');\n      document\n        .getElementById('inputServerIP')\n        .classList.add('serverPlaceholderConnected');\n      document\n        .getElementById('inputServerIP')\n        .classList.remove('warning_message');\n    } catch (NotYetLoadedException) {\n      //\n    }\n  }\n\n\n  /**\n   * Socket Listeners — adds socket listeners to the page to respond to \n   * messages sent from server\n   */\n  initSocketListeners = () => {\n    this.state.socket.on('server: online', () => {\n      {/* console.log('did this happen?') */}\n      {/* if (useMediaQuery({ minWidth: 768 })) { */}\n        this.disp_showServerConencted();\n      {/* } */}\n    });\n\n    this.state.socket.on('server: sync name, sentence index', data => {\n      const name = data.name;\n      const currSentenceIndex = data.currSentenceIndex;\n      {/* if (this.state.currSentenceIndex === 0 ) { */}\n      this.setState({name, currSentenceIndex});\n      {/* } */}\n    })\n\n    if (!this.hideServerOfflineRef) {\n      this.hideServerOfflineRef = this.helper_showServerNotOnline();\n    } else {\n      this.hideServerOfflineRef();\n    }\n\n    this.state.socket.on('server: disconnected', () => {\n      this.setState({ connectedToServer: false }, () => {\n        document\n          .getElementsByClassName('server_status')[0]\n          .classList.remove('server_online');\n        document\n          .getElementById('inputServerIP')\n          .classList.remove('serverPlaceholderConnected');\n      });\n    });\n\n    this.state.socket.on('server: connected', computerID => {\n      {/* console.log('detected server connected'); */}\n      {/* if (useMediaQuery({ minWidth: 768 })) { */}\n        this.disp_showServerConencted();\n      {/* } */}\n      \n      this.setState({ connectedToServer: true, computerID }, () => {\n        try {\n          document\n            .getElementById('inputServerIP')\n            .classList.add('serverPlaceholderConnected');\n        } catch(NotYetLoadedException) {\n          //\n        }\n      });\n    });\n\n    this.state.socket.on('server: connected sync id', id => {\n      if (this.updateCompID) this.updateCompID(id);\n      this.updateCompID = null;\n    });\n\n    this.state.socket.on('server: reset cams', () => {\n      this.updateGreenLightStatus(true);\n    });\n\n    this.state.socket.on('server: response for connection status', status => {\n      try {\n        document.getElementById(\n          'connection_status'\n        ).innerHTML = this.style_addThisCpuIcon(\n          JSON.stringify(status, null, 2),\n          this.state.computerID\n        );\n      } catch (NotOnPageError) {\n        //\n      }\n    });\n\n    this.state.socket.on('server: response for progress', progress => {\n      this.setState({ recordProgress: progress ? progress : 0 });\n    });\n\n    this.state.socket.on('server: response for numFilesSaved', numFiles => {\n      this.updateFilesSaved(numFiles);\n    });\n\n    this.state.socket.on('server: save files successful', numFiles => {\n      this.handler_fileSaveSuccess(numFiles);\n    });\n\n    this.state.socket.on('server: computer connected order', connectedOrder => {\n      this.setState({\n        connectedOrderMap: update(this.state.connectedOrderMap, {\n          $merge: connectedOrder\n        })\n      });\n    });\n\n    const refreshRates = [0, 666, 1332];\n    this.state.socket.on('server: refresh all', () => {\n      const conectedOrderNum = this.state.connectedOrderMap[\n        this.state.computerID\n      ];\n      const indexRefresh = conectedOrderNum % 3;\n      const time = refreshRates[indexRefresh];\n      setTimeout(() => {\n        window.location.reload(false);\n      }, time);\n    });\n  };\n\n  async pingServer() {\n    try {\n      const serverID = this.state.socket.io.opts.hostname;\n      const response = await fetch(serverID, { mode: 'no-cors' });\n      if (!response.ok) {\n        console.error('no response from server');\n      } else {\n        console.log('connection successful');\n      }\n    } catch (ServerPingFailedException) {\n      console.error(ServerPingFailedException);\n    }\n  }\n\n  /**\n   * **Update: Sentence**\n   * Sent as a prop to components to update app-level state of\n   * curr_sentence_index, and updates server with new index. It also updates\n   * url query without refreshing to reflect current index.\n   * @param {string} curr_sentence\n   */\n  updateSentence = currSentence => {\n    if (currSentence === '$next') {\n      this.setState(\n        { currSentenceIndex: this.state.currSentenceIndex + 1 },\n        () => {\n          this.updateSentence(this.state.data[this.state.currSentenceIndex]);\n          this.state.socket.emit('client: update sentence_index', {\n            name: qs('name'),\n            currSentenceIndex: this.state.currSentenceIndex\n          });\n        }\n      );\n    } else if (currSentence === '$prev') {\n      this.setState(\n        {\n          currSentenceIndex: Math.max(this.state.currSentenceIndex - 1, 0)\n        },\n        () => {\n          this.updateSentence(this.state.data[this.state.currSentenceIndex]);\n          this.state.socket.emit('client: update sentence_index', {\n            name: qs('name'),\n            currSentenceIndex: this.state.currSentenceIndex\n          });\n        }\n      );\n    } else {\n      window.history.pushState(\n        null,\n        null,\n        '?name=' +\n          qs('name') +\n          '&sentence_index=' +\n          this.state.currSentenceIndex\n      );\n      // console.log(curr_sentence);\n      this.setState({\n        currSentence,\n        currPageInTable:\n          Math.floor(\n            Number(this.state.currSentenceIndex) / this.state.sentencesPerPageInTable\n          ) + 1\n      });\n    }\n  };\n\n  updatePage = new_page => {\n    if (new_page === 0) {\n      // do nothing\n    }\n    console.log('update page', new_page);\n    this.setState({\n      currPageInTable: new_page >= 1 ? new_page : 1\n    });\n  };\n\n  updateRecordProgress = currSentenceIndex => {\n    // { <sentence_index> : <bool: recorded/not> }\n    this.setState(\n      {\n        recordProgress: currSentenceIndex\n      },\n      () => {\n        this.state.socket.emit(\n          'client: update recording progress',\n          currSentenceIndex\n        );\n      }\n    );\n  };\n\n  updateConnectionStatus = recordingStatus => {\n    if (this.state.computerStatus[this.state.computerID]) {\n      const status = {};\n      status[this.state.computerID] = recordingStatus;\n      this.setState({ computerStatus: status }, () => {});\n      this.state.socket.emit('client: update recording status', status);\n    }\n    this.getStatus();\n  };\n\n  updateGreenLightStatus = bool => {\n    this.setState({ recordGreenLight: bool });\n  };\n\n  updateTotalTime = time => {\n    this.setState({ totalTime: time });\n  };\n\n  getStatus = () => {\n    this.state.socket.emit('client: ping for connection status');\n    this.state.socket.emit('client: ping for numFilesSaved');\n    this.state.socket.emit('client: ping for progress');\n  };\n\n  admin_resetCams = () => {\n    // cogoToast.info('Adding Cam', {hideAfter: 1})\n    // this.state.socket.emit('client: stop cams');\n    // this.updateGreenLightStatus(true);\n    this.state.socket.emit('client: reset cams');\n    try {\n      document.getElementById('addCamBtn').click();\n    } catch (NotYetLoadedException) {\n      //\n    }\n    this.state.socket.emit('client: dummy vid, do not save');\n    // cogoToast.info('Cams are reset', { hideAfter: 0.3 });\n    // setTimeout(() => document.getElementById('resetCamsBtn').classList.remove('btn-active'), 1000);\n  };\n\n  admin_refreshAll = () => {\n    this.state.socket.emit('client: refresh all');\n  };\n\n  admin_resetProgress = () => {\n    this.state.socket.emit('client: update recording progress', 0);\n    this.state.socket.emit('client: delete total time');\n    this.state.socket.emit('client: reset total files');\n    this.state.socket.emit('client: save total start time', new Date());\n    window.location = window.location.origin + window.location.pathname;\n    this.state.socket.emit('client: save total time', [0, 0, 0]);\n  };\n\n  helper_emitInitialSocketMessages = () => {\n    if (!this.helper_checkIfMobileView) {\n      this.state.socket.emit('client: update sentence_index', {\n        name: qs('name'),\n        currSentenceIndex: this.state.currSentenceIndex\n      });\n    } else {\n      this.state.socket.emit('client: ask for recording status');\n    }\n    this.state.socket.emit('client: check for progress');\n    this.state.socket.emit('client: ask for sync id');\n  };\n\n  helper_toggleModal = id => {\n    document.getElementById(id).click();\n  };\n\n  helper_checkIfMobileView = () => {\n    return window.location.href.includes('mobile');\n  };\n\n  helper_showNoCamsConnected = () => {\n    return cogoToast.warn('No Webcams', {\n      hideAfter: 0,\n      position: 'top-left',\n      onClick: this.admin_resetCams\n    });\n  };\n\n  helper_showServerNotOnline = () => {\n    {/* console.log('no server'); */}\n    return cogoToast.warn('Server is offline', {\n      hideAfter: 0,\n      position: 'top-right',\n      onClick: hide => {\n        this.handler_useThisCompAsServer();\n        hide();\n      }\n    });\n  };\n\n  helper_setServerIP = ip => {\n    this.state.socket.disconnect();\n    try {\n      document\n        .getElementsByClassName('server_status')[0]\n        .classList.remove('server_online');\n      document\n        .getElementById('inputServerIP')\n        .classList.remove('serverPlaceholderConnected');\n    } catch (NotYetLoadedException) {\n      //\n    }\n    this.setState({\n      socket: io(ip),\n      ip: ip\n    });\n    this.state.socket.emit('client: check server connection');\n    // if (hideLoadServer) {hideLoadServer()}\n    setTimeout(() => {\n      if (\n        !document\n          .getElementsByClassName('server_status')[0]\n          .className.includes('server_online')\n      ) {\n        this.hideServerOfflineRef = this.helper_showServerNotOnline();\n      }\n    }, 3000);\n    this.initSocketListeners();\n  };\n\n  helper_addHoverEventListeners = () => {\n    const debugHoverArea = document.getElementById('debug_hover_area');\n    const bottomHoverArea = document.getElementById('bottom_hover_area');\n    debugHoverArea.addEventListener(\n      'mouseout',\n      this.handler_hoverMouseOutDebug\n    );\n    debugHoverArea.addEventListener(\n      'mouseover',\n      this.handler_hoverMouseOverDebug\n    );\n    bottomHoverArea.addEventListener(\n      'mouseout',\n      this.handler_hoverMouseOutBottom\n    );\n    bottomHoverArea.addEventListener(\n      'mouseover',\n      this.handler_hoverMouseOverBottom\n    );\n  };\n\n  helper_removeHoverEventListeners = () => {\n    const debugHoverArea = document.getElementById('debug_hover_area');\n    const bottomHoverArea = document.getElementById('bottom_hover_area');\n    debugHoverArea.removeEventListener(\n      'mouseout',\n      this.handler_hoverMouseOutDebug\n    );\n    debugHoverArea.removeEventListener(\n      'mouseover',\n      this.handler_hoverMouseOverDebug\n    );\n    bottomHoverArea.removeEventListener(\n      'mouseout',\n      this.handler_hoverMouseOutBottom\n    );\n    bottomHoverArea.removeEventListener(\n      'mouseover',\n      this.handler_hoverMouseOverBottom\n    );\n    this.handler_hoverMouseOverBottom();\n  };\n\n  helper_toggleHideDebug = () => {\n    {/* console.log('toggling'); */}\n    try {\n      if (\n        document\n          .getElementsByClassName('debug-group')[0]\n          .className.includes('hideDebug')\n      ) {\n        this.handler_hoverMouseOverDebug();\n      } else {\n        this.handler_hoverMouseOutDebug();\n      }\n    } catch (NotYetLoadedException) {\n      //\n    }\n  };\n\n  helper_toggleHideBottom = () => {\n    console.log('toggling hide bottom');\n    try {\n      if (\n        document\n          .getElementsByClassName('panel_BG')[0]\n          .className.includes('hideBottom')\n      ) {\n        this.handler_hoverMouseOverBottom();\n      } else {\n        this.handler_hoverMouseOutBottom();\n      }\n    } catch (NotYetLoadedException) {\n      //\n    }\n  };\n\n  helper_toggleCamState = () => {\n    this.setState({ addCamState: !this.state.addCamState });\n  };\n\n  handler_keyup() {\n    for (const btn of document.getElementsByClassName('debug_button')) {\n      btn.classList.remove('btn-active');\n    }\n  }\n\n  handler_keydown = event => {\n    let key = event.key;\n    const inputServerIP = document.getElementById('inputServerIP');\n\n    if (\n      [' ', 'ArrowLeft', 'ArrowRight', 'Escape', 'Enter', 's'].includes(key)\n    ) {\n      try {\n        if (key === ' ') {\n          document.getElementById('testerRecordBtn').click();\n          event.preventDefault();\n        } else if (key === 'ArrowLeft') {\n          if (document.activeElement !== inputServerIP) {\n            document.getElementById('testerPrevBtn').click();\n            event.preventDefault();\n          }\n        } else if (key === 'ArrowRight') {\n          if (document.activeElement !== inputServerIP) {\n            document.getElementById('testerNextBtn').click();\n            event.preventDefault();\n          }\n        } else if (key === 'Escape') {\n          document.getElementById('resetCamsBtn').click();\n          event.preventDefault();\n        } else if (key === 'Enter') {\n          console.log('detected enter key');\n          if (document.getElementsByClassName('modali-button-destructive')[0]) {\n            document\n              .getElementsByClassName('modali-button-destructive')[0]\n              .click();\n            this.admin_resetProgress();\n          }\n          if (document.activeElement === inputServerIP) {\n            this.helper_setServerIP(inputServerIP.value);\n            cogoToast.info('Updated IP: ' + inputServerIP.value, {\n              onClick: hide => {\n                hide();\n              }\n            });\n            event.preventDefault();\n          }\n        } else if (key === 's') {\n          {/* if (document.activeElement.nodeName.toLowerCase() !== 'input') */}\n            {/* this.helper_toggleModal('overallStatus'); */}\n        }\n      } catch (NotYetLoadedException) {\n        // console.error(NotYetLoadedException);\n      }\n    }\n  };\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App.js';\n\nReactDOM.render(<App />, document.getElementById('root'));","module.exports = __webpack_public_path__ + \"static/media/collapse-chevron.126ea5d6.svg\";","module.exports = __webpack_public_path__ + \"static/media/expand-chevron.fd7409a7.svg\";","module.exports = __webpack_public_path__ + \"static/media/beg.565428a5.svg\";","module.exports = __webpack_public_path__ + \"static/media/end.b927e101.svg\";","module.exports = __webpack_public_path__ + \"static/media/sentences.16736696.txt\";","module.exports = __webpack_public_path__ + \"static/media/sentences-pinyin-accent-nospecialchar.d1ccd39d.txt\";","const os = require('os');\nconst ifaces = os.networkInterfaces();\n\nconst nodeGetIP = () => {\n  let address = undefined;\n  Object.keys(ifaces).forEach(function (ifname) {\n    ifaces[ifname].forEach(function (iface) {\n      if ('IPv4' !== iface.family || iface.internal !== false) {\n        // skip over internal (i.e. 127.0.0.1) and non-ipv4 addresses\n        return;\n      }\n      if (ifname === 'en0') {\n        address = iface.address;\n      }\n    });\n  });\n  console.log(address);\n  return address;\n}\n\nconst clientGetIP = onNewIP => { //  onNewIp - your listener function for new IPs\n  var myPeerConnection = window.RTCPeerConnection || window.mozRTCPeerConnection || window.webkitRTCPeerConnection; //compatibility for firefox and chrome\n  var pc = new myPeerConnection({\n      iceServers: []\n    }),\n    noop = function () {},\n    localIPs = {},\n    ipRegex = /([0-9]{1,3}(\\.[0-9]{1,3}){3}|[a-f0-9]{1,4}(:[a-f0-9]{1,4}){7})/g;\n\n  function ipIterate(ip) {\n    if (!localIPs[ip]) onNewIP(ip);\n    localIPs[ip] = true;\n  }\n  pc.createDataChannel(\"\"); //create a bogus data channel\n  pc.createOffer(function (sdp) {\n    sdp.sdp.split('\\n').forEach(function (line) {\n      if (line.indexOf('candidate') < 0) return;\n      line.match(ipRegex).forEach(ipIterate);\n    });\n    pc.setLocalDescription(sdp, noop, noop);\n  }, noop); // create offer and set local description\n  pc.onicecandidate = function (ice) { //listen for candidate events\n    if (!ice || !ice.candidate || !ice.candidate.candidate || !ice.candidate.candidate.match(ipRegex)) return;\n    ice.candidate.candidate.match(ipRegex).forEach(ipIterate);\n  };\n}\n\nmodule.exports = {\n  nodeGetIP,\n  clientGetIP\n}","module.exports = __webpack_public_path__ + \"static/media/up-chevron.fc2195aa.svg\";","module.exports = __webpack_public_path__ + \"static/media/down-chevron.61cf0702.svg\";"],"sourceRoot":""}