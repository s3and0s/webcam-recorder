{"version":3,"sources":["utils/qs.js","components/Webcam/Webcam.js","components/CameraList/CameraList.js","components/NameField/NameField.js","components/Tester/InProcessScreen.js","components/ProgressBar.js","components/Tester/Tester.js","components/Table/TableHeader.js","components/Table/TableRow.js","components/Table/TableData.js","components/Table/PageNum.js","components/Table/PageInput.js","components/Table/TableFooter.js","components/Table/Table.js","components/Table/DataCollection.js","components/Modal.js","components/Status.js","components/Toggle/Toggle.js","components/CompleteAnimation/Checkmark/Checkmark.js","components/CompleteAnimation/Fireworks/Fireworks.js","components/CompleteAnimation/CompleteAnimation.js","app/App.js","index.js","assets/svg/collapse-chevron.svg","assets/svg/expand-chevron.svg","assets/svg/beg.svg","assets/svg/end.svg","assets/data/sentences.txt","utils/ip.js","assets/svg/up-chevron.svg","assets/svg/down-chevron.svg"],"names":["qs","id","parsedUrl","URL","window","location","href","searchParams","has","get","Webcam","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isRecording","recorder","videoSrc","videoEle","startTime","video","React","createRef","today","Date","getFullYear","getMonth","getDate","getTime","react_default","a","createElement","className","onClick","startRecording","controls","autoPlay","playsInline","muted","ref","props","videoRef","name","Component","CameraList","_useState","useState","_useState2","slicedToArray","availableCams","setAvailableCams","_useState3","_useState4","recordingStatus","setRecordingStatus","_useState5","_useState6","availableMics","setAvailableMics","_useState7","_useState8","pluggedInDevices","setPluggedInDevices","helper_extractRelevantCamInfo","device","camera_info","deviceId","label","groupId","initCams","navigator","mediaDevices","enumerateDevices","then","devices","videoDevices","micDevices","numCams","num","reduce","accumulator","kind","updateDetectedNumCams","helper_getNumCams","console","log","map","toLowerCase","includes","indexOf","push","helper_addToMicDevices","videodevices","devicePrior","filter","cam","mic_info","helper_addToVideoDevices","document","getElementById","click","disabled","catch","err","message","Array","prototype","diff","i","startFaceTimeCam","faceTimeDevice","defaultMic","cogoToast","success","hideAfter","hide","addNewCamMic","resolve","undefined","Promise","checkIfMac","Exception","allDevices","detectedTwoDevices","idAoni","newPluggedInID","length","warn","_getNewMicCam","newCam","newMic","error","getNewMicCam","_getNewMicCam2","newMicID","newCamDevice","temp","substring","position","initCamsDummy","stopAllCams","startAllCams","getUserMedia","audio","exact","frameRate","ideal","width","height","camera","RecordRTC","recorderType","MediaStreamRecorder","type","desiredSampRate","numberOfAudioChannels","disableLogs","getState","current","srcObject","NotYetLoadedException","triggerRecordStatusUpdate","dummy","stopRecording","blob","getBlob","socket","emit","sentence_index","camera_id","updateConnectionStatus","resumeAllCams","_unused","resumeRecording","useEffect","addCamState","on","addCam","comp_camsList","components_Webcam_Webcam","key","debug","debugControls","style","marginTop","renderCams","NameField","saveName","value","url_state","history","pushState","updateTesterContents","updateGreenLightStatus","isNameEmpty","replace","detectEnter","e","innerText","which","startBtn","buttons","placeholder","onKeyPress","autoFocus","required","InProcessScreen","recording","setRecordState","done_recording","setDoneRecording","reset_state","reset","nameSet","setName","updateSentence","data","getRecordState","curr_sentence_index","showFileSavingLoader","stopTimer","updateRecordProgress","record","startTimer","displaySentenceToBeRead","debugMode","recordedYet","recordedProgress","disableNextButtonIfCurrNotRead","emoji","sentence","line1","line2","msg","makeEmojiLayout","recordedClassName","fontSize","recordTimeEle","recordTimeMsg","transition","color","recordGreenLight","numFilesSaved","requiredNumCams","connectedToServer","text","data_length","detectedNumCams","NameField_NameField_NameField","getContents","ProgressBar","percent","curr","total","toFixed","alignmentStyle","align","margin","es","strokeWidth","trailWidth","strokeColor","trailColor","Tester","intervalID","setIntervalID","clearInterval","innerHTML","time","setInterval","hour","min","sec","slice","createInterval","curr_sentence","hidden","TableHeader","TableRow","getClassOfRowItem","read","index","TableData","updateDataOnPageChange","_this2","page","curr_page","max_per_page","beg","end","rowItems","TableRow_TableRow","PageNum","selected","updatePage","PageInput","handleChange","event","Number","target","handleSubmit","preventDefault","onSubmit","htmlFor","onChange","TableFooter","page_num","mid_point","Math","floor","max_page","total_data","nums_list","from","x","PageNum_PageNum","PageInput_PageInput","src","alt","prev","next","Table","TableHeader_TableHeader","TableData_TableData","TableFooter_TableFooter","DataCollection","Table_Table_Table","Modal","_useModali","useModali","animated","title","dist_default","Button","buttonCancel","isStyleCancel","toggleCompleteModal","buttonConfirm","isStyleDestructive","confirmFunc","toast","info","_useModali2","completeModal","onLoadFunc","getElementsByClassName","modalID","Status","Infinity","remainingWords","setRemainingWords","startTimeTotalSecs","getSeconds","diffSecs","hours","mins","totalRecordingTime","displayTime","tick","showTime","initTime","SomeError","date","getHours","getMinutes","totalWords","helper_checkIfMobileView","Toggle","toggle","addEventListener","onChangeFunc","checked","updateDebugMode","Checkmark","version","xmlns","xlink","y","viewBox","enableBackground","xmlSpace","fill","stroke","strokeMiterlimit","d","cx","cy","r","strokeLinecap","points","strokeDasharray","Fireworks","CompleteAnimation","Fireworks_Fireworks","Checkmark_Checkmark","App","per_page","curr_index","ip_address","showNoCamsRef","hideServerOfflineRef","helper_addHoverEventListeners","debugHoverArea","bottomHoverArea","handler_hoverMouseOutDebug","handler_hoverMouseOverDebug","handler_hoverMouseOutBottom","handler_hoverMouseOverBottom","helper_removeHoverEventListeners","removeEventListener","classList","remove","helper_toggleHideDebug","helper_toggleHideBottom","main_userView","comp_debug","comp_tester","down_chevron","comp_dataCollection","comp_cameraList","main_adminView","textAlign","main_playground","comp_debugHover","comp_completeAnimation","CompleteAnimation_CompleteAnimation","DataCollection_DataCollection","updateName","components_Tester_Tester","first_sentence","numFilesSavedTotal","totalTime","updateTotalTime","disp_showFileSavingLoader","computerID","computerStatus","toggleCamState","helper_toggleCamState","admin_resetCams","comp_status","comp_modals","buttonConfirmId","admin_resetProgress","getStatus","setState","helper_toggleModal","handler_debugToggle","readOnly","ip","handler_IPOnChange","handler_useThisCompAsServer","up_chevron","disp_showFileSavedMessage","updateFilesSaved","numFiles","successMessage","ip_util","clientGetIP","split","loading","helper_setServerIP","handler_fileSaveSuccess","numFilesSavedInd","style_makeEmojiToastLayout","updateCompID","status","style_addThisCpuIcon","str","find","re","RegExp","ref_hideLoader","NotOnPageError","initSocketListeners","add","helper_showServerNotOnline","JSON","stringify","progress","connectedOrder","connectedOrderMap","update","$merge","refreshRates","conectedOrderNum","setTimeout","reload","max","new_page","bool","admin_refreshAll","origin","helper_emitInitialSocketMessages","helper_showNoCamsConnected","disconnect","io","handler_keydown","inputServerIP","activeElement","react_router_dom","react_router","path","component","readTextFile","sentences","handler_keyup","file","_this3","fetch","response","sum","serverID","opts","hostname","mode","ok","_context","t0","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","return","ReactDOM","render","src_app_App","module","exports","__webpack_require__","p","ifaces","require","networkInterfaces","nodeGetIP","address","keys","forEach","ifname","iface","family","internal","onNewIP","pc","RTCPeerConnection","mozRTCPeerConnection","webkitRTCPeerConnection","iceServers","noop","localIPs","ipRegex","ipIterate","createDataChannel","createOffer","sdp","line","match","setLocalDescription","onicecandidate","ice","candidate"],"mappings":"ufAsBeA,EARJ,SAASC,GAClB,IAAIC,EAAY,IAAIC,IAAIC,OAAOC,SAASC,MACxC,QAAIJ,EAAUK,aAAaC,IAAIP,IACtBC,EAAUK,aAAaE,IAAIR,4DCkCvBS,sBA9Cb,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACZC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QACKI,MAAQ,CACXC,aAAa,EACbC,SAAU,KACVC,SAAU,KACVC,SAAU,KACVC,UAAW,QAEbZ,EAAKa,MAAQC,IAAMC,YATPf,gFAYZ,IAAIgB,EAAQ,IAAIC,KAQhB,OANED,EAAME,cACN,KACCF,EAAMG,WAAa,GACpB,IACAH,EAAMI,UAEM,IADHJ,EAAMK,2CAMjB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWC,QAASvB,KAAKwB,gBACtCL,EAAAC,EAAAC,cAAA,SACEC,UAAU,MACVG,UAAQ,EACRC,UAAQ,EACRC,aAAW,EACXC,OAAK,EACLC,IAAK7B,KAAK8B,MAAMC,WAElBZ,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAatB,KAAK8B,MAAME,cApCxBrB,IAAMsB,6BCKZ,SAASC,EAAWJ,GAAO,IAAAK,EACEC,mBAAS,IADXC,EAAAvC,OAAAwC,EAAA,EAAAxC,CAAAqC,EAAA,GACjCI,EADiCF,EAAA,GAClBG,EADkBH,EAAA,GAAAI,EAEML,mBAAS,+BAFfM,EAAA5C,OAAAwC,EAAA,EAAAxC,CAAA2C,EAAA,GAEjCE,EAFiCD,EAAA,GAEhBE,EAFgBF,EAAA,GAAAG,EAGET,mBAAS,IAHXU,EAAAhD,OAAAwC,EAAA,EAAAxC,CAAA+C,EAAA,GAGjCE,EAHiCD,EAAA,GAGlBE,EAHkBF,EAAA,GAAAG,EAIQb,mBAAS,IAJjBc,EAAApD,OAAAwC,EAAA,EAAAxC,CAAAmD,EAAA,GAIjCE,EAJiCD,EAAA,GAIfE,EAJeF,EAAA,GAMlCG,EAAgC,SAAAC,GACpC,MAAO,CACLC,YAAa,CACXpE,GAAImE,EAAOE,SACXC,MAAOH,EAAOG,MACdC,QAASJ,EAAOI,SAElB7B,IAAKlB,IAAMC,YACXN,SAAU,OA8BRqD,EAAW,WACVC,UAAUC,cAAiBD,UAAUC,aAAaC,iBAGrDF,UAAUC,aAAaC,mBAAmBC,KAAK,SAAAC,GAC7C,IAAIC,EAAe,GACfC,EAAa,GACXC,EAdc,SAAAH,GACxB,IAAMI,EAAMJ,EAAQK,OAAO,SAACC,EAAahB,GACvC,MAAuB,eAAhBA,EAAOiB,KAAwBD,EAAc,EAAIA,GACvD,GAEH,OADAxC,EAAM0C,sBAAsBJ,GACrBA,EASaK,CAAkBT,GAElCU,QAAQC,IAAI,4BAA8BR,GAC1CH,EAAQY,IAAI,SAAStB,GAanB,MAZoB,eAAhBA,EAAOiB,OAENjB,EAAOG,MAAMoB,cAAcC,SAAS,YACpCxB,EAAOG,MAAMoB,cAAcC,SAAS,mBACpCxB,EAAOG,MAAMoB,cAAcC,SAAS,aA1BlB,SAACxB,EAAQY,GAClCA,EAAWa,QAAQzB,EAAOE,UAAY,GACxCU,EAAWc,KAAK1B,GA0BR2B,CAAuB3B,EAAQY,IAGf,eAAhBZ,EAAOiB,MA/Cc,SAACjB,EAAQ4B,GACxC5B,EAASD,EAA8BC,GACvCoB,QAAQC,IAAIpC,GACZ,IAAM4C,EAAc5C,EAAc6C,OAAO,SAAAC,GACvC,OAAOA,EAAI9B,YAAYpE,KAAOmE,EAAOC,YAAYpE,KAChD,GACHuF,QAAQC,IAAIQ,GACRA,GACFT,QAAQC,IAAI,sBACZrB,EAAOgC,SAAWH,EAAYG,WAE9BZ,QAAQC,IAAI,0BACZrB,EAAOgC,SAAWvC,EAAc,IAElCmC,EAAaF,KAAK1B,GAkCViC,CAAyBjC,EAAQW,GAE5B,OAETjB,EAAiBkB,GACjB1B,EAAiByB,GAEjBuB,SAASC,eAAe,YAAYC,QACpCF,SAASC,eAAe,YAAYE,UAAW,IAGhDC,MAAM,SAASC,GACdnB,QAAQC,IAAIkB,EAAI7D,KAAO,KAAO6D,EAAIC,WA/BpCpB,QAAQC,IAAI,sCA0ChBoB,MAAMC,UAAUC,KAAO,SAAS7E,GAC9B,OAAOpB,KAAKoF,OAAO,SAASc,GAC1B,OAAO9E,EAAE2D,QAAQmB,GAAK,KAI1B,IA0CMC,EAAmB,SAACC,EAAgBC,GACxC,GAAID,EAAgB,CAClB,IAAM9C,EAASD,EAA8B+C,GAC7C9C,EAAOgC,SAAWe,EAAW7C,SAC7BhB,EAAiB,CAACc,IAClBkC,SAASC,eAAe,YAAYE,UAAW,EAC/CH,SAASC,eAAe,YAAYC,QACpCF,SAASC,eAAe,YAAYE,UAAW,EAC/CH,SAASC,eAAe,YAAYC,QACpCY,IAAUC,QAAQ,8BAA+B,CAC/CC,UAAW,GACXjF,QAAS,SAAAkF,GACPA,SAMFC,EAAe,WACnB,KApCiB,SAACC,GAClB,IAAIP,OAAiBQ,EACjBP,OAAaO,EACV,IAAIC,QAAQ,WACjBjD,UAAUC,aAAaC,mBAAmBC,KAAK,SAAAC,GAC7CoC,EAAiBpC,EAAQoB,OAAO,SAAA9B,GAC9B,OAAOA,EAAOG,MAAMoB,cAAcC,SAAS,cAE7CuB,EAAarC,EAAQoB,OAAO,SAAA9B,GAC1B,MAA2B,YAApBA,EAAOE,aAEfO,KAAK,WACN4C,EAAQP,EAAe,GAAIC,EAAW,QAyBxCS,CAAWX,GACX,MAAOY,IAGTnD,UAAUC,aAAaC,mBAAmBC,KAAK,SAAAC,GAC7C,IAAMgD,EAAahD,EAAQoB,OAAO,SAAA9B,GAChC,OACEA,EAAOG,MAAMoB,cAAcC,SAAS,UACnCxB,EAAOG,MAAMoB,cAAcC,SAAS,mBACpCxB,EAAOG,MAAMoB,cAAcC,SAAS,aAGrCmC,GAAqB,EAEnBC,EAASF,EAAWpC,IAAI,SAAAtB,GAC5B,OAAOA,EAAOE,WAKV2D,EAAiBD,EAAOjB,KAAK9C,GAWnC,GAV8B,IAA1BgE,EAAeC,OAEjBd,IAAUe,KAAK,kCAAmC,CAACb,UAAW,IAC3B,IAA1BW,EAAeC,SACxBH,GAAqB,GAMnBA,EAAoB,KAAAK,EA7FP,SAACH,EAAgBH,GACpC,IAAMO,EAASP,EAAW5B,OAAO,SAAA9B,GAC/B,OACE6D,EAAepC,QAAQzB,EAAOE,WAAa,GAC3B,eAAhBF,EAAOiB,OAILiD,EAASR,EAAW5B,OAAO,SAAA9B,GAC/B,OACE6D,EAAepC,QAAQzB,EAAOE,WAAa,GAC3B,eAAhBF,EAAOiB,OAWX,OARIiD,EAAOJ,OAAS,GAClB1C,QAAQ+C,MAAM,8BAEZF,EAAOH,OAAS,GAClB1C,QAAQ+C,MAAM,8BAIT,CAFUD,EAAO,GAAGhE,SAET+D,EAAO,IAwEUG,CAAaP,EAAgBH,GADtCW,EAAA7H,OAAAwC,EAAA,EAAAxC,CAAAwH,EAAA,GACjBM,EADiBD,EAAA,GACPE,EADOF,EAAA,GAMtB,GAJAE,EAAexE,EAA8BwE,IACzBtF,EAAc6C,OAAO,SAAAC,GACvC,OAAOA,EAAI9B,YAAYpE,KAAO0I,EAAatE,YAAYpE,KACtD,GACe,CAChB0I,EAAavC,SAAWsC,EACxB,IAAIE,EAAOvF,EACXuF,EAAK9C,KAAK6C,GACVrF,EAAiBsF,GAUjBxB,IAAUC,QAAQ,WAAasB,EAAatE,YAAYpE,GAAG4I,UAAU,EAAG,GAAK,UAAW,CACtFvB,UAAW,EACXwB,SAAU,WACVzG,QAAS,SAAAkF,GAAI,OAAIA,OAEnBjB,SAASC,eAAe,YAAYE,UAAW,EAC/ChC,IACAP,EAAoB8D,OAGvBnD,KAAK,WACJyB,SAASC,eAAe,YAAYE,UAAW,EAC/CH,SAASC,eAAe,YAAYC,WAW1C,IAAMuC,EAAgB,WACpBC,GAAY,IAGRC,EAAe,WACnB,IAAML,EACc,gCAApBnF,EAAoD,GAAKA,EAEzDJ,EAAcqC,IAAI,SAAAS,GA+Cd,OA7CGA,EAAIC,UACPZ,QAAQ+C,MAAM,+BAEhB7D,UAAUC,aACPuE,aAAa,CACZC,MAAO,CACL7E,SAAU,CAAC8E,MAAQjD,EAAIC,SAAYD,EAAIC,SAAW,YAEpD5E,MAAO,CACL6H,UAAW,CAACD,MAAO,GAAIE,MAAO,IAC9BC,MAAO,CAACD,MAAO,MACfE,OAAQ,CAACF,MAAO,MAChBhF,SAAU6B,EAAG,YAAgBlG,MAGhC4E,KAAK,SAAA4E,GAGJ,IAAIrI,EAAWsI,IAAUD,EAAQ,CAC/BE,aAAcC,sBACdC,KAAM,QACNR,UAAW,GACXS,gBAAiB,KACjBP,MAAO,KACPC,OAAQ,KACRO,sBAAuB,EACvBC,aAAa,IAEf,GAA4B,cAAxB5I,EAAS6I,WAA4B,CACvC7I,EAASqI,OAASA,EAClBtD,EAAG,SAAe/E,EAClB,IAAII,EAAQ2E,EAAG,IACf,IACE3E,EAAM0I,QAAQC,UAAYV,EAC1B,MAAOW,IAIThJ,EAASkB,iBAEX+H,EAA0BzB,EAAMxH,EAAU+E,KAE3CO,MAAM,SAAA6B,GACL/C,QAAQ+C,MAAMA,KAETlF,KAIP2F,EAAc,SAACsB,GACnB,IAAM1B,EACgB,gCAApBnF,EAAoD,GAAKA,EAE3DJ,EAAcqC,IAAI,SAAAS,GAChB,IAAI/E,EAAW+E,EAAG,SAuBlB,OAtBiB,OAAb/E,IACFA,EAASmJ,cAAc,WACrB,IAAIC,EAAOpJ,EAASqJ,UACpBjF,QAAQC,IACN,mBACA,mCACA+E,IAEY,IAAVF,EACF1H,EAAM8H,OAAOC,KAAK,oBAAqB,CACrC7H,KAAM9C,EAAG,QACT4K,eAAgB5K,EAAG,kBACnB6K,UAAW1E,EAAG,YAAgBlG,GAC9BuK,KAAMA,IAGRhF,QAAQC,IAAI,uCAIhB4E,EAA0BzB,EAAMxH,EAAU+E,IAErC9C,KAILgH,EAA4B,SAACzB,EAAMxH,EAAU+E,GACjD,IACEyC,EAAKzC,EAAG,YAAgBlG,GAAG4I,UAAU,EAAG,KAAOzH,EAAS6I,WACxDvG,EAAmBkF,GACnBhG,EAAMkI,uBAAuBlC,GAC7B,MAAOwB,GACPhD,IAAUe,KAAK,yBAA0B,CACvCb,UAAW,EACXjF,QAAS,SAAAkF,GACPA,SAMFwD,EAAgB,WACpB,IAAMnC,EACgB,gCAApBnF,EAAoD,GAAKA,EAC3DJ,EAAcqC,IAAI,SAAAS,GAChB,IAAI/E,EAAW+E,EAAG,SACdjF,OAAQwG,EACZ,IACExG,EAAQE,EAAS6I,WACjB,MAAAe,GACA5D,IAAUe,KAAK,yBAA0B,CACvCb,UAAW,EACXjF,QAAS,SAAAkF,GACPA,OAIN,GAAc,WAAVrG,EACFE,EAAS6J,uBACJ,GAAc,YAAV/J,EACT,IACEE,EAASkB,iBACT,MAAO8H,GACPhD,IAAUe,KAAK,yBAA0B,CACvCb,UAAW,EACXjF,QAAS,SAAAkF,GACPA,OAMR,OADA8C,EAA0BzB,EAAMxH,EAAU+E,GACnC9C,KA9IT6H,oBAAU,WACRtI,EAAMkI,0BACL,CAAClI,EAAMuI,cAmJZvI,EAAM8H,OAAOU,GAAG,iCAAkC,WAChD9E,SAASC,eAAe,YAAYC,QACpCF,SAASC,eAAe,YAAYE,UAAW,IAIjD7D,EAAM8H,OAAOU,GAAG,qBAAsB,WACpC9E,SAASC,eAAe,aAAaC,QACrCF,SAASC,eAAe,aAAaE,UAAW,EAChDH,SAASC,eAAe,WAAWE,UAAW,IAKhD7D,EAAM8H,OAAOU,GAAG,oBAAqB,WACnC9E,SAASC,eAAe,WAAWC,QACnCF,SAASC,eAAe,WAAWE,UAAW,EAC9CH,SAASC,eAAe,aAAaE,UAAW,IA4DlD,OA3BmB,SAAA4E,GAGjB,IACIrE,EAAI,EACFsE,EAAgBjI,EAAcqC,IAAI,SAAAS,GACtC,OACElE,EAAAC,EAAAC,cAACoJ,EAAD,CACEC,IAAKxE,IACLlE,KAAM,OAASqD,EAAG,YAAgBlG,GAAG4I,UAAU,EAAG,IAClDhG,SAAUsD,EAAG,QAMnB,OACElE,EAAAC,EAAAC,cAAA,OAAKlC,GAAG,eA/CU,SAACwL,GACrB,GAAIA,EACF,OACExJ,EAAAC,EAAAC,cAAA,WAEEF,EAAAC,EAAAC,cAAA,UAAQlC,GAAG,WAAWmC,UAAU,gBAAgBC,QAAS0G,GAAzD,eAGA9G,EAAAC,EAAAC,cAAA,UAAQlC,GAAG,WAAWmC,UAAU,gBAAgBC,QAAS4G,GAAzD,4BAGAhH,EAAAC,EAAAC,cAAA,UAAQlC,GAAG,YAAYmC,UAAU,gBAAgBC,QAAS0I,GAA1D,mBAGA9I,EAAAC,EAAAC,cAAA,UAAQlC,GAAG,UAAUmC,UAAU,gBAAgBC,QAAS2G,GAAxD,iBAGA/G,EAAAC,EAAAC,cAAA,UACElC,GAAG,YACHmC,UAAU,gBACVC,QAASmF,GAHX,YA+BDkE,EAfS,GAgBVzJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWkJ,GAC1BrJ,EAAAC,EAAAC,cAAA,UAAQC,UAAU,eAAeuJ,MAAO,CAAEC,UAAW,OAAQvJ,QAASgJ,GAAtE,gBAMDQ,CAAWjJ,EAAMyI,0BCxcLS,6MACnBC,SAAW,WACT,IAAIjJ,EAAOwD,SAASC,eAAe,QAAQyF,MAEvCC,EAAY,SAAWnJ,EAAO,oBAClC1C,OAAO8L,QAAQC,UACb,KACA,KACAF,GAGFtL,EAAKiC,MAAM8H,OAAOC,KAAK,wBAAyB,CAC9C7H,OACA8H,eAAgB,IAElBjK,EAAKiC,MAAM8H,OAAOC,KAAK,kCACvBhK,EAAKiC,MAAM8H,OAAOC,KAAK,oCAAqC,GAC5DhK,EAAKiC,MAAM8H,OAAOC,KAAK,0BAA2B,CAAC,EAAE,EAAE,IACvDhK,EAAKiC,MAAM8H,OAAOC,KAAK,gCAAiC,IAAI/I,MAC5DjB,EAAKiC,MAAMwJ,uBACXzL,EAAKiC,MAAMyJ,wBAAuB,MAIpCC,YAAc,WACZ,IACE,OAAQhG,SAASC,eAAe,QAAQyF,MAAMO,QAAQ,MAAO,IAAIrE,OAEnE,MAAOkC,QAKToC,YAAc,SAACC,GACR9L,EAAK2L,cAKRhG,SAASC,eAAe,iBAAiBmG,UAAU,iCAJnC,KAAZD,EAAEE,OACJhM,EAAKoL,SAASU,MAOpBG,SAAW,SAACH,GACL9L,EAAK2L,cAKRhG,SAASC,eAAe,iBAAiBmG,UAAY,iCAJhDD,EAAEI,SACLlM,EAAKoL,SAASzF,SAASC,eAAe,QAAQyF,gFASlD,OACE/J,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SACE0H,KAAK,OACL/G,KAAK,OACL7C,GAAG,OACH6M,YAAY,mDACZC,WAAYjM,KAAK0L,YACjBQ,WAAS,EACTC,UAAQ,IAEVhL,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiBC,QAASvB,KAAK8L,UAAjD,4BACE9L,KAAKwL,eAAkBrK,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAkBnC,GAAG,2BArE9B8C,aCExB,SAASmK,EAAgBtK,GAAO,IAAAK,EACTC,oBAAS,GADAC,EAAAvC,OAAAwC,EAAA,EAAAxC,CAAAqC,EAAA,GACtCkK,EADsChK,EAAA,GAC3BiK,EAD2BjK,EAAA,GAAAI,EAEFL,oBAAS,GAFPM,EAAA5C,OAAAwC,EAAA,EAAAxC,CAAA2C,EAAA,GAEtC8J,EAFsC7J,EAAA,GAEtB8J,EAFsB9J,EAAA,GAAAG,EAGhBT,oBAAS,GAHOU,EAAAhD,OAAAwC,EAAA,EAAAxC,CAAA+C,EAAA,GAGtC4J,EAHsC3J,EAAA,GAGzB4J,EAHyB5J,EAAA,GAAAG,EAIlBb,mBAASlD,EAAG,SAJMgE,EAAApD,OAAAwC,EAAA,EAAAxC,CAAAmD,EAAA,GAItC0J,EAJsCzJ,EAAA,GAI7B0J,EAJ6B1J,EAAA,GAM7C,SAAS2J,EAAeC,GACtBJ,GAAM,GACN5K,EAAM+K,eAAeC,GAGvB,SAASC,IACP,OAAIV,EACK,OACEE,IAAmBE,EACrB,QAEA,SAIX,SAAShD,IAaT,IAA4BuD,EAZ1BR,GAAiB,GACjBF,GAAe,GACfxK,EAAM8H,OAAOC,KAAK,oBAAqB,qBACvC6C,GAAM,GACN5K,EAAMmL,uBACNnL,EAAM+K,eAAe,SAErB/K,EAAMyJ,wBAAuB,GAC7BzJ,EAAMoL,aAIoBF,EAHPlL,EAAMkL,sBAIE,GAAIlL,EAAMqL,qBAAqBH,GAW5D,SAASI,IACP5H,SAASC,eAAe,qBAAqBE,UAAW,EACpD0G,EACF5C,KAVF3H,EAAM8H,OAAOC,KAAK,qBAAsB,qBACxCyC,GAAe,GACfxK,EAAMuL,aACN7H,SAASC,eAAe,mBAAmBnE,UAAY,kBA4CzD,SAASgM,KA9BT,WACE,IAAKxL,EAAMyL,UAAW,CACpB,IAAMC,EACN1L,EAAM2L,iBAAmB3L,EAAMkL,oBAC/B,IAEIxH,SAASC,eAAe,iBAAiBE,UADvC6H,EAKJ,MAAOzG,MAqBX2G,GACA,IAAMF,EACH1L,EAAMkL,oBAAsB,GAC7BlL,EAAM2L,kBAAoB3L,EAAMkL,oBAE5BW,EAAQH,EAAc,SAAM,GAC9BI,EAAW9L,EAAMgL,KAAKhL,EAAMkL,qBAChC,GAAIY,EAAU,CACZ,IAAMC,EAAQD,EAAS7F,UAAU,EAAE,IAC7B+F,EAAQF,EAAS7F,UAAU,IACjC6F,EAzBJ,SAAyBG,EAAKJ,GAC5B,OACExM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAAf,IAA2CqM,GAC3CxM,EAAAC,EAAAC,cAAA,WACG0M,EAAI,GACL5M,EAAAC,EAAAC,cAAA,WACC0M,EAAI,IAEP5M,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BAAf,IAA4CqM,IAgBnCK,CAAgB,CAACH,EAAOC,GAAQH,GAI7C,IAAMM,EAAoBT,EAAc,kDAAoD,sBAC5F,OACErM,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAW2M,GACd9M,EAAAC,EAAAC,cAAA,KAAGwJ,MAAO,CAACqD,SAAU,SAArB,IAAgCpM,EAAMkL,oBAAtC,KACCY,IAoBT,SAAStC,IACPsB,GAAQ,GA2FV,OACEzL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAzFjB,WACE,GAAKqL,EAUE,CACL,IACE,IAAIwB,EAAgB3I,SAASC,eAAe,uBACxC2I,EAAgB5I,SAASC,eAAe,mBAEpB,UAD2B,aAA5B0I,EAAcvC,UAA4B,OAAS,QAExEuC,EAActD,MAAMwD,WAAa,eACjCD,EAAcvD,MAAMwD,WAAa,eACjCF,EAActD,MAAMyD,MAAQ,QAC5BF,EAAcvD,MAAMyD,MAAQ,UAE5BH,EAActD,MAAMwD,WAAa,eACjCD,EAAcvD,MAAMwD,WAAa,eACjCF,EAActD,MAAMyD,MAAQ,UAC5BF,EAAcvD,MAAMyD,MAAQ,WAE9B,MAAOhF,IAGT,OACEnI,EAAAC,EAAAC,cAAA,WACGiM,IACDnM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACfH,EAAAC,EAAAC,cAAA,OAAKlC,GAAG,uBAAR,YACAgC,EAAAC,EAAAC,cAAA,OAAKlC,GAAG,mBAAR,uBAGAgC,EAAAC,EAAAC,cAAA,UACElC,GAAG,kBACHmC,UACuB,SAArByL,IACI,iBACA,sBAENxL,QAAS6L,EACTzH,UACG7D,EAAMyM,kBACPzM,EAAM0M,cAAgB1M,EAAM2M,kBAAoB,IAC/C3M,EAAM4M,mBAhEJ,UADAC,EAoEE5B,KAlEN,2BACW,UAAT4B,EACF,2BACW,WAATA,EACF,2BAEAA,GA8DHxN,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UACEC,UAAU,MACVnC,GAAG,gBACHoC,QAAS,kBAAMsL,EAAe,UAC9BlH,SACgC,IAA9B7D,EAAMkL,sBACLlL,EAAMyM,kBACPzM,EAAM0M,cAAgB1M,EAAM2M,kBAAoB,GAChDpC,GARJ,4BAaAlL,EAAAC,EAAAC,cAAA,UACEC,UAAU,MACVnC,GAAG,gBACHoC,QAAS,kBAAMsL,EAAe,UAC9BlH,SACE7D,EAAMkL,sBAAwBlL,EAAM8M,YAAc,IACjD9M,EAAMyM,kBACPzM,EAAM0M,cAAgB1M,EAAM2M,kBAAoB,GAChDpC,GARJ,4BAa4B,IAA1BvK,EAAM+M,iBAA0B1N,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBAAb,mCAC/BQ,EAAM4M,mBAAsBvN,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBAAb,iEAhFnC,OACEH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACyN,EAAD,CACElF,OAAQ9H,EAAM8H,OACd0B,qBAAsBA,EACtBC,uBAAwBzJ,EAAMyJ,0BAvBxC,IAAeoD,EA0GVI,gBC/NQ,SAASC,EAAYlN,GAClC,IAAMmN,GAAYnN,EAAMoN,MAAUpN,EAAMqN,MAAQ,GAAK,KAAKC,QAAQ,GAC5DC,EAAiC,SAAhBvN,EAAMwN,MAAmB,CAAEC,OAAQ,KAAQ,GAClE,OACEpO,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAeuJ,MAAOwE,GACnClO,EAAAC,EAAAC,cAAA,4BACOS,EAAMoN,KADb,MACsBpN,EAAMqN,MAAQ,EADpC,KACyCF,EADzC,MAGA9N,EAAAC,EAAAC,cAACmO,EAAA,EAAD,CACEP,QAASA,EACTQ,YAAa3N,EAAM2N,YACnBC,WAAY5N,EAAM2N,YAClBE,YAAc,UACdC,WAAW,aCqGJC,MA/Gf,SAAgB/N,GAAO,IAAAK,EACeC,wBAASwE,GADxBvE,EAAAvC,OAAAwC,EAAA,EAAAxC,CAAAqC,EAAA,GACd2N,EADczN,EAAA,GACF0N,EADE1N,EAAA,GA4BrB,SAAS6K,IACP8C,cAAcF,GACdtK,SAASC,eAAe,uBAAuBwK,UAAY,WAG7D,SAAS5C,IACP0C,EAGF,WACE,IAAIG,EAAO,CAAC,EAAG,EAAG,GAClB,OAAOC,YAAY,WACjB,IAAIC,EAAOF,EAAK,GACZG,EAAMH,EAAK,GACXI,EAAMJ,EAAK,GAEXI,EAAM,KACRA,GAAO,GAEG,KAARA,IACFD,GAAO,EACPC,EAAM,GAEI,KAARD,IACFD,GAAQ,EACRC,EAAM,GAERH,EAAO,CAACE,EAAMC,EAAKC,GACnB9K,SAASC,eAAe,uBAAuBwK,WAC5C,IAAMG,GAAMG,OAAO,GACpB,KACC,IAAMF,GAAKE,OAAO,GACnB,KACC,IAAMD,GAAKC,OAAO,IAClB,IA5BSC,IA+BhB,OACErP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAC2N,EAAD,CACEE,KAAMpN,EAAM2L,iBACZ0B,MAAOrN,EAAM8M,YAAc,EAC3BU,MAAO,SACPG,YAAa,IAEftO,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SArEjBH,EAAAC,EAAAC,cAAC+K,EAAD,CACES,eAAgB/K,EAAM+K,eACtBG,oBAAqBlL,EAAMkL,oBAC3B4B,YAAa9M,EAAM8M,YACnBhF,OAAQ9H,EAAM8H,OACdkD,KAAMhL,EAAMgL,KACZ2D,cAAe3O,EAAM2O,cACrBlC,iBAAkBzM,EAAMyM,iBACxBhD,uBAAwBzJ,EAAMyJ,uBAC9BiD,cAAe1M,EAAM0M,cACrBC,gBAAiB3M,EAAM2M,gBACvBvB,UAAWA,EACXG,WAAYA,EACZI,iBAAkB3L,EAAM2L,iBACxBN,qBAAsBrL,EAAMqL,qBAC5BF,qBAAsBnL,EAAMmL,qBAC5BM,UAAWzL,EAAMyL,UACjBmB,kBAAmB5M,EAAM4M,kBACzBG,gBAAiB/M,EAAM+M,oBAqDzB1N,EAAAC,EAAAC,cAAA,OACEqP,OACE5O,EAAMyM,kBACwB,IAA9BzM,EAAMkL,sBACL9N,EAAG,QAENoC,UAAU,mBANZ,4ICjFeqP,mLAEjB,OACExP,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,+BAL+BY,aCGpB2O,4NACnBC,kBAAoB,WAIlB,OAHWhR,EAAKiC,MAAMgP,KAAO,gBAAkB,aAE9BjR,EAAKiC,MAAMkL,sBAAwBnN,EAAKiC,MAAMiP,MAAQ,iBAAmB,6EAM1F,OACE5P,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAWtB,KAAK6Q,qBAClB7Q,KAAK8B,MAAMiP,MAAQ,KAAO/Q,KAAK8B,MAAM8L,mBAdZ3L,cCAjB+O,qNACnBC,uBAAyB,qFAChB,IAAAC,EAAAlR,KACH8M,EAAO9M,KAAK8B,MAAMgL,KAClBqE,EAAOnR,KAAK8B,MAAMsP,UAClBC,EAAerR,KAAK8B,MAAMuP,aAC1BC,EAAMH,EAAOE,EAAeA,EAC5BE,EAAMD,EAAMD,EAEZG,EADa1E,EAAKyD,MAAMe,EAAKC,GACP3M,IAAI,SAACgJ,EAAU1H,GAAX,OAC5B/E,EAAAC,EAAAC,cAACoQ,EAAD,CACEzE,oBAAqBkE,EAAKpP,MAAMkL,oBAChCY,SAAUA,EACVsC,KAAK,QACLY,MAAM,EACNpG,IAAKkD,EAAS,IAAI1H,EAClB6K,MAAO7K,EAAIoL,MAIf,OAAOnQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASkQ,UApBIvP,cCFlByP,2LACV,IAAA7R,EAAAG,KACP,OACEmB,EAAAC,EAAAC,cAAA,OACEC,UAAWtB,KAAK8B,MAAM6P,SAAW,WAAa,yBAC9CpQ,QAAS,kBAAM1B,EAAKiC,MAAM8P,WAAW/R,EAAKiC,MAAMsC,OAC/CpE,KAAK8B,MAAMsC,YANiBnC,gDCAhB4P,6MACnBC,aAAe,SAACC,GACdlS,EAAKiC,MAAM8P,WAAWI,OAAOD,EAAME,OAAO/G,WAG5CgH,aAAe,SAACH,GACdA,EAAMI,0FAGN,OACEhR,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAM+Q,SAAUpS,KAAKkS,cACnB/Q,EAAAC,EAAAC,cAAA,SAAOgR,QAAQ,QAAf,SACAlR,EAAAC,EAAAC,cAAA,SACE0H,KAAK,OACLmC,MAAOlL,KAAK8B,MAAMsP,UAClBkB,SAAUtS,KAAK8R,aACfxQ,UAAY,8BAjBeW,+CCOlBsQ,6MACnBX,WAAW,SAACY,GACV3S,EAAKiC,MAAM8P,WAAWY,4EAGf,IAAAtB,EAAAlR,KACHoR,EAAYpR,KAAK8B,MAAMsP,UACvBC,EAAerR,KAAK8B,MAAMuP,aAC1BoB,EAAYC,KAAKC,MAAMtB,EAAe,GACtCuB,EAAWZ,SAAShS,KAAK8B,MAAM+Q,WAAa,GAAK7S,KAAK8B,MAAMuP,aAAe,GAAGjC,QAAQ,IAYtF0D,EAXY/M,MAAMgN,KAAK,IAAIhN,MAAMsL,GAAe,SAAC2B,EAAG9M,GAStD,OAPIkL,GAAaqB,EACTvM,EACGkL,GAAawB,EAAWH,EAC3BvM,EAAI0M,EAAWvB,EAEfnL,EAAIkL,EAAYqB,EAAY,IAIZ7N,IAAI,SAACsB,GAE7B,OADAA,GAAQ,EACD/E,EAAAC,EAAAC,cAAC4R,EAAD,CAAS7O,IAAK8B,EAAGyL,SAAUP,IAAclL,EAAGwE,IAAKxE,EAAG0L,WAAYV,EAAKpP,MAAM8P,eAGpF,OACEzQ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAC6R,EAAD,CACEtB,WAAY5R,KAAK8B,MAAM8P,WACvBR,UAAWpR,KAAK8B,MAAMsP,aAG1BjQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,OACE8R,IAAK7B,IACL8B,IAAI,GACJ9R,UAAU,YACVC,QAAS,kBAAM2P,EAAKpP,MAAM8P,WAAW,MAEvCzQ,EAAAC,EAAAC,cAAA,OACE8R,IAAKE,IACLD,IAAI,GACJ9R,UAAU,YACVC,QAAS,kBAAM2P,EAAKpP,MAAM8P,WAAWR,EAAY,MAElD0B,EACD3R,EAAAC,EAAAC,cAAA,OACE8R,IAAKG,IACLF,IAAI,GACJ9R,UAAU,YACVC,QAAS,kBAAM2P,EAAKpP,MAAM8P,WAAWR,EAAY,MAEnDjQ,EAAAC,EAAAC,cAAA,OACE8R,IAAK5B,IACL6B,IAAI,GACJ9R,UAAU,YACVC,QAAS,kBAAM2P,EAAKpP,MAAM8P,WAAWgB,iBA5DZ3Q,aCJpBsR,cACnB,SAAAA,EAAYzR,GAAO,IAAAjC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuT,GAAA,OACjB1T,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyT,GAAApT,KAAAH,KAAM8B,KAED1B,MAAQ,CACXiR,aAFa,GAFExR,wEASjB,OACEsB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACmS,EAAD,MACArS,EAAAC,EAAAC,cAACoS,EAAD,CACE3G,KAAM9M,KAAK8B,MAAMgL,KACjBsE,UAAWpR,KAAK8B,MAAMsP,UACtBC,aAAcrR,KAAKI,MAAMiR,aACzBrE,oBAAqBhN,KAAK8B,MAAMkL,sBAElC7L,EAAAC,EAAAC,cAACqS,EAAD,CACEb,WAAY7S,KAAK8B,MAAMgL,KAAK1F,OAC5BwK,WAAY5R,KAAK8B,MAAM8P,WACvBR,UAAWpR,KAAK8B,MAAMsP,UACtBC,aAAcrR,KAAKI,MAAMiR,uBAvBApP,aCFd0R,mLAIjB,OACExS,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAACuS,EAAD,CACE9G,KAAM9M,KAAK8B,MAAMgL,KACjBE,oBACEhN,KAAK8B,MAAMkL,oBAEboE,UAAWpR,KAAK8B,MAAMsP,UACtBQ,WAAY5R,KAAK8B,MAAM8P,sBAbS3P,8BCC7B,SAAS4R,EAAM/R,GAAO,IAAAgS,EACUC,oBAAU,CACrDC,UAAU,EACVC,MAAOnS,EAAMmS,MACbnO,QAAShE,EAAMgE,QACfiG,QAAS,CACP5K,EAAAC,EAAAC,cAAC6S,EAAA9S,EAAO+S,OAAR,CACE1Q,MAAO3B,EAAMsS,aAAetS,EAAMsS,aAAe,GACjDC,eAAa,EACb/S,UAAYQ,EAAMsS,aAAgC,GAAjB,eACjC1J,IAAK5I,EAAMsS,aACX1D,QAAS5O,EAAMsS,aACf7S,QAAS,kBAAM+S,OAEjBnT,EAAAC,EAAAC,cAAC6S,EAAA9S,EAAO+S,OAAR,CACE1Q,MAAO3B,EAAMyS,cACbC,oBAAkB,EAClBjT,QAAS,WACHO,EAAM2S,aAAa3S,EAAM2S,cAC7BH,IACIxS,EAAM4S,OAAOpO,IAAUqO,KAAK7S,EAAM4S,MAAO,CAC3CnT,QAAS,SAAAkF,GACPA,QAINiK,QAAS5O,EAAMyS,cACf7J,IAAK5I,EAAMyS,mBA3BkBK,EAAA9U,OAAAwC,EAAA,EAAAxC,CAAAgU,EAAA,GAC5Be,EAD4BD,EAAA,GACbN,EADaM,EAAA,GA+CnC,OAhBAxK,oBAAU,WACJtI,EAAMgT,YAAYhT,EAAMgT,aAC5B,IACOhT,EAAMsS,eACT5O,SAASuP,uBACP,wBACE,GAAGzT,WAAa,iBACjBQ,EAAMyS,gBACT/O,SAASuP,uBACP,6BACA,GAAGzT,WAAa,iBACpB,MAAOgI,MAGR,IAGDnI,EAAAC,EAAAC,cAAA,OAAKwJ,MAAO,CAAEnC,OAAQ,QACpBvH,EAAAC,EAAAC,cAAA,UACEC,UAAU,gBACVnC,GAAI2C,EAAMkT,QACVzT,QAAS+S,GAHX,gBAOAnT,EAAAC,EAAAC,cAAC6S,EAAA9S,EAAOyS,MAAUgB,ICxDT,SAASI,EAAOnT,GAAO,IAAAK,EACQC,mBAAS8S,KADjB7S,EAAAvC,OAAAwC,EAAA,EAAAxC,CAAAqC,EAAA,GAC7BgT,EAD6B9S,EAAA,GACb+S,EADa/S,EAAA,GAGhCyN,OAAalJ,EAEbV,EAAI,EACRkE,oBAAU,WAER4F,cAAcF,GACdhO,EAAM8H,OAAOU,GAAG,kCAAmC,SAAA7J,GACjD,IAEEA,EAAY,IAAIK,KAAKL,GACrB,IAAM4U,EAAqBC,EAAW7U,GAElC8U,EADYD,EAAW,IAAIxU,MACNuU,EAGnBG,EAAQ9C,KAAKC,MAAM4C,EAAW,MACpCA,GAAoB,KAARC,EACZ,IAAMC,EAAO/C,KAAKC,MAAM4C,EAAW,IAG7BG,EAAqB,CAACF,EAAOC,EAFnCF,GAAmB,GAAPE,GAGZE,EAAYD,GACZ5F,EAAaK,YAAY,kBAAMyF,EAAKF,IAAqB,KACzD,MAAOpM,GACP5E,QAAQ+C,MAAM6B,MAGlBuM,IACAT,EAAkB,GAClB1Q,QAAQC,IAAIwQ,IAEX,IAEH,IAAMQ,EAAc,SAAAzF,GAClB,IACE1K,SAASC,eAAe,sBAAsBmG,UAC5C,8BACC,IAAMsE,EAAK,IAAIK,OAAO,GACvB,KACC,IAAML,EAAK,IAAIK,OAAO,GACvB,KACC,IAAML,EAAK,IAAIK,OAAO,GAE3B,MAAMjH,MAKJ4G,OAAOtJ,EACLgP,EAAO,SAAAE,GACN5F,IACHA,EAAO4F,GAGT,IAAI1F,EAAOF,EAAK,GACZG,EAAMH,EAAK,GACXI,EAAMJ,EAAK,GAEXI,EAAM,KACRA,GAAO,GAEG,KAARA,IACFD,GAAO,EACPC,EAAM,GAEI,KAARD,IACFD,GAAQ,EACRC,EAAM,GAERH,EAAO,CAACE,EAAMC,EAAKC,GAEnB,IACEqF,EAAYzF,GACZ,MAAO6F,GACPrR,QAAQ+C,MAAMsO,KAIZT,EAAa,SAAAU,GAAI,OACH,GAAlBA,EAAKC,WAAkB,GACH,GAApBD,EAAKE,aACLF,EAAKV,cAODO,EAAW,WACf,IACErQ,SAASC,eAAe,eAAeC,QACvCF,SAASC,eAAe,eAAeE,UAAW,EAClD,MAAO2D,MAOX,OACEnI,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC2N,EAAD,CACEE,KAAMpN,EAAM2L,iBACZ0B,MAAOrN,EAAM8M,YAAc,EAC3BU,MAAO,OACPG,YAAa,IAEftO,EAAAC,EAAAC,cAAA,OAAKlC,GAAG,sBAAR,YACAgC,EAAAC,EAAAC,cAAA,OAAKlC,GAAG,eAAR,MAA0B2C,EAAMqU,YAChChV,EAAAC,EAAAC,cAAA,OAAKlC,GAAG,sBACRgC,EAAAC,EAAAC,cAAA,OAAKlC,GAAG,oBACP+G,IACD/E,EAAAC,EAAAC,cAAA,OACEqP,OACE5O,EAAMyM,kBACNzM,EAAMsU,6BACLlX,EAAG,QAENoC,UAAU,mBANZ,uBAUAH,EAAAC,EAAAC,cAAA,UACEE,QAxCkB,WAEtBO,EAAM8H,OAAOC,KAAK,+BAuCd1K,GAAG,cACHmC,UAAU,0BCzHH,SAAS+U,EAAOvU,GAmB7B,OAlBAsI,oBAAU,WACR,IAAMkM,EAAS9Q,SAASC,eAAe3D,EAAM3C,IAC7C,IACEmX,EAAOC,iBAAiB,SAAU,WAChCzU,EAAM0U,aAAaF,EAAOG,WAU5B,MAAOnN,MAGR,IAEDnI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,SAAO0H,KAAK,WAAW/G,KAAK,SAAS7C,GAAI2C,EAAM3C,GAAKsX,QAAS3U,EAAM2U,QAASnE,SAAUxQ,EAAM4U,kBAC5FvV,EAAAC,EAAAC,cAAA,SAAOgR,QAAQ,SAAS/Q,UAAU,gBAAeH,EAAAC,EAAAC,cAAA,mCC9B1C,SAASsV,KACtB,OACExV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKuV,QAAQ,MAAMzX,GAAG,UAAU0X,MAAM,6BAA6BC,MAAM,+BAA+B9D,EAAE,MAAM+D,EAAE,MAAMC,QAAQ,kBAAkBC,iBAAiB,sBAAsBC,SAAS,YAChM/V,EAAAC,EAAAC,cAAA,QAAMC,UAAU,OAAO6V,KAAK,OAAOC,OAAO,UAAUC,iBAAiB,KAAKC,EAAE,4QAG5EnW,EAAAC,EAAAC,cAAA,UAAQC,UAAU,OAAO6V,KAAK,OAAOC,OAAO,UAAU3H,YAAY,IAAI4H,iBAAiB,KAAKE,GAAG,OAAOC,GAAG,OAAOC,EAAE,SAClHtW,EAAAC,EAAAC,cAAA,YAAUC,UAAU,OAAO6V,KAAK,OAAOC,OAAO,UAAU3H,YAAY,IAAIiI,cAAc,QAAQL,iBAAiB,KAAKM,OAAO,oCAE3HxW,EAAAC,EAAAC,cAAA,UAAQC,UAAU,OAAO6V,KAAK,OAAOC,OAAO,UAAU3H,YAAY,IAAI4H,iBAAiB,KAAKO,gBAAgB,kBAAkBL,GAAG,OAAOC,GAAG,OAAOC,EAAE,UAEtJtW,EAAAC,EAAAC,cAAA,KAAGlC,GAAG,oBAAN,oECfS,SAAS0Y,KACtB,OACE1W,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBCFN,SAASwW,KACtB,OACE3W,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAC0W,GAAD,MACA5W,EAAAC,EAAAC,cAAC2W,GAAD,2FCogCSC,eAr+Bb,SAAAA,EAAYnW,GAAO,IAAAjC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiY,IACjBpY,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmY,GAAA9X,KAAAH,KAAM8B,KARRoW,SAAW,EAOQrY,EANnBsY,WAAajZ,EAAG,kBAMGW,EALnBuY,WAAa,4BAKMvY,EA4CnBwY,mBAAgBzR,EA5CG/G,EA6CnByY,0BAAuB1R,EA7CJ/G,EA0EnB0Y,8BAAgC,WAC9B,IAAMC,EAAiBhT,SAASC,eAAe,oBACzCgT,EAAkBjT,SAASC,eAAe,qBAChD+S,EAAejC,iBAAiB,WAAY1W,EAAK6Y,4BACjDF,EAAejC,iBAAiB,YAAa1W,EAAK8Y,6BAClDF,EAAgBlC,iBAAiB,WAAY1W,EAAK+Y,6BAClDH,EAAgBlC,iBAAiB,YAAa1W,EAAKgZ,+BAhFlChZ,EAkFnBiZ,iCAAmC,WACjC,IAAMN,EAAiBhT,SAASC,eAAe,oBACzCgT,EAAkBjT,SAASC,eAAe,qBAChD+S,EAAeO,oBAAoB,WAAYlZ,EAAK6Y,4BACpDF,EAAeO,oBAAoB,YAAalZ,EAAK8Y,6BACrDF,EAAgBM,oBAAoB,WAAYlZ,EAAK+Y,6BACrDH,EAAgBM,oBAAoB,YAAalZ,EAAKgZ,8BACtDhZ,EAAKgZ,gCAzFYhZ,EA4FnB6Y,2BAA6B,WAC3B,IACElT,SAASuP,uBAAuB,eAAe,GAAGzT,WAAa,aAC/D,MAAOgI,GACP5E,QAAQ+C,MAAM6B,KAhGCzJ,EAoGnB8Y,4BAA8B,WAC5B,IACEnT,SAASuP,uBAAuB,eAAe,GAAGiE,UAAUC,OAAO,aACnE,MAAO3P,GACP5E,QAAQ+C,MAAM6B,KAxGCzJ,EA4GnB+Y,4BAA8B,WAC5B,IACEpT,SAASuP,uBAAuB,YAAY,GAAGzT,WAAa,cAC5D,MAAOgI,GACP5E,QAAQ+C,MAAM6B,KAhHCzJ,EAoHnBgZ,6BAA+B,WAC7B,IACErT,SAASuP,uBAAuB,YAAY,GAAGiE,UAAUC,OAAO,cAChE,MAAO3P,GACP5E,QAAQ+C,MAAM6B,KAxHCzJ,EA4HnBqZ,uBAAyB,WACvBxU,QAAQC,IAAI,YACZ,IACMa,SAASuP,uBAAuB,eAAe,GAAGzT,UAAUwD,SAAS,aACvEjF,EAAK8Y,8BAEL9Y,EAAK6Y,6BAEP,MAAOpP,MApIQzJ,EAyInBsZ,wBAA0B,WACxBzU,QAAQC,IAAI,YACZ,IACMa,SAASuP,uBAAuB,YAAY,GAAGzT,UAAUwD,SAAS,cACpEjF,EAAKgZ,+BAELhZ,EAAK+Y,8BAEP,MAAOtP,MAjJQzJ,EAiKnBuZ,cAAgB,WACd,OACEjY,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,QAAMlC,GAAG,oBACNU,EAAKwZ,cAEPxZ,EAAKyZ,cACNnY,EAAAC,EAAAC,cAAA,QAAMlC,GAAG,qBACPgC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKwJ,MAAO,CAACpC,MAAO,OAAQC,OAAQ,QAASnH,QAAS1B,EAAKsZ,yBACzDhY,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAU6R,IAAKoG,QAEhCpY,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAczB,EAAK2Z,uBAClCrY,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACZzB,EAAK4Z,yBAlLH5Z,EAiMnB6Z,eAAiB,WACf,OAAOvY,EAAAC,EAAAC,cAAA,OAAKwJ,MAAO,CAAC8O,UAAW,WAAY9Z,EAAKwZ,eAlM/BxZ,EAyMnB+Z,gBAAkB,WAChB,OACEzY,EAAAC,EAAAC,cAACgV,EAAD,OA3MexW,EA+MnBga,gBAAkB,aA/MCha,EAsNnBia,uBAAyB,WACvB,GAAIja,EAAKO,MAAMqN,iBAAmB,IAAM5N,EAAKO,MAAM0M,KAAK1F,OAAQ,CAC9D,IACE5B,SAASC,eAAe,iBAAiBE,UAAW,EACpD,MAAM2D,IAGR,OACEnI,EAAAC,EAAAC,cAAC0Y,GAAD,QA9Nala,EAoOnB2Z,oBAAsB,WACpB,OACErY,EAAAC,EAAAC,cAAC2Y,EAAD,CACElN,KAAMjN,EAAKO,MAAM0M,KACjBmN,WAAYpa,EAAKoa,WACjBxJ,cAAe5Q,EAAKO,MAAMqQ,cAC1B7G,OAAQ/J,EAAKO,MAAMwJ,OACnBoD,oBAAqBnN,EAAKO,MAAM4M,oBAChCoE,UAAWvR,EAAKO,MAAMgR,UACtBQ,WAAY/R,EAAK+R,cA7OJ/R,EAmPnByZ,YAAc,WACZ,OACEnY,EAAAC,EAAAC,cAAC6Y,EAAD,CACErN,eAAgBhN,EAAKgN,eACrBC,KAAMjN,EAAKO,MAAM0M,KACjBE,oBAAqBnN,EAAKO,MAAM4M,oBAChC4B,YAAa/O,EAAKO,MAAM0M,KAAK1F,OAC7B+S,eAAgBta,EAAKO,MAAM0M,KAAKjN,EAAKO,MAAM4M,qBAC3CyD,cAAe5Q,EAAKO,MAAMqQ,cAC1B7G,OAAQ/J,EAAKO,MAAMwJ,OACnB2E,iBACE1O,EAAKO,MAAMmO,kBACX1O,EAAKO,MAAMga,mBAAqBva,EAAKO,MAAMqO,kBAAoB,EAEjElB,UAAW1N,EAAKO,MAAMmN,UACtBiB,cAAe3O,EAAKO,MAAMga,mBAC1B3L,gBAAiB5O,EAAKO,MAAMqO,gBAC5BlD,uBAAwB1L,EAAK0L,uBAC7BkC,iBAAkB5N,EAAKO,MAAMqN,iBAC7BN,qBAAsBtN,EAAKsN,qBAC3BkN,UAAWxa,EAAKO,MAAMia,UACtBC,gBAAiBza,EAAKya,gBACtBrN,qBAAsBpN,EAAK0a,0BAC3B7L,kBAAmB7O,EAAKO,MAAMsO,kBAC9BG,gBAAiBhP,EAAKO,MAAMyO,mBA3QfhP,EAiRnB4Z,gBAAkB,WAChB,OACEtY,EAAAC,EAAAC,cAACa,EAAD,CACE0H,OAAQ/J,EAAKO,MAAMwJ,OACnB4Q,WAAY3a,EAAKO,MAAMoa,WACvBC,eAAgB5a,EAAKO,MAAMqa,eAC3BzQ,uBAAwBnK,EAAKmK,uBAC7BK,YAAaxK,EAAKO,MAAMiK,YACxBqQ,eAAgB7a,EAAK8a,sBACrBnW,sBAAuB3E,EAAK2E,sBAC5B+F,OAAQ1K,EAAK+a,mBA3RA/a,EAiSnBgb,YAAc,WACZ,OACE1Z,EAAAC,EAAAC,cAAC4T,EAAD,CACEkB,WAAYtW,EAAKO,MAAM+V,WACvBvH,YAAa/O,EAAKO,MAAM0M,KAAK1F,OAC7BqG,iBAAkB5N,EAAKO,MAAMqN,iBAC7B2I,yBAA0BvW,EAAKuW,yBAC/B7H,iBAAkB1O,EAAKO,MAAMmO,iBAC7B3E,OAAQ/J,EAAKO,MAAMwJ,UAzSN/J,EA+SnBib,YAAc,WACZ,OACE3Z,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwS,EAAD,CACEmB,QAAS,qBACTpL,OAAQ/J,EAAKO,MAAMwJ,OACnBqK,MAAO,gBACPnO,QAAS,wCACTsO,aAAc,SACdG,cAAe,iBACfwG,gBAAiB,mBACjBrG,MAAO,iBACPD,YAAa5U,EAAKmb,sBAEpB7Z,EAAAC,EAAAC,cAACwS,EAAD,CACEmB,QAAS,gBACTpL,OAAQ/J,EAAKO,MAAMwJ,OACnBqK,MAAO,SACPa,WAAYjV,EAAKob,UACjBnV,QAASjG,EAAKgb,cACdtG,cAAe,WAnUJ1U,EAyUnB6W,gBAAkB,WAChB7W,EAAKqb,SAAS,CAAC3N,WAAY1N,EAAKO,MAAMmN,aA1UrB1N,EA8UnBwZ,WAAa,WACX,OACElY,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,YAAhB,KACAH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,eAAjB,WAEAH,EAAAC,EAAAC,cAAA,UACEE,QAAS,WACP1B,EAAKsb,mBAAmB,iBACxBtb,EAAKob,aAEP3Z,UAAU,gBALZ,UASAH,EAAAC,EAAAC,cAAA,UACElC,GAAG,eACHmC,UAAU,eACVC,QAAS1B,EAAK+a,iBAHhB,cAOAzZ,EAAAC,EAAAC,cAAA,UACEC,UAAU,eACVC,QAAS,WACP1B,EAAKsb,mBAAmB,wBAH5B,kBAQAha,EAAAC,EAAAC,cAAA,QAAMC,UAAU,YAAhB,KAEAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,eAAjB,WACAH,EAAAC,EAAAC,cAACgV,EAAD,CAAQlX,GAAG,aAAaqX,aAAc3W,EAAKub,oBAAqB3E,QAAS5W,EAAKO,MAAMmN,UAAWmJ,gBAAiB7W,EAAK6W,mBAEvHvV,EAAAC,EAAAC,cAAA,QAAMC,UAAU,YAAhB,KAEAH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,YAAhB,KACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,SAAOgR,QAAQ,GAAG/Q,UAAU,eAA5B,UACAH,EAAAC,EAAAC,cAAA,SAAOlC,GAAG,eAAe4J,KAAK,OAAOzH,UAAU,kDAAkD4J,MAAOrL,EAAKO,MAAMyO,gBAAiBwM,UAAQ,KAG9Ila,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,YAAhB,KACAH,EAAAC,EAAAC,cAAA,SAAOgR,QAAQ,GAAG/Q,UAAU,eAA5B,YACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kBAChBH,EAAAC,EAAAC,cAAA,SAAOlC,GAAG,gBAAgB4J,KAAK,OAAOzH,UAAU,mCAAmC4J,MAAOrL,EAAKO,MAAMkb,GAAIhJ,SAAUzS,EAAK0b,qBACxHpa,EAAAC,EAAAC,cAAA,UAASC,UAAY,eACrBC,QACE1B,EAAK2b,6BAFP,mBAQFra,EAAAC,EAAAC,cAAA,QAAMC,UAAU,YAAhB,KAGAH,EAAAC,EAAAC,cAAA,OAAKwJ,MAAO,CAACpC,MAAO,OAAQC,OAAQ,QAASnH,QAAS1B,EAAKqZ,wBACzD/X,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAU6R,IAAKsI,QAOhCta,EAAAC,EAAAC,cAAA,UACEE,QAAS1B,EAAK6b,0BACdvc,GAAG,oBACHmC,UAAU,oBAtZCzB,EAubnB8b,iBAAmB,SAAAC,GACjB,IAAMC,EACJD,EAAW/b,EAAKO,MAAMqO,kBAAoB,EACtC,gBACA,0BACN5O,EAAKqb,SAAS,CACZd,mBAAoBwB,IAEtB,IACEpW,SAASC,eAAe,mBAAmBwK,UACzC,sBAAwB2L,EAAWC,EACrC,MAAOvS,MAlcQzJ,EAucnB2b,4BAA8B,WAC5BM,KAAQC,YAAY,SAAAT,GAClB5W,QAAQC,IAAI2W,GACiB,IAAzBA,EAAGU,MAAM,KAAK5U,SAChBkU,EAAK,UAAYA,EAAK,QACtBhV,IAAU2V,QAAQX,EAAI,CACpBtT,SAAU,YACVxB,UAAW,EACXjF,QAAS,SAAAkF,GACPA,OAGJ5G,EAAKqc,mBAAmBZ,OAndXzb,EA+dnB0b,mBAAqB,SAAA5P,GACnB9L,EAAKqb,SAAS,CAACI,GAAI3P,EAAEsG,OAAO/G,SAheXrL,EAmenBub,oBAAsB,SAAA7N,GACpB7I,QAAQC,IAAI,uBACZ9E,EAAKqb,SAAS,CAAC3N,aAAY,WACrBA,GACF1N,EAAKqb,SAAS,CAACzM,gBAAiB,IAChC5O,EAAKiZ,qCAELjZ,EAAKqb,SAAS,CAACzM,gBAAiB,IAChC5O,EAAK0Y,gCACL1Y,EAAK+Y,kCA5eQ/Y,EAmfnBsc,wBAA0B,SAAAP,GACxB/b,EAAK8b,iBAAiBC,GACtB/b,EAAKqb,SAAS,CACVkB,iBAAkBvc,EAAKO,MAAMgc,iBAAmB,GAElD,WACE1X,QAAQC,IACN,iBAAmB9E,EAAKO,MAAMgc,iBAAmB,WAEnD,IACE5W,SAASC,eAAe,iBAAiBE,UAAW,EACpD,MAAO2D,IAGT,GAAIzJ,EAAKO,MAAMgc,mBAAqBvc,EAAKO,MAAMqO,gBAAiB,CAC9D/J,QAAQC,IAAI,iCACZ,IACEa,SAASC,eAAe,qBAAqBC,QAC7CF,SAASC,eAAe,qBAAqBE,UAAW,EACxD9F,EAAKqb,SAAS,CACVkB,iBAAkB,GAEpB,WACE9V,IAAUC,QACR1G,EAAKwc,2BACH,CAAC,6CAAW,4BACZ,gBACC,CACD7V,UAAW,EACXjF,QAAS,SAAAkF,GACPA,SAOV5G,EAAK0L,wBAAuB,GAC5B,MAAOxE,GACPrC,QAAQ+C,MAAMV,GAEhB,IACMlH,EAAKuW,4BAEP9P,IAAUqO,KACR,yBAA2B9U,EAAKO,MAAMqN,iBAAmB,IAAK,CAC5DjH,UAAW,IACXjF,QAAS,SAAAkF,GACPA,OAKR,MAAO6C,GACP5E,QAAQ+C,MAAM6B,QAziBLzJ,EAgjBnB2E,sBAAwB,SAAAqK,GACtBhP,EAAKqb,SAAS,CAAErM,oBAChBhP,EAAK0L,wBAAuB,GAC5B1L,EAAKwY,gBACL,IACE7S,SAASuP,uBAAuB,kBAAkB,GAAGzT,WAAczB,EAAKO,MAAMyO,gBAAkB,EAAK,8BAAgC,GACrIrJ,SAASC,eAAe,gBAAgBuT,UAAUC,OAAO,mBAEzD,MAAO3P,MAxjBQzJ,EAkkBnByc,aAAe,SAAAnd,GACb,IAAMod,EAAS,GACf1c,EAAKqb,SAAS,CAAEV,WAAYrb,IAC5Bod,EAAO1c,EAAKO,MAAMoa,YAAc,GAChC3a,EAAKqb,SAAS,CAAET,eAAgB8B,GAAU,eAtkBzB1c,EAmlBnB2c,qBAAuB,SAACC,EAAKC,GAC3B,IAAIC,EAAK,IAAIC,OAAOF,EAAM,KAC1B,OAAOD,EAAIhR,QAAQkR,EAAI,iBAASD,IArlBf7c,EAwlBnBwc,2BAA6B,SAACtO,EAAKJ,GACjC,OACExM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBAAf,IAAyCqM,GACzCxM,EAAAC,EAAAC,cAAA,WACG0M,EAAI,GACL5M,EAAAC,EAAAC,cAAA,WACC0M,EAAI,IAEP5M,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BAAf,IAA0CqM,KAjmB7B9N,EAsmBnBgd,oBAAiBjW,EAtmBE/G,EAumBnB0a,0BAA4B,WAC1B1a,EAAKgd,eAAiBvW,IAAU2V,QAC9Bpc,EAAKwc,2BAA2B,CAAC,uCAAU,kCAAU,gBAAO,CAC1D7V,UAAW,EACXjF,QAAS,SAAAkF,GACPA,QA5mBW5G,EAunBnB6b,0BAA4B,WAC1B,IACE7b,EAAKgd,iBACL,MAAOC,MA1nBQjd,EAooBnBkd,oBAAsB,WACpBld,EAAKO,MAAMwJ,OAAOU,GAAG,iBAAkB,WACrChE,IAAUC,QAAQ,oBAAqB,CACrCyB,SAAU,YACVxB,UAAW,EACXjF,QAAS,SAAAkF,GACPA,OAGA5G,EAAKyY,sBAAsBzY,EAAKyY,uBACpC9S,SAASuP,uBAAuB,iBAAiB,GAAGiE,UAAUgE,IAAI,iBAClExX,SAASC,eAAe,iBAAiBuT,UAAUgE,IAAI,8BACvDxX,SAASC,eAAe,iBAAiBuT,UAAUC,OAAO,qBAGvDpZ,EAAKyY,qBAGRzY,EAAKyY,uBAFLzY,EAAKyY,qBAAuBzY,EAAKod,6BAKnCpd,EAAKO,MAAMwJ,OAAOU,GAAG,uBAAwB,WAC3CzK,EAAKqb,SAAS,CAAExM,mBAAmB,GAAQ,WACzClJ,SAASuP,uBAAuB,iBAAiB,GAAGiE,UAAUC,OAAO,iBACrEzT,SAASC,eAAe,iBAAiBuT,UAAUC,OAAO,kCAI9DpZ,EAAKO,MAAMwJ,OAAOU,GAAG,oBAAqB,SAAAkQ,GACxC9V,QAAQC,IAAI,6BACZ9E,EAAKqb,SAAS,CAAExM,mBAAmB,EAAM8L,cAAa,WACpDhV,SAASC,eAAe,iBAAiBuT,UAAUgE,IAAI,kCAI3Dnd,EAAKO,MAAMwJ,OAAOU,GAAG,4BAA6B,SAAAnL,GAC5CU,EAAKyc,cAAczc,EAAKyc,aAAand,GACzCU,EAAKyc,aAAe,OAGtBzc,EAAKO,MAAMwJ,OAAOU,GAAG,qBAAsB,WACzCzK,EAAK0L,wBAAuB,KAG9B1L,EAAKO,MAAMwJ,OAAOU,GAAG,yCAA0C,SAAAiS,GAC7D,IACE/W,SAASC,eACP,qBACAwK,UAAYpQ,EAAK2c,qBACjBU,KAAKC,UAAUZ,EAAQ,KAAM,GAC7B1c,EAAKO,MAAMoa,YAEb,MAAOsC,OAKXjd,EAAKO,MAAMwJ,OAAOU,GAAG,gCAAiC,SAAA8S,GACpDvd,EAAKqb,SAAS,CAAEzN,iBAAkB2P,GAAsB,MAG1Dvd,EAAKO,MAAMwJ,OAAOU,GAAG,qCAAsC,SAAAsR,GACzD/b,EAAK8b,iBAAiBC,KAGxB/b,EAAKO,MAAMwJ,OAAOU,GAAG,gCAAiC,SAAAsR,GACpD/b,EAAKsc,wBAAwBP,KAG/B/b,EAAKO,MAAMwJ,OAAOU,GAAG,mCAAoC,SAAA+S,GACvDxd,EAAKqb,SAAS,CACZoC,kBAAmBC,IAAO1d,EAAKO,MAAMkd,kBAAmB,CACtDE,OAAQH,QAKd,IAAMI,EAAe,CAAC,EAAG,IAAK,MAC9B5d,EAAKO,MAAMwJ,OAAOU,GAAG,sBAAuB,WAC1C,IAAMoT,EAAmB7d,EAAKO,MAAMkd,kBAClCzd,EAAKO,MAAMoa,YAIbmD,WAAW,WACTre,OAAOC,SAASqe,QAAO,IAFZH,EADQC,EAAmB,OAttBzB7d,EAmvBnBgN,eAAiB,SAAA4D,GACO,UAAlBA,EACF5Q,EAAKqb,SAAS,CAAClO,oBAAqBnN,EAAKO,MAAM4M,oBAAsB,GACnE,WACEnN,EAAKgN,eACHhN,EAAKO,MAAM0M,KAAKjN,EAAKO,MAAM4M,sBAE7BnN,EAAKO,MAAMwJ,OAAOC,KAAK,gCAAiC,CACtD7H,KAAM9C,EAAG,QACT8N,oBAAqBnN,EAAKO,MAAM4M,wBAIX,UAAlByD,EACT5Q,EAAKqb,SACH,CACElO,oBAAqB0F,KAAKmL,IAAIhe,EAAKO,MAAM4M,oBAAsB,EAAG,IAEpE,WACEnN,EAAKgN,eAAehN,EAAKO,MAAM0M,KAAKjN,EAAKO,MAAM4M,sBAC/CnN,EAAKO,MAAMwJ,OAAOC,KAAK,gCAAiC,CACtD7H,KAAM9C,EAAG,QACT8N,oBAAqBnN,EAAKO,MAAM4M,yBAKtC1N,OAAO8L,QAAQC,UACb,KACA,KACA,SACEnM,EAAG,QACH,mBACAW,EAAKO,MAAM4M,qBAGfnN,EAAKqb,SAAS,CACZzK,gBACAW,UACEsB,KAAKC,MACHX,OAAOnS,EAAKO,MAAM4M,qBAAuBnN,EAAKO,MAAM8X,UAClD,MA5xBOrY,EAiyBnB+R,WAAa,SAAAkM,GAIXpZ,QAAQC,IAAI,cAAemZ,GAC3Bje,EAAKqb,SAAS,CACZ9J,UAAW0M,GAAY,EAAIA,EAAW,KAvyBvBje,EA2yBnBsN,qBAAuB,SAAAH,GAErBnN,EAAKqb,SACH,CACEzN,iBAAkBT,GAEpB,WACEnN,EAAKO,MAAMwJ,OAAOC,KAChB,oCACAmD,MApzBWnN,EA0zBnBmK,uBAAyB,SAAArH,GACvB,GAAI9C,EAAKO,MAAMqa,eAAe5a,EAAKO,MAAMoa,YAAa,CACpD,IAAM+B,EAAS,GACfA,EAAO1c,EAAKO,MAAMoa,YAAc7X,EAChC9C,EAAKqb,SAAS,CAAET,eAAgB8B,GAAU,cAE1C1c,EAAKO,MAAMwJ,OAAOC,KAAK,kCAAmC0S,GAE5D1c,EAAKob,aAl0BYpb,EAq0BnB0L,uBAAyB,SAAAwS,GACvBle,EAAKqb,SAAS,CAAE3M,iBAAkBwP,KAt0BjBle,EAy0BnBya,gBAAkB,SAAApK,GAChBrQ,EAAKqb,SAAS,CAAEb,UAAWnK,KA10BVrQ,EA60BnBob,UAAY,WACVpb,EAAKO,MAAMwJ,OAAOC,KAAK,sCACvBhK,EAAKO,MAAMwJ,OAAOC,KAAK,kCACvBhK,EAAKO,MAAMwJ,OAAOC,KAAK,8BAh1BNhK,EAm1BnB+a,gBAAkB,WAIhB/a,EAAKO,MAAMwJ,OAAOC,KAAK,sBACvB,IACErE,SAASC,eAAe,aAAaC,QACrC,MAAO4D,IAGTzJ,EAAKO,MAAMwJ,OAAOC,KAAK,mCA71BNhK,EAm2BnBme,iBAAmB,WACjBne,EAAKO,MAAMwJ,OAAOC,KAAK,wBAp2BNhK,EAu2BnBmb,oBAAsB,WACpBnb,EAAKO,MAAMwJ,OAAOC,KAAK,oCAAqC,GAC5DhK,EAAKO,MAAMwJ,OAAOC,KAAK,6BACvBhK,EAAKO,MAAMwJ,OAAOC,KAAK,6BACvBhK,EAAKO,MAAMwJ,OAAOC,KAAK,gCAAiC,IAAI/I,MAC5DxB,OAAOC,SAAWD,OAAOC,SAAS0e,OAClCpe,EAAKO,MAAMwJ,OAAOC,KAAK,0BAA2B,CAAC,EAAG,EAAG,KA72BxChK,EAg3BnBqe,iCAAmC,WAC5Bre,EAAKuW,yBAMRvW,EAAKO,MAAMwJ,OAAOC,KAAK,oCALvBhK,EAAKO,MAAMwJ,OAAOC,KAAK,gCAAiC,CACtD7H,KAAM9C,EAAG,QACT8N,oBAAqBnN,EAAKO,MAAM4M,sBAKpCnN,EAAKO,MAAMwJ,OAAOC,KAAK,8BACvBhK,EAAKO,MAAMwJ,OAAOC,KAAK,4BA13BNhK,EA63BnBsb,mBAAqB,SAAAhc,GACnBqG,SAASC,eAAetG,GAAIuG,SA93BX7F,EAi4BnBuW,yBAA2B,WACzB,OAAO9W,OAAOC,SAASC,KAAKsF,SAAS,WAl4BpBjF,EAq4BnBse,2BAA6B,WAC3B,OAAO7X,IAAUe,KAAK,aAAc,CAClCb,UAAW,EACXwB,SAAU,WACVzG,QAAS1B,EAAK+a,mBAz4BC/a,EA64BnBod,2BAA6B,WAE3B,OADAvY,QAAQC,IAAI,aACL2B,IAAUe,KAAK,oBAAqB,CACzCb,UAAW,EACXwB,SAAU,YACVzG,QAAS,SAAAkF,GAAS5G,EAAK2b,8BAA+B/U,QAl5BvC5G,EAs5BnBqc,mBAAqB,SAAAZ,GACnBzb,EAAKO,MAAMwJ,OAAOwU,aAClB,IACE5Y,SAASuP,uBAAuB,iBAAiB,GAAGiE,UAAUC,OAAO,iBACrEzT,SAASC,eAAe,iBAAiBuT,UAAUC,OAAO,8BAC1D,MAAM3P,IAGRzJ,EAAKqb,SAAS,CACZtR,OAAQyU,IAAG/C,GACXA,GAAIA,IAENzb,EAAKO,MAAMwJ,OAAOC,KAAK,mCAEvB8T,WAAW,WACJnY,SAASuP,uBAAuB,iBAAiB,GAAGzT,UAAUwD,SAAS,mBAC1EjF,EAAKyY,qBAAuBzY,EAAKod,+BAElC,KACHpd,EAAKkd,uBAz6BYld,EA46BnB8a,sBAAwB,WACtB9a,EAAKqb,SAAS,CAAE7Q,aAAcxK,EAAKO,MAAMiK,eA76BxBxK,EAs7BnBye,gBAAkB,SAACvM,GACjB,IAAIrH,EAAMqH,EAAMrH,IACV6T,EAAgB/Y,SAASC,eAAe,iBAE9C,GAAI,CAAC,IAAK,YAAa,aAAc,SAAU,QAAS,KAAKX,SAAS4F,GACpE,IACc,MAARA,GACFlF,SAASC,eAAe,mBAAmBC,QAC3CqM,EAAMI,kBACW,cAARzH,EACLlF,SAASgZ,gBAAkBD,IAC7B/Y,SAASC,eAAe,iBAAiBC,QACzCqM,EAAMI,kBAES,eAARzH,EACLlF,SAASgZ,gBAAkBD,IAC7B/Y,SAASC,eAAe,iBAAiBC,QACzCqM,EAAMI,kBAES,WAARzH,GACTlF,SAASC,eAAe,gBAAgBC,QACxCqM,EAAMI,kBACW,UAARzH,GACThG,QAAQC,IAAI,sBACRa,SAASuP,uBAAuB,6BAA6B,KAC/DvP,SAASuP,uBAAuB,6BAA6B,GAAGrP,QAChE7F,EAAKmb,uBAEHxV,SAASgZ,gBAAkBD,IAC7B1e,EAAKqc,mBAAmBqC,EAAcrT,OACtC5E,IAAUqO,KAAK,eAAiB4J,EAAcrT,MAAO,CACnD3J,QAAS,SAAAkF,GACPA,OAGJsL,EAAMI,mBAES,MAARzH,GACLlF,SAASgZ,gBAAkBhZ,SAASC,eAAe,SAAS5F,EAAKsb,mBAAmB,iBAE1F,MAAO7R,MA59BXzJ,EAAKO,MAAQ,CACXqO,gBAAiB,EACjBgC,cAAe,GACfzD,oBAAqBnN,EAAKsY,WAAanG,OAAOnS,EAAKsY,YAAc,EACjErL,KAAM,GACNoL,SAAUrY,EAAKqY,SACf9G,UAAWvR,EAAKsY,WAAazF,KAAKC,MAAMX,OAAOnS,EAAKsY,YAActY,EAAKqY,UAAY,EAAI,EACvFuC,eAAgB,GAChBlM,kBAAkB,EAClBiM,YAAa,EACbJ,mBAAoB,EACpBgC,iBAAkB,EAClBkB,kBAAmB,GACnB7P,iBAAkB,EAClBpD,aAAa,EACbgQ,UAAW,GACX5Z,eAAWmG,EACXuP,WAAY,EACZhB,eAAgB,EAChB5H,WAAW,EACX3D,OAAQyU,IAAGxe,EAAKuY,YAChBkD,GAAIzb,EAAKuY,WACT1J,mBAAmB,EACnBG,gBAAiB,GAzBFhP,wEAiCjB,OACEsB,EAAAC,EAAAC,cAACod,EAAA,EAAD,KACEtd,EAAAC,EAAAC,cAACqd,EAAA,EAAD,CAAOC,KAAK,IAAIrW,OAAK,EAACsW,UAAW5e,KAAKoZ,gBACtCjY,EAAAC,EAAAC,cAACqd,EAAA,EAAD,CAAOC,KAAK,SAASrW,OAAK,EAACsW,UAAW5e,KAAK0Z,iBAC3CvY,EAAAC,EAAAC,cAACqd,EAAA,EAAD,CAAOC,KAAK,cAAcrW,OAAK,EAACsW,UAAW5e,KAAK4Z,kBAC/C5Z,KAAK8a,cACL9a,KAAK8Z,sEAWQ,IAAA5I,EAAAlR,KAGlB,IACEA,KAAKke,mCACLle,KAAK6e,aAAaC,MAClB9e,KAAK+c,sBACLvX,SAASC,eAAe,cAAcgR,QAAyC,IAA/BzW,KAAKI,MAAMqO,gBAG3DnP,OAAOiX,iBAAiB,UAAWvW,KAAKse,iBACxChf,OAAOiX,iBAAiB,QAASvW,KAAK+e,eACtC/e,KAAKqY,cAAgBrY,KAAKme,6BAC1BR,WAAW,WACTzM,EAAKoH,qBAAuBpH,EAAK+L,8BAChC,KAIH,MAAO3T,oDAqFThK,OAAOyZ,oBAAoB,UAAW/Y,KAAKse,sDAuQhCU,GAAM,IAAAC,EAAAjf,KACjB,OAAOkf,MAAMF,GACVjb,KAAK,SAAAob,GAAQ,OAAIA,EAASxQ,SAC1B5K,KAAK,SAAA4K,GACJsQ,EAAK/D,SAAS,CAAEpO,KAAM6B,EAAKqN,MAAM,OAAS,WACxC,IAAIvL,EAAgBvR,EAAG,kBACnB+f,EAAK7e,MAAM0M,KAAKkF,OAAO9S,EAAG,oBAC1B+f,EAAK7e,MAAM0M,KAAK,GACpBmS,EAAK/D,SAAS,CAAEzK,iBAAiB,cAGjCwO,EAAK/D,SAAS,CACZ/E,WAAY8I,EAAK7e,MAAM0M,KAAKzI,OAAO,SAAC+a,EAAKxR,GAAN,OAAmBwR,EAAMxR,EAASxG,QAAQ,4KAmT7EiY,EAAWrf,KAAKI,MAAMwJ,OAAOyU,GAAGiB,KAAKC,kBACpBL,MAAMG,EAAU,CAAEG,KAAM,0BACjCC,GAGZ/a,QAAQC,IAAI,yBAFZD,QAAQ+C,MAAM,2EAKhB/C,QAAQ+C,MAARiY,EAAAC,uJAwMY,IAAAC,GAAA,EAAAC,GAAA,EAAAC,OAAAlZ,EAAA,IACd,QAAAmZ,EAAAC,EAAkBxa,SAASuP,uBAAuB,gBAAlDkL,OAAAC,cAAAN,GAAAG,EAAAC,EAAA1M,QAAA6M,MAAAP,GAAA,EAAmE,CAAAG,EAAA7U,MAC7D8N,UAAUC,OAAO,eAFT,MAAApT,GAAAga,GAAA,EAAAC,EAAAja,EAAA,YAAA+Z,GAAA,MAAAI,EAAAI,QAAAJ,EAAAI,SAAA,WAAAP,EAAA,MAAAC,WAx7BAnf,IAAMsB,WC3BxBoe,IAASC,OAAOnf,EAAAC,EAAAC,cAACkf,GAAD,MAAS/a,SAASC,eAAe,6BCLjD+a,EAAAC,QAAiBC,EAAAC,EAAuB,iECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,0DCAxC,IACMC,EADKC,EAAQ,KACDC,oBA8ClBN,EAAOC,QAAU,CACfM,UA7CgB,WAChB,IAAIC,OAAUpa,EAad,OAZA9G,OAAOmhB,KAAKL,GAAQM,QAAQ,SAAUC,GACpCP,EAAOO,GAAQD,QAAQ,SAAUE,GAC3B,SAAWA,EAAMC,SAA6B,IAAnBD,EAAME,UAItB,QAAXH,IACFH,EAAUI,EAAMJ,aAItBtc,QAAQC,IAAIqc,GACLA,GAgCPjF,YA7BkB,SAAAwF,GAClB,IACIC,EAAK,IADcliB,OAAOmiB,mBAAqBniB,OAAOoiB,sBAAwBpiB,OAAOqiB,yBAC3D,CAC1BC,WAAY,KAEdC,EAAO,aACPC,EAAW,GACXC,EAAU,kEAEZ,SAASC,EAAU1G,GACZwG,EAASxG,IAAKiG,EAAQjG,GAC3BwG,EAASxG,IAAM,EAEjBkG,EAAGS,kBAAkB,IACrBT,EAAGU,YAAY,SAAUC,GACvBA,EAAIA,IAAInG,MAAM,MAAMkF,QAAQ,SAAUkB,GAChCA,EAAKrd,QAAQ,aAAe,GAChCqd,EAAKC,MAAMN,GAASb,QAAQc,KAE9BR,EAAGc,oBAAoBH,EAAKN,EAAMA,IACjCA,GACHL,EAAGe,eAAiB,SAAUC,GACvBA,GAAQA,EAAIC,WAAcD,EAAIC,UAAUA,WAAcD,EAAIC,UAAUA,UAAUJ,MAAMN,IACzFS,EAAIC,UAAUA,UAAUJ,MAAMN,GAASb,QAAQc,0BC3CnDxB,EAAAC,QAAiBC,EAAAC,EAAuB,2DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.a8bf6787.chunk.js","sourcesContent":["// let qs = (function (a) {\n//   console.log(\"in qs:\" + window.location.href)\n//   if (a === \"\") return {};\n//   var b = {};\n//   for (var i = 0; i < a.length; ++i) {\n//     var p = a[i].split('=', 2);\n//     if (p.length === 1)\n//       b[p[0]] = \"\";\n//     else\n//       b[p[0]] = decodeURIComponent(p[1].replace(/\\+/g, \" \"));\n//   }\n//   return b;\n// })(window.location.search.substr(1).split('&'));\n\nconst qs = function(id) {\n  let parsedUrl = new URL(window.location.href);\n  if (parsedUrl.searchParams.has(id)) {\n    return parsedUrl.searchParams.get(id);\n  } else {\n    return false;\n  }\n}\nexport default qs;","import React from 'react';\nimport './Webcam.scss';\nimport PropTypes from 'prop-types';\n\nclass Webcam extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isRecording: false,\n      recorder: null,\n      videoSrc: null,\n      videoEle: null,\n      startTime: 'time',\n    };\n    this.video = React.createRef();\n  }\n  getCurrentTime() {\n    let today = new Date();\n    let date =\n      today.getFullYear() +\n      '-' +\n      (today.getMonth() + 1) +\n      '-' +\n      today.getDate();\n    let time = today.getTime(); //today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n    return date + '-' + time;\n  }\n  \n  render() {\n    // console.log(this.props.videoRef);\n    return (\n      <div className='vid_card' onClick={this.startRecording}>\n        <video\n          className='cam'\n          controls\n          autoPlay\n          playsInline\n          muted\n          ref={this.props.videoRef}\n        />\n        <p className='cam_label'>{this.props.name}</p>\n      </div>\n    );\n  }\n}\n\nWebcam.propTypes = {\n  name: PropTypes.string.isRequired,\n  videoRef: PropTypes.object.isRequired\n};\n\nexport default Webcam;\n","/* eslint-disable no-console */\nimport React, { useState, useEffect } from 'react';\n// import sample_cam from '../../assets/svg/sample-cam.svg';\nimport Webcam from '../Webcam/Webcam.js';\nimport RecordRTC, { MediaStreamRecorder } from 'recordrtc';\nimport qs from '../../utils/qs'\nimport cogoToast from 'cogo-toast';\n// import PropTypes from 'prop-types';\n\nexport default function CameraList(props) {\n  const [availableCams, setAvailableCams] = useState([]);\n  const [recordingStatus, setRecordingStatus] = useState(\"recording-status-loading...\");\n  const [availableMics, setAvailableMics] = useState([]);\n  const [pluggedInDevices, setPluggedInDevices] = useState([]);\n\n  const helper_extractRelevantCamInfo = device => {\n    return {\n      camera_info: {\n        id: device.deviceId,\n        label: device.label,\n        groupId: device.groupId\n      },\n      ref: React.createRef(),\n      recorder: null\n    };\n  }\n  const helper_addToVideoDevices = (device, videodevices) => {\n    device = helper_extractRelevantCamInfo(device);\n    console.log(availableCams);\n    const devicePrior = availableCams.filter(cam => {\n      return cam.camera_info.id === device.camera_info.id\n    })[0];\n    console.log(devicePrior);\n    if (devicePrior) {\n      console.log('found prior device');\n      device.mic_info = devicePrior.mic_info;\n    } else {\n      console.log('using first cam mic!!!')\n      device.mic_info = availableMics[0];\n    }\n    videodevices.push(device);\n  }\n  const helper_addToMicDevices = (device, micDevices) => {\n    if (micDevices.indexOf(device.deviceId) < 0)\n      micDevices.push(device);\n  }\n  const helper_getNumCams = devices => {\n    const num = devices.reduce((accumulator, device) => {\n      return device.kind === 'videoinput' ? accumulator + 1 : accumulator;\n    }, 0);\n    props.updateDetectedNumCams(num);\n    return num;\n  }\n  const initCams = () => {\n    if (!navigator.mediaDevices || !navigator.mediaDevices.enumerateDevices) {\n      console.log('enumerateDevices() not supported.');\n    } else {\n      navigator.mediaDevices.enumerateDevices().then(devices => {\n        let videoDevices = [];\n        let micDevices = [];\n        const numCams = helper_getNumCams(devices);\n\n        console.log(\"number of cams detected: \" + numCams);\n        devices.map(function(device) {\n          if (device.kind === 'audioinput') {\n            if (\n              !device.label.toLowerCase().includes('default') &&\n              !device.label.toLowerCase().includes('communications') && \n              !device.label.toLowerCase().includes('built-in')\n            ) {\n              helper_addToMicDevices(device, micDevices);\n            }\n          }            \n          if (device.kind === 'videoinput') {\n            helper_addToVideoDevices(device, videoDevices);\n          }\n          return null;\n        });\n        setAvailableMics(micDevices);\n        setAvailableCams(videoDevices);\n\n        document.getElementById('startBtn').click();\n        document.getElementById('startBtn').disabled = true;\n        // console.log('getAvailableDevices success!');\n      })\n      .catch(function(err) {\n        console.log(err.name + ': ' + err.message);\n      });\n    }\n  }\n  // const initMics = () => {\n  //   let id = 0;\n  //   availableCams.map(cam => {\n  //     if (availableMics[id]) cam.mic_info = availableMics[id++].deviceId;\n  //   });\n  // }\n\n  Array.prototype.diff = function(a) {\n    return this.filter(function(i) {\n      return a.indexOf(i) < 0;\n    });\n  };\n\n  const getNewMicCam = (newPluggedInID, allDevices) => {\n    const newCam = allDevices.filter(device => {\n      return (\n        newPluggedInID.indexOf(device.deviceId) >= 0 &&\n        device.kind === 'videoinput'\n      );\n    });\n    // should only contain one \n    const newMic = allDevices.filter(device => {\n      return (\n        newPluggedInID.indexOf(device.deviceId) >= 0 &&\n        device.kind === 'audioinput'\n      ); \n    });\n    if (newMic.length > 1) {\n      console.error('multiple new mics detected')\n    }\n    if (newCam.length > 1) {\n      console.error('multiple new cams detected');\n    }\n    const newMicID = newMic[0].deviceId;\n\n    return [newMicID, newCam[0]];\n  }\n\n  const checkIfMac = (resolve) => {\n    let faceTimeDevice = undefined;\n    let defaultMic = undefined;\n    return new Promise(() => {\n      navigator.mediaDevices.enumerateDevices().then(devices => {\n        faceTimeDevice = devices.filter(device => {\n          return device.label.toLowerCase().includes('facetime');\n        });\n        defaultMic = devices.filter(device => {\n          return device.deviceId === 'default'\n        });\n      }).then(()=> {\n        resolve(faceTimeDevice[0], defaultMic[0]);\n      });\n    })\n  }\n\n  const startFaceTimeCam = (faceTimeDevice, defaultMic) => {\n    if (faceTimeDevice) {\n      const device = helper_extractRelevantCamInfo(faceTimeDevice)\n      device.mic_info = defaultMic.deviceId;\n      setAvailableCams([device]);\n      document.getElementById('startBtn').disabled = false;\n      document.getElementById('startBtn').click();\n      document.getElementById('dummyBtn').disabled = false;\n      document.getElementById('dummyBtn').click();\n      cogoToast.success('Mac FaceTime Camera started', {\n        hideAfter: 0.3,\n        onClick: hide => {\n          hide()\n        }\n      });\n    }\n  }\n\n  const addNewCamMic = () => {\n    try {\n      checkIfMac(startFaceTimeCam);\n    } catch (Exception) {\n      // console.err('not a mac')\n    }\n    navigator.mediaDevices.enumerateDevices().then(devices => {\n      const allDevices = devices.filter(device => {\n        return (\n          device.label.toLowerCase().includes('aoni') &&\n          !device.label.toLowerCase().includes('communication') &&\n          !device.label.toLowerCase().includes('default')\n        );\n      });\n      let detectedTwoDevices = false;\n\n      const idAoni = allDevices.map(device => {\n        return device.deviceId;\n      });\n      // const newPluggedInPaired = allDevices.map(device => [device.kind, device.deviceId])\n      // console.log(newPluggedInPaired);\n\n      const newPluggedInID = idAoni.diff(pluggedInDevices);\n      if (newPluggedInID.length === 0) {\n        // console.log('no new devices detected');\n        cogoToast.warn('No additional webcams detected.', {hideAfter: 1});\n      } else if (newPluggedInID.length === 2) {\n        detectedTwoDevices = true;\n        // console.log(\n        //   'new devices: ' + newPluggedInID.map(d => d.substring(0, 5))\n        // );\n      }\n\n      if (detectedTwoDevices) {\n        let [newMicID, newCamDevice] = getNewMicCam(newPluggedInID, allDevices);\n        newCamDevice = helper_extractRelevantCamInfo(newCamDevice);\n        const existCamera = availableCams.filter(cam => {\n          return cam.camera_info.id === newCamDevice.camera_info.id;\n        })[0];\n        if (!existCamera) {\n          newCamDevice.mic_info = newMicID;\n          let temp = availableCams;\n          temp.push(newCamDevice);\n          setAvailableCams(temp);\n          // cogoToast.success(\n          //   'New webcam: ' + newCamDevice.camera_info.id.substring(0, 5) + ' added.'\n          // ), {\n          //   hideAfter: 0.5,\n          //   position: 'top-left',\n          //   onClick: hide => {\n          //     hide();\n          //   }\n          // };\n          cogoToast.success('Webcam: ' + newCamDevice.camera_info.id.substring(0, 5) + ' added.', {\n            hideAfter: 1,\n            position: 'top-left',\n            onClick: hide => hide()\n          });\n          document.getElementById('startBtn').disabled = false;\n          initCams();\n          setPluggedInDevices(idAoni);\n        }\n      }      \n    }).then(() => {\n        document.getElementById('dummyBtn').disabled = false;\n        document.getElementById('dummyBtn').click();\n    });\n  }\n\n  function useAvailableWebCams() {\n    //  runs once\n    useEffect(() => {\n      props.updateConnectionStatus();\n    }, [props.addCamState]);\n  }\n\n  const initCamsDummy = () => {\n    stopAllCams(true);\n  }\n\n  const startAllCams = () => {\n    const temp =\n    recordingStatus === 'recording-status-loading...' ? {} : recordingStatus;\n    // goes through all cams array and through each ID, accesses and opens it using navigator\n    availableCams.map(cam => {\n      // console.log(cam.mic_info);\n      if (!cam.mic_info) {\n        console.error('using default microphone...');\n      }\n      navigator.mediaDevices\n        .getUserMedia({\n          audio: {\n            deviceId: {exact: (cam.mic_info) ? cam.mic_info : 'default'}\n          },\n          video: {\n            frameRate: {exact: 30, ideal: 30},\n            width: {ideal: 1920},\n            height: {ideal: 1080},\n            deviceId: cam['camera_info'].id\n          }\n        })\n        .then(camera => {\n          // console.log(camera.getTracks().forEach(track=> {console.log(\"track:\" + track.label + \",\" + track.kind)}));\n          // console.log(\"////////////////////////\");\n          let recorder = RecordRTC(camera, {\n            recorderType: MediaStreamRecorder, //WebAssemblyRecorder,\n            type: 'video',\n            frameRate: 30,\n            desiredSampRate: 16000,\n            width: 1920,\n            height: 1080,\n            numberOfAudioChannels: 2,\n            disableLogs: true\n          });\n          if (recorder.getState() !== 'recording') {\n            recorder.camera = camera;\n            cam['recorder'] = recorder;\n            let video = cam['ref'];\n            try {\n              video.current.srcObject = camera;\n            } catch (NotYetLoadedException) {\n              //\n            }\n            // resetInitialCams(recorder);\n            recorder.startRecording();\n          }\n          triggerRecordStatusUpdate(temp, recorder, cam);\n        })\n        .catch(error => {\n          console.error(error);\n        });\n        return availableCams;\n    });\n  };\n\n  const stopAllCams = (dummy) => {\n    const temp =\n      recordingStatus === 'recording-status-loading...' ? {} : recordingStatus;\n      \n    availableCams.map(cam => {\n      let recorder = cam['recorder'];\n      if (recorder !== null) {\n        recorder.stopRecording(() => {\n          let blob = recorder.getBlob();\n          console.log(\n            '%c recorded data',\n            'background: #222; color: #bada55',\n            blob\n          );\n          if (dummy !== true) {\n            props.socket.emit('client: save data', {\n              name: qs(\"name\"),\n              sentence_index: qs(\"sentence_index\"),\n              camera_id: cam['camera_info'].id,\n              blob: blob\n            });\n          } else {\n            console.log('dummy received, did not save blob');\n          }\n\n        });\n        triggerRecordStatusUpdate(temp, recorder, cam);\n      }\n      return availableCams;\n    });\n  };\n\n  const triggerRecordStatusUpdate = (temp, recorder, cam) => {\n    try {\n      temp[cam['camera_info'].id.substring(0, 15)] = recorder.getState();\n      setRecordingStatus(temp);\n      props.updateConnectionStatus(temp);\n    } catch (NotYetLoadedException) {\n      cogoToast.warn('Camera not yet loaded!', {\n        hideAfter: 0,\n        onClick: hide => {\n          hide()\n        }\n      });\n    }\n  }\n\n  const resumeAllCams = () => {\n    const temp =\n      recordingStatus === 'recording-status-loading...' ? {} : recordingStatus;\n    availableCams.map(cam => {\n      let recorder = cam['recorder'];\n      let state = undefined;\n      try {\n        state = recorder.getState();\n      } catch {\n        cogoToast.warn(\"Camera not yet loaded!\", {\n          hideAfter: 0,\n          onClick: hide => {\n            hide()\n          }\n        });\n      }\n      if (state === \"paused\") {\n        recorder.resumeRecording();\n      } else if (state === \"stopped\"){\n        try {\n          recorder.startRecording();\n        } catch (NotYetLoadedException) {\n          cogoToast.warn('Camera not yet loaded!', {\n            hideAfter: 0,\n            onClick: hide => {\n              hide()\n            }\n          });\n        }\n      }\n      triggerRecordStatusUpdate(temp, recorder, cam);\n      return availableCams;\n    });\n  }\n\n  useAvailableWebCams();\n\n  // dummy to fix bug of first video\n  props.socket.on('server: dummy vid, do not save', function() {\n    document.getElementById('dummyBtn').click();\n    document.getElementById('dummyBtn').disabled = true;\n  });\n\n  // this is actually what calls start cams\n  props.socket.on('server: start cams', function () {\n    document.getElementById(\"resumeBtn\").click();\n    document.getElementById(\"resumeBtn\").disabled = true;\n    document.getElementById('stopBtn').disabled = false;\n\n  });\n\n  // this is actually what calls stop cams\n  props.socket.on('server: stop cams', function () {\n    document.getElementById('stopBtn').click();\n    document.getElementById('stopBtn').disabled = true;\n    document.getElementById(\"resumeBtn\").disabled = false;\n  });\n\n  const debugControls = (debug) => {\n    if (debug) {\n      return (\n        <div>\n          {/* <p>Don't click these while actual testing</p> */}\n          <button id='dummyBtn' className=\"hidden_button\" onClick={initCamsDummy}>\n            dummy reset\n          </button>\n          <button id='startBtn' className=\"hidden_button\" onClick={startAllCams}>\n            start and pause all cams\n          </button>\n          <button id='resumeBtn' className=\"hidden_button\" onClick={resumeAllCams}>\n            resume all cams\n          </button>\n          <button id='stopBtn' className=\"hidden_button\" onClick={stopAllCams}>\n            stop all cams\n          </button>\n          <button\n            id='addCamBtn'\n            className='hidden_button'\n            onClick={addNewCamMic} \n          >\n            Add Cam\n          </button>\n          {/* <button id=\"setCompID\" onClick={getSetCompID}>get set computer ID</button> */}\n        </div>\n      );\n    }\n  }\n\n  const renderCams = addCam => {\n\n    // initMics()\n    const debug = true;\n    let i = 0; \n    const comp_camsList = availableCams.map(cam => {\n      return (\n        <Webcam\n          key={i++}\n          name={'ID: ' + cam['camera_info'].id.substring(0, 15)}\n          videoRef={cam['ref']}\n        />\n      );\n    });\n      \n\n    return (\n      <div id='camera_list'>\n        {debugControls(debug)}\n        <div>\n          <div className='cameras'>{comp_camsList}</div>\n          <button className='debug_button' style={{ marginTop: '1em'}} onClick={addCam}>Add Webcam</button>\n        </div>\n      </div>\n    );\n  };\n  \n  return renderCams(props.addCam);\n}","import React, { Component } from 'react'\nimport './NameField.scss'\nimport PropTypes from 'prop-types';\n\nexport default class NameField extends Component {\n  saveName = () => {\n    let name = document.getElementById(\"name\").value;\n    // document.location.search = \"name=\" + name + \"&sentence_index=0\";\n    let url_state = '?name=' + name + '&sentence_index=0'\n    window.history.pushState(\n      null,\n      null,\n      url_state\n    );\n    \n    this.props.socket.emit('client: start testing', {\n      name,\n      sentence_index: 0\n    })\n    this.props.socket.emit('client: dummy vid, do not save');\n    this.props.socket.emit('client: update recording progress', 0);\n    this.props.socket.emit('client: save total time', [0,0,0]);\n    this.props.socket.emit('client: save total start time', new Date())\n    this.props.updateTesterContents();\n    this.props.updateGreenLightStatus(true);\n    \n  }\n\n  isNameEmpty = () => {\n    try {\n      return !document.getElementById(\"name\").value.replace(/\\s/g, '').length\n    }\n    catch (NotYetLoadedException) {\n      //\n    }\n  }\n\n  detectEnter = (e) => {\n    if (!this.isNameEmpty()) {\n      if (e.which === 13) {\n        this.saveName(e);\n      } \n    } else {\n      document.getElementById('nameNotFilled').innerText='请输入名字'\n    }\n  }\n\n  startBtn = (e) => {\n    if (!this.isNameEmpty()) {\n      if (!e.buttons) {\n        this.saveName(document.getElementById(\"name\").value);\n      }\n    } else {\n      document.getElementById('nameNotFilled').innerText = '请输入名字'\n    }\n  }\n\n\n  render() {\n    return (\n      <div>\n        <div className='name_input'>\n          <input\n            type='text'\n            name='name'\n            id='name'\n            placeholder='输入名字（拼音）'\n            onKeyPress={this.detectEnter}\n            autoFocus\n            required\n          />\n          <br/>\n          <button className=\"btn btn-center\" onClick={this.startBtn}>开始实验</button>\n          {(this.isNameEmpty()) && <p className=\"warning_message\" id=\"nameNotFilled\"></p>}\n        </div>\n      </div>\n    );\n  }\n}\n\nNameField.propTypes = {\n  socket: PropTypes.object.isRequired,\n  updateTesterContents: PropTypes.func.isRequired,\n  updateGreenLightStatus: PropTypes.func.isRequired,\n};","/* eslint-disable no-console */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport NameField from '../NameField/NameField';\nimport qs from '../../utils/qs';\n\nexport default function InProcessScreen(props) {\n  const [recording, setRecordState] = useState(false);\n  const [done_recording, setDoneRecording] = useState(false);\n  const [reset_state, reset] = useState(false);\n  const [nameSet, setName] = useState(qs('name'));\n\n  function updateSentence(data) {\n    reset(true);\n    props.updateSentence(data);\n  }\n\n  function getRecordState() {\n    if (recording) {\n      return 'Done';\n    } else if (done_recording && !reset_state) {\n      return 'Retry';\n    } else {\n      return 'Record';\n    }\n  }\n\n  function stopRecording() {\n    setDoneRecording(true);\n    setRecordState(false);\n    props.socket.emit('client: stop cams', 'in process screen');\n    reset(false);\n    props.showFileSavingLoader();\n    props.updateSentence('$next');\n\n    props.updateGreenLightStatus(false);\n    props.stopTimer();\n    markSentenceAsDone(props.curr_sentence_index);\n  }\n\n  function markSentenceAsDone(curr_sentence_index) {\n    if (curr_sentence_index >= 0 ) props.updateRecordProgress(curr_sentence_index);\n  }\n\n  function startRecording() {\n    props.socket.emit('client: start cams', 'in process screen');\n    setRecordState(true);\n    props.startTimer();\n    document.getElementById('testerRecordBtn').className = 'btn btn-danger';\n\n  }\n\n  function record() {\n    document.getElementById('showSavedFilesBtn').disabled = false;\n    if (recording) {\n      stopRecording();\n    } else {\n      startRecording();\n    }\n  }\n\n  \n  function disableNextButtonIfCurrNotRead() {\n    if (!props.debugMode) {\n      const recordedYet =\n      props.recordedProgress > props.curr_sentence_index;\n      try {\n        if (recordedYet) {\n          document.getElementById('testerNextBtn').disabled = false;\n        } else {\n          document.getElementById('testerNextBtn').disabled = true;\n        }\n      } catch (Exception) {\n        // console.log(Exception);\n      }\n    }\n  }\n\n  function makeEmojiLayout(msg, emoji) {\n    return (\n      <div className='emoji-layout-container'>\n        <div className='emoji-layout-emoji-left'> {emoji}</div>\n        <div>\n          {msg[0]}\n          <br />\n          {msg[1]}\n        </div>\n        <div className='emoji-layout-emoji-right'> {emoji}</div>\n      </div>\n    );\n  }\n\n  function displaySentenceToBeRead() {\n    disableNextButtonIfCurrNotRead();\n    const recordedYet = \n      (props.curr_sentence_index > 0) ? \n      props.recordedProgress >= props.curr_sentence_index : \n      false;\n    const emoji = recordedYet ? '↺' : '';\n    let sentence = props.data[props.curr_sentence_index];\n    if (sentence) {\n      const line1 = sentence.substring(0,10)\n      const line2 = sentence.substring(10);\n      sentence = makeEmojiLayout([line1, line2], emoji);\n    }\n    \n    // const sentence = recordedMessage + ' ' + props.data[props.curr_sentence_index] + ' ' + recordedMessage;\n    const recordedClassName = recordedYet ? 'recorded_sentence_highlight sentence_to_be_read' : 'sentence_to_be_read'\n    return (\n      <div>\n        <br />\n        <div className={recordedClassName}>\n          <p style={{fontSize: '16px'}}>[{props.curr_sentence_index}]</p>\n          {sentence}\n        </div>\n      </div>\n    );\n  }\n\n  \n\n  function trans(text) {\n    if (text === 'Done') {\n      return '结束录制';\n    } else if (text === 'Retry') {\n      return '重新录制';\n    } else if (text === 'Record') {\n      return '开始录制'\n    } else {\n      return text;\n    }\n  }\n\n  function updateTesterContents() {\n    setName(true);\n  }\n\n  function getContents() {\n    if (!nameSet) {\n      return (\n        <div>\n          <NameField\n            socket={props.socket}\n            updateTesterContents={updateTesterContents}\n            updateGreenLightStatus={props.updateGreenLightStatus}\n          />\n        </div>\n      );\n    } else {\n      try {\n        let recordTimeEle = document.getElementById('record_time_content');\n        let recordTimeMsg = document.getElementById('record_time_msg');\n        let colorRecordTime = (recordTimeEle.innerText === '00:00:00') ? 'gray' : 'red';\n        if (colorRecordTime === 'gray') {\n          recordTimeEle.style.transition = 'all 0.5 ease'\n          recordTimeMsg.style.transition = 'all 0.5 ease'\n          recordTimeEle.style.color = 'black';\n          recordTimeMsg.style.color = 'black';\n        } else {\n          recordTimeEle.style.transition = 'all 0.5 ease'\n          recordTimeMsg.style.transition = 'all 0.5 ease'\n          recordTimeEle.style.color = '#FF1053';\n          recordTimeMsg.style.color = '#FF1053';\n        }\n      } catch (NotYetLoadedException) {\n        //\n      }\n      return (\n        <div>\n          {displaySentenceToBeRead()}\n          <div className='recording_hint'>\n          <pre id='record_time_content'>00:00:00</pre>\n          <pre id='record_time_msg'>录制中</pre>\n            \n          </div>\n          <button\n            id='testerRecordBtn'\n            className={\n              getRecordState() === 'Done'\n                ? 'btn btn-danger'\n                : 'btn_highlight_green'\n            }\n            onClick={record}\n            disabled={\n              !props.recordGreenLight ||\n              props.numFilesSaved % props.requiredNumCams !== 0 || \n              !props.connectedToServer\n            }\n          >\n            {trans(getRecordState())}\n          </button>\n          <br />\n          <button\n            className='btn'\n            id='testerPrevBtn'\n            onClick={() => updateSentence('$prev')}\n            disabled={\n              props.curr_sentence_index === 0 ||\n              !props.recordGreenLight ||\n              props.numFilesSaved % props.requiredNumCams !== 0 ||\n              recording\n            }\n          >\n            ⬅上一句\n          </button>\n          <button\n            className='btn'\n            id='testerNextBtn'\n            onClick={() => updateSentence('$next')}\n            disabled={\n              props.curr_sentence_index === props.data_length - 1 ||\n              !props.recordGreenLight ||\n              props.numFilesSaved % props.requiredNumCams !== 0 ||\n              recording\n            }\n          >\n            下一句➡\n          </button>\n          {(props.detectedNumCams === 0) && <p className=\"warning_message\">请加摄像头</p>}\n          {(!props.connectedToServer) && <p className=\"warning_message\">请确认您链接到服务器</p>}\n        </div>\n      );\n    }\n  }\n\n  return (\n    <div className='test_container'>\n      {getContents()}\n    </div>\n  );\n}\n\nInProcessScreen.propTypes = {\n  curr_sentence_index: PropTypes.number.isRequired,\n  curr_sentence: PropTypes.string.isRequired,\n  data_length: PropTypes.number.isRequired,\n  updateSentence: PropTypes.func.isRequired,\n  socket: PropTypes.object.isRequired,\n  data: PropTypes.array.isRequired,\n  updateGreenLightStatus: PropTypes.func.isRequired,\n  recordGreenLight: PropTypes.bool.isRequired,\n  numFilesSaved: PropTypes.number.isRequired,\n  requiredNumCams: PropTypes.number.isRequired,\n  stopTimer: PropTypes.func.isRequired,\n  startTimer: PropTypes.func.isRequired,\n  recordedProgress: PropTypes.number.isRequired,\n  updateRecordProgress: PropTypes.func.isRequired,\n  showFileSavingLoader: PropTypes.func.isRequired,\n  debugMode: PropTypes.bool.isRequired,\n  connectedToServer: PropTypes.bool.isRequired,\n  detectedNumCams: PropTypes.number.isRequired,\n};\n","import React from 'react'\nimport PropTypes from 'prop-types';\nimport { Line } from 'rc-progress';\n\nexport default function ProgressBar(props) {\n  const percent = ((props.curr ) / (props.total + 1) * 100).toFixed(2);\n  const alignmentStyle = props.align === 'left' ? { margin: '0' } : {};\n  return (\n    <div className='progress_bar' style={alignmentStyle}>\n      <pre>\n        进度: {props.curr} / {props.total + 1} ({percent}%)\n      </pre>\n      <Line\n        percent={percent}\n        strokeWidth={props.strokeWidth}\n        trailWidth={props.strokeWidth}\n        strokeColor = '#3bb8ce'\n        trailColor='#363732'\n      />\n    </div>\n  );\n}\n\nProgressBar.propTypes = {\n  curr: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  align: PropTypes.string.isRequired,\n  strokeWidth: PropTypes.number.isRequired,\n};\n","import React, { useState } from 'react';\nimport './Tester.scss';\nimport PropTypes from 'prop-types';\nimport InProcessScreen from './InProcessScreen.js';\nimport qs from '../../utils/qs'\nimport ProgressBar from '../ProgressBar'\n\nfunction Tester(props) {\n  const [intervalID, setIntervalID] = useState(undefined);\n\n  function comp_inProcessScreen() {\n    return (\n      <InProcessScreen\n        updateSentence={props.updateSentence}\n        curr_sentence_index={props.curr_sentence_index}\n        data_length={props.data_length}\n        socket={props.socket}\n        data={props.data}\n        curr_sentence={props.curr_sentence}\n        recordGreenLight={props.recordGreenLight}\n        updateGreenLightStatus={props.updateGreenLightStatus}\n        numFilesSaved={props.numFilesSaved}\n        requiredNumCams={props.requiredNumCams}\n        stopTimer={stopTimer}\n        startTimer={startTimer}\n        recordedProgress={props.recordedProgress}\n        updateRecordProgress={props.updateRecordProgress}\n        showFileSavingLoader={props.showFileSavingLoader}\n        debugMode={props.debugMode}\n        connectedToServer={props.connectedToServer}\n        detectedNumCams={props.detectedNumCams}\n      />\n    );\n  }\n\n  function stopTimer() {\n    clearInterval(intervalID);\n    document.getElementById('record_time_content').innerHTML = '00:00:00';\n  }\n\n  function startTimer() {\n    setIntervalID(createInterval());\n  }\n\n  function createInterval() {\n    let time = [0, 0, 0];\n    return setInterval(() => {\n      let hour = time[0];\n      let min = time[1];\n      let sec = time[2];\n\n      if (sec < 60) {\n        sec += 1;\n      }\n      if (sec === 60) {\n        min += 1;\n        sec = 0;\n      }\n      if (min === 60) {\n        hour += 1;\n        min = 0;\n      }\n      time = [hour, min, sec];\n      document.getElementById('record_time_content').innerHTML =\n        ('0' + hour).slice(-2) +\n        ':' +\n        ('0' + min).slice(-2) +\n        ':' +\n        ('0' + sec).slice(-2);\n      }, 10);\n  }\n\n  return (\n    <div className='testing_screen'>\n      <ProgressBar\n        curr={props.recordedProgress}\n        total={props.data_length - 1}\n        align={'center'}\n        strokeWidth={2}\n      />\n      <div className='middle'>\n        <div className='inner'>{comp_inProcessScreen()}</div>\n      </div>\n      <pre\n        hidden={\n          props.recordGreenLight ||\n          props.curr_sentence_index === 0 ||\n          !qs('name')\n        }\n        className='warning_message'\n      >\n        如果等保存时间多余10秒钟，通知老师来从设置机器\n      </pre>\n    </div>\n  );\n}\n\nTester.propTypes = {\n  updateSentence: PropTypes.func.isRequired,\n  curr_sentence_index: PropTypes.number.isRequired,\n  curr_sentence: PropTypes.string.isRequired,\n  data_length: PropTypes.number.isRequired,\n  socket: PropTypes.object.isRequired,\n  data: PropTypes.array.isRequired,\n  recordGreenLight: PropTypes.bool.isRequired,\n  updateGreenLightStatus: PropTypes.func.isRequired,\n  numFilesSaved: PropTypes.number.isRequired,\n  requiredNumCams: PropTypes.number.isRequired,\n  recordedProgress: PropTypes.number.isRequired,\n  updateRecordProgress: PropTypes.func.isRequired,\n  totalTime: PropTypes.array.isRequired,\n  updateTotalTime: PropTypes.func.isRequired,\n  showFileSavingLoader: PropTypes.func.isRequired,\n  debugMode: PropTypes.bool.isRequired,\n  connectedToServer: PropTypes.bool.isRequired,\n  detectedNumCams: PropTypes.number.isRequired,\n}\n\nexport default Tester;\n","import React, { Component } from 'react'\n\nexport default class TableHeader extends Component {\n  render() {\n    return (\n      <div>\n        <div className='table_header_footer'>\n          <h3>Sentence</h3>\n          {/* <div>Length</div>\n          <div>Actions</div> */}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './TableRow.scss';\n// import Actions from './Actions';\nimport PropTypes from 'prop-types';\n\nexport default class TableRow extends Component {\n  getClassOfRowItem = () => {\n    let read = this.props.read ? 'read row_item' : 'row_item';\n    // let sentence = this.props.sentence;\n    let is_current = this.props.curr_sentence_index === this.props.index ? ' curr_sentence' : '';\n    return read + is_current;\n  }\n\n\n  render() {\n    return (\n      <div>\n        <div className='table_row'>\n          <div className={this.getClassOfRowItem()}>\n            {this.props.index + \": \" + this.props.sentence}\n          </div>\n          {/* <div className='row_item'>00:00 / {this.props.time} </div> */}\n          {/* <Actions /> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nTableRow.propTypes = {\n  sentence: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  curr_sentence_index: PropTypes.number.isRequired,\n  time: PropTypes.string.isRequired,\n  read: PropTypes.bool.isRequired,\n};\n","import React, { Component } from 'react';\nimport TableRow from './TableRow.js';\nimport PropTypes from 'prop-types';\nimport './TableData.scss';\n\nexport default class TableData extends Component {\n  updateDataOnPageChange = () => {};\n  render() {\n    let data = this.props.data;\n    let page = this.props.curr_page;\n    let max_per_page = this.props.max_per_page;\n    let beg = page * max_per_page - max_per_page;\n    let end = beg + max_per_page;\n    let small_data = data.slice(beg, end);\n    let rowItems = small_data.map((sentence, i) => (\n      <TableRow\n        curr_sentence_index={this.props.curr_sentence_index}\n        sentence={sentence}\n        time='00:00'\n        read={false}\n        key={sentence+\":\"+i}\n        index={i + beg}\n      />\n    ));\n\n    return <div className='table'>{rowItems}</div>;\n  }\n}\n\nTableData.propTypes = {\n  data: PropTypes.array.isRequired,\n  curr_sentence_index: PropTypes.number.isRequired,\n  curr_page: PropTypes.number.isRequired,\n  max_per_page: PropTypes.number.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class PageNum extends Component {\n  render() {\n    return (\n      <div \n        className={this.props.selected ? 'page_num' : 'can_click_num page_num'}\n        onClick={() => this.props.updatePage(this.props.num)}>\n        {this.props.num}\n      </div>\n    );\n  }\n}\n\nPageNum.propTypes = {\n  num: PropTypes.number.isRequired,\n  selected: PropTypes.bool.isRequired,\n  updatePage: PropTypes.func.isRequired\n};\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\n\nexport default class PageInput extends Component {\n  handleChange = (event) => {\n    this.props.updatePage(Number(event.target.value));\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n  }\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor='page'>Page:</label>\n          <input\n            type='text'\n            value={this.props.curr_page}\n            onChange={this.handleChange}\n            className = 'debug_text_input'\n          />\n        </form>\n      </div>\n    );\n  }\n}\n\nPageInput.propTypes = {\n  updatePage: PropTypes.func.isRequired,\n  curr_page: PropTypes.number.isRequired\n}","import React, { Component } from 'react'\nimport './TableFooter.scss'\nimport PageNum from './PageNum.js'\nimport next from '../../assets/svg/collapse-chevron.svg'\nimport prev from '../../assets/svg/expand-chevron.svg';\nimport PropTypes from 'prop-types';\nimport PageInput from './PageInput.js'\nimport beg from '../../assets/svg/beg.svg'\nimport end from '../../assets/svg/end.svg';\n\nexport default class TableFooter extends Component {\n  updatePage=(page_num) => {\n    this.props.updatePage(page_num);\n  }\n\n  render() {\n    let curr_page = this.props.curr_page;\n    let max_per_page = this.props.max_per_page;\n    let mid_point = Math.floor(max_per_page / 2)\n    let max_page = Number(((this.props.total_data + 1) / this.props.max_per_page + 1).toFixed(0));\n    let page_nums = Array.from(new Array(max_per_page), (x, i) => { \n      let min = 0;\n      if (curr_page <= mid_point) {\n        min = i;\n      } else if (curr_page >= max_page - mid_point) {\n        min = i + max_page - max_per_page;\n      } else {\n        min = i + curr_page - mid_point - 1;\n      }\n      return min;\n    });\n    let nums_list = page_nums.map((i) => {\n      i = i + 1;\n      return <PageNum num={i} selected={curr_page === i} key={i} updatePage={this.props.updatePage}/>\n    });\n\n    return (\n      <div>\n        <div className='table_header_footer'>\n          <div className='table_footer'>\n            <div className='left_footer'>\n              <PageInput\n                updatePage={this.props.updatePage}\n                curr_page={this.props.curr_page}\n              />\n            </div>\n            <div className='right_footer'>\n              <img\n                src={beg}\n                alt=''\n                className='small_btn'\n                onClick={() => this.props.updatePage(1)}\n              />\n              <img\n                src={prev}\n                alt=''\n                className='small_btn'\n                onClick={() => this.props.updatePage(curr_page - 1)}\n              />\n              {nums_list}\n              <img\n                src={next}\n                alt=''\n                className='small_btn'\n                onClick={() => this.props.updatePage(curr_page + 1)}\n              />\n              <img\n                src={end}\n                alt=''\n                className='small_btn'\n                onClick={() => this.props.updatePage(max_page)}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nTableFooter.propTypes = {\n  updatePage: PropTypes.func.isRequired,\n  curr_page: PropTypes.number.isRequired,\n  total_data: PropTypes.number.isRequired,\n  max_per_page: PropTypes.number.isRequired\n};","import React, { Component } from 'react'\nimport TableHeader from './TableHeader.js'\nimport './Table.scss'\nimport TableData from './TableData.js'\nimport PropTypes from 'prop-types';\nimport TableFooter from './TableFooter';\nexport default class Table extends Component {\n  constructor(props) {\n    super(props);\n    let per_page = 8;\n    this.state = {\n      max_per_page: per_page\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <TableHeader />\n        <TableData\n          data={this.props.data}\n          curr_page={this.props.curr_page}\n          max_per_page={this.state.max_per_page}\n          curr_sentence_index={this.props.curr_sentence_index}\n        />\n        <TableFooter\n          total_data={this.props.data.length}\n          updatePage={this.props.updatePage}\n          curr_page={this.props.curr_page}\n          max_per_page={this.state.max_per_page}\n        />\n      </div>\n    );\n  }\n}\n\nTable.propTypes = {\n  curr_sentence_index: PropTypes.number.isRequired,\n  curr_page: PropTypes.number.isRequired,\n  updatePage: PropTypes.func.isRequired,\n  data: PropTypes.array.isRequired,\n};","import React, { Component } from 'react';\nimport Table from './Table';\nimport PropTypes from 'prop-types';\n\nexport default class DataCollection extends Component {\n\n\n  render() {\n    return (\n      <div>\n        <div className='data_table'>\n          <Table\n            data={this.props.data}\n            curr_sentence_index={\n              this.props.curr_sentence_index\n            }\n            curr_page={this.props.curr_page}\n            updatePage={this.props.updatePage}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nDataCollection.propTypes = {\n  data: PropTypes.array.isRequired,\n  curr_sentence_index: PropTypes.number.isRequired,\n  socket: PropTypes.object.isRequired,\n  updatePage: PropTypes.func.isRequired,\n  curr_page: PropTypes.number.isRequired\n};\n","import React, { useEffect } from 'react'\nimport Modali, { useModali } from 'modali';\nimport PropTypes from 'prop-types';\nimport cogoToast from 'cogo-toast';\n\nexport default function Modal(props) {\n  const [completeModal, toggleCompleteModal] = useModali({\n    animated: true,\n    title: props.title,\n    message: props.message,\n    buttons: [\n      <Modali.Button\n        label={props.buttonCancel ? props.buttonCancel : ''}\n        isStyleCancel\n        className={!props.buttonCancel ? 'display_none' : ''}\n        key={props.buttonCancel}\n        hidden={!props.buttonCancel}\n        onClick={() => toggleCompleteModal()}\n      />,\n      <Modali.Button\n        label={props.buttonConfirm}\n        isStyleDestructive\n        onClick={() => {\n          if (props.confirmFunc) props.confirmFunc();\n          toggleCompleteModal();\n          if (props.toast) cogoToast.info(props.toast, {\n            onClick: hide => {\n              hide()\n            }\n          });\n        }}\n        hidden={!props.buttonConfirm}\n        key={props.buttonConfirm}\n      />\n    ]\n  });\n  useEffect(() => {\n    if (props.onLoadFunc) props.onLoadFunc()\n    try {\n      if (!props.buttonCancel)\n        document.getElementsByClassName(\n          'modali-button-cancel'\n          )[0].className += ' display_none';\n      if (!props.buttonConfirm)\n        document.getElementsByClassName(\n          'modali-button-destructive'\n        )[0].className += ' display_none';\n    } catch (NotYetLoadedException) {\n      // console.log(NotYetLoadedException);\n    }\n  }, [])\n\n  return (\n    <div style={{ height: '0px' }}>\n      <button\n        className=\"hidden_button\"\n        id={props.modalID}\n        onClick={toggleCompleteModal}\n      >\n        toggle modal\n      </button>\n      <Modali.Modal {...completeModal} />\n    </div>\n  );\n}\n\nModal.propTypes = {\n  socket: PropTypes.object,\n  title: PropTypes.string,\n  message: PropTypes.any,\n  buttonCancel: PropTypes.string,\n  buttonConfirm: PropTypes.string,\n  toast: PropTypes.string,\n  confirmFunc: PropTypes.func,\n  modalID: PropTypes.string,\n  onLoadFunc: PropTypes.func,\n  buttonConfirmId: PropTypes.string\n};\n","import React, { useState, useEffect } from 'react';\nimport qs from '../utils/qs';\nimport PropTypes from 'prop-types';\nimport ProgressBar from './ProgressBar';\n\nexport default function Status(props) {\n  const [remainingWords, setRemainingWords] = useState(Infinity)\n\n  let intervalID = undefined\n\n  let i = 0; \n  useEffect(() => {\n    // console.log('status page loaded');\n    clearInterval(intervalID);\n    props.socket.on('server: response for start time', startTime => {\n      try {\n        // alert('setting starttime');\n        startTime = new Date(startTime);\n        const startTimeTotalSecs = getSeconds(startTime);\n        const nowSecs = getSeconds(new Date());\n        let diffSecs = nowSecs - startTimeTotalSecs;\n        // let expectedTime = diffSecs / (props.recordedProgress / props.data_length - 1)\n        // console.log(diffSecs);\n        const hours = Math.floor(diffSecs / 3600)\n        diffSecs -= hours * 3600;\n        const mins = Math.floor(diffSecs / 60);\n        diffSecs -= mins * 60;\n        const secs = diffSecs\n        const totalRecordingTime = [hours, mins, secs];\n        displayTime(totalRecordingTime);\n        intervalID = setInterval(() => tick(totalRecordingTime), 1000);\n      } catch (NotYetLoadedException) {\n        console.error(NotYetLoadedException);\n      }\n    });\n    showTime();\n    setRemainingWords(0);\n    console.log(remainingWords);\n    // setRemainingWords(totalWords - wordsCompleted)\n  }, [])\n\n  const displayTime = time => {\n    try {\n      document.getElementById('total_time_elapsed').innerText =\n        'Total Recording Time—' +\n        ('0' + time[0]).slice(-2) +\n        ':' +\n        ('0' + time[1]).slice(-2) +\n        ':' +\n        ('0' + time[2]).slice(-2);\n    } \n    catch(NotYetLoadedException) {\n      //\n    }\n  }\n\n  let time = undefined\n  const tick = initTime => {\n    if (!time) {\n      time = initTime;\n    } \n    // console.log('ticking')\n    let hour = time[0];\n    let min = time[1];\n    let sec = time[2];\n\n    if (sec < 60) {\n      sec += 1;\n    }\n    if (sec === 60) {\n      min += 1;\n      sec = 0;\n    }\n    if (min === 60) {\n      hour += 1;\n      min = 0;\n    }\n    time = [hour, min, sec];\n    // console.log(time);\n    try {\n      displayTime(time);\n    } catch (SomeError) {\n      console.error(SomeError);\n    }\n  };\n\n  const getSeconds = date => \n    date.getHours() * 60 * 60 +\n    date.getMinutes() * 60 +\n    date.getSeconds();\n\n  const helper_showTime = () => {\n    // console.log('asking for start time now');\n    props.socket.emit('client: ask for start time');\n  };\n\n  const showTime = () => {\n    try {\n      document.getElementById('showTimeBtn').click();\n      document.getElementById('showTimeBtn').disabled = true;\n    } catch (NotYetLoadedException) {\n      //\n    }\n  };\n\n\n\n  return (\n    <div>\n      <ProgressBar\n        curr={props.recordedProgress}\n        total={props.data_length - 1}\n        align={'left'}\n        strokeWidth={3}\n      />\n      <pre id='total_time_elapsed'>00:00:00</pre>\n      <pre id=\"total_words\"> / {props.totalWords}</pre>\n      <pre id='connection_status'></pre>\n      <pre id='num_files_saved'></pre>\n      {i++}\n      <pre\n        hidden={\n          props.recordGreenLight ||\n          props.helper_checkIfMobileView() ||\n          !qs('name')\n        }\n        className='warning_message'\n      >\n        Please Click Reset!\n      </pre>\n      <button\n        onClick={helper_showTime}\n        id='showTimeBtn'\n        className='hidden_button'\n      ></button>\n    </div>\n  );\n}\n\nStatus.propTypes = {\n  recordedProgress: PropTypes.number.isRequired,\n  data_length: PropTypes.number.isRequired,\n  recordGreenLight: PropTypes.bool.isRequired,\n  helper_checkIfMobileView: PropTypes.func.isRequired,\n  socket: PropTypes.object.isRequired,\n  totalWords: PropTypes.number.isRequired\n\n};","/**\n * **Based on: http://www.cssscript.com/demo/pure-css-css3-smooth-toggle-switch/**\n */\n\nimport React, { useEffect }from 'react'\nimport './toggle.scss'\nimport PropTypes from 'prop-types';\n\n/**\n * \n * @param {*} props \n */\nexport default function Toggle(props) {\n  useEffect(() => {\n    const toggle = document.getElementById(props.id);\n    try {\n      toggle.addEventListener('change', () => {\n        props.onChangeFunc(toggle.checked);\n      });\n      // document.getElementsByClassName('switch-wrapper')[0].addEventListener('mouseover', () => {\n      //   document.getElementsByClassName('inset-toggle')[0].classList.add('switch-hover');\n      //   console.log('hovered over')\n      // });\n      // document.getElementsByClassName('switch-wrapper')[0].addEventListener('mouseout', () => {\n      //   document.getElementsByClassName('inset-toggle')[0].classList.remove('switch-hover');\n      //   console.log('hovered out')\n      // })\n    } catch (NotYetLoadedException) {\n      //\n    }\n  }, [])\n  return (\n    <div className=\"switch-wrapper\">\n      <div className=\"switch\">\n      <div className=\"invisible_pushdown\"></div>\n        <input type=\"checkbox\" name=\"toggle\" id={props.id}  checked={props.checked} onChange={props.updateDebugMode}/>\n        <label htmlFor=\"toggle\" className=\"inset-toggle\"><i>🕷</i></label>\n      </div>  \n    </div>\n  )\n}\n\nToggle.propTypes = {\n  id: PropTypes.string.isRequired,\n  onChangeFunc: PropTypes.func.isRequired,\n  checked: PropTypes.bool.isRequired,\n  updateDebugMode: PropTypes.func.isRequired\n}","import React from 'react'\nimport './Checkmark.scss'\n\n/**\n * **Based on: https://codepen.io/ashleygalante/pen/nwoKh**\n */\nexport default function Checkmark() {\n  return (\n    <div className=\"checkmark\">\n      <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 161.2 161.2\" enableBackground=\"new 0 0 161.2 161.2\" xmlSpace=\"preserve\">\n        <path className=\"path\" fill=\"none\" stroke=\"#FFBA49\" strokeMiterlimit=\"10\" d=\"M425.9,52.1L425.9,52.1c-2.2-2.6-6-2.6-8.3-0.1l-42.7,46.2l-14.3-16.4\n          c-2.3-2.7-6.2-2.7-8.6-0.1c-1.9,2.1-2,5.6-0.1,7.7l17.6,20.3c0.2,0.3,0.4,0.6,0.6,0.9c1.8,2,4.4,2.5,6.6,1.4c0.7-0.3,1.4-0.8,2-1.5\n          c0.3-0.3,0.5-0.6,0.7-0.9l46.3-50.1C427.7,57.5,427.7,54.2,425.9,52.1z\"/>\n        <circle className=\"path\" fill=\"none\" stroke=\"#FFBA49\" strokeWidth=\"4\" strokeMiterlimit=\"10\" cx=\"80.6\" cy=\"80.6\" r=\"62.1\"/>\n        <polyline className=\"path\" fill=\"none\" stroke=\"#FFBA49\" strokeWidth=\"6\" strokeLinecap=\"round\" strokeMiterlimit=\"10\" points=\"113,52.8 \n          74.1,108.4 48.2,86.4 \"/>\n        <circle className=\"spin\" fill=\"none\" stroke=\"#FFBA49\" strokeWidth=\"4\" strokeMiterlimit=\"10\" strokeDasharray=\"12.2175,12.2175\" cx=\"80.6\" cy=\"80.6\" r=\"73.9\"/>\n      </svg>\n      <p id=\"complete_message\">🔥 恭喜您完成 🔥</p>\n    </div>\n  )\n}\n","import React from 'react'\nimport './Fireworks.scss'\n\nexport default function Fireworks() {\n  return (\n    <div className=\"pyro\">\n      <div className=\"before\"></div>\n      <div className=\"after\"></div>\n      </div>\n  )\n}\n","import React from 'react'\nimport Checkmark from './Checkmark/Checkmark'\nimport Fireworks from './Fireworks/Fireworks'\nimport './CompleteAnimation.scss'\n\nexport default function CompleteAnimation() {\n  return (\n    <div className=\"CompleteAnimationBG\">\n      <Fireworks />\n      <Checkmark />\n    </div>\n  )\n}","/* eslint-disable no-console */\nimport React from 'react';\nimport update from 'react-addons-update'\nimport qs from '../utils/qs'\nimport cogoToast from 'cogo-toast';\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport io from 'socket.io-client';\n\n// scss\nimport './App.scss';\n\n// components\nimport CameraList from '../components/CameraList/CameraList';\nimport Tester from '../components/Tester/Tester';\nimport DataCollection from '../components/Table/DataCollection';\nimport Modal from '../components/Modal'\nimport Status from '../components/Status'\nimport Toggle from '../components/Toggle/Toggle'\nimport CompleteAnimation from '../components/CompleteAnimation/CompleteAnimation'\n\n// data\nimport sentences from '../assets/data/sentences.txt';\n// import sentences from '../assets/data/sentences-english-test.txt';\n\n// util\nimport ip_util from '../utils/ip'\n\n// chevron\nimport up_chevron from '../assets/svg/up-chevron.svg'\nimport down_chevron from '../assets/svg/down-chevron.svg'\n\n\nclass App extends React.Component {\n  per_page = 8;\n  curr_index = qs('sentence_index');\n  ip_address = 'http://192.168.0.103:5000'\n  /**\n   * Constructor for main react App Component\n   * @param {object} props \n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      requiredNumCams: 1,\n      curr_sentence: '',\n      curr_sentence_index: this.curr_index ? Number(this.curr_index) : 0,\n      data: [],\n      per_page: this.per_page,\n      curr_page: this.curr_index ? Math.floor(Number(this.curr_index) / this.per_page) + 1 : 1,\n      computerStatus: {},\n      recordGreenLight: false,\n      computerID: -1,\n      numFilesSavedTotal: 0,\n      numFilesSavedInd: 0,\n      connectedOrderMap: {},\n      recordedProgress: 0,\n      addCamState: false,\n      totalTime: [],\n      startTime: undefined,\n      totalWords: 0,\n      remainingWords: 0,\n      debugMode: true,\n      socket: io(this.ip_address),\n      ip: this.ip_address,\n      connectedToServer: false,\n      detectedNumCams: 0\n    };\n  }\n\n  /**\n   * **ReactJS Framework Method**  \n   */\n  render() {\n    return (\n      <Router>\n        <Route path='/' exact component={this.main_userView} />\n        <Route path='/admin' exact component={this.main_adminView} />\n        <Route path='/playground' exact component={this.main_playground} />\n        {this.comp_modals()}\n        {this.comp_completeAnimation()}\n      </Router>\n    );\n  }\n\n  showNoCamsRef = undefined;\n  hideServerOfflineRef = undefined;\n \n  /**\n   * **ReactJS Framework Method**\n   */\n  componentDidMount() {\n    // console.log(ip_util.getIP());\n    // console.log(ip_util);\n    try {\n      this.helper_emitInitialSocketMessages();\n      this.readTextFile(sentences);\n      this.initSocketListeners();\n      document.getElementById('debug_mode').checked = this.state.requiredNumCams === 1\n    \n    // this.pingServer();\n      window.addEventListener('keydown', this.handler_keydown);\n      window.addEventListener('keyup', this.handler_keyup);\n      this.showNoCamsRef = this.helper_showNoCamsConnected();\n      setTimeout(() => {\n        this.hideServerOfflineRef = this.helper_showServerNotOnline();\n      }, 1000)\n\n      // this.helper_addHoverEventListeners()\n      \n    } catch (NotYetLoadedException) {\n      //\n    }\n  }\n\n  helper_addHoverEventListeners = () => {\n    const debugHoverArea = document.getElementById('debug_hover_area');\n    const bottomHoverArea = document.getElementById('bottom_hover_area');\n    debugHoverArea.addEventListener('mouseout', this.handler_hoverMouseOutDebug);\n    debugHoverArea.addEventListener('mouseover', this.handler_hoverMouseOverDebug);\n    bottomHoverArea.addEventListener('mouseout', this.handler_hoverMouseOutBottom);\n    bottomHoverArea.addEventListener('mouseover', this.handler_hoverMouseOverBottom);\n  }\n  helper_removeHoverEventListeners = () => {\n    const debugHoverArea = document.getElementById('debug_hover_area');\n    const bottomHoverArea = document.getElementById('bottom_hover_area');\n    debugHoverArea.removeEventListener('mouseout', this.handler_hoverMouseOutDebug);\n    debugHoverArea.removeEventListener('mouseover', this.handler_hoverMouseOverDebug);\n    bottomHoverArea.removeEventListener('mouseout', this.handler_hoverMouseOutBottom);\n    bottomHoverArea.removeEventListener('mouseover', this.handler_hoverMouseOverBottom);\n    this.handler_hoverMouseOverBottom();\n  }\n\n  handler_hoverMouseOutDebug = () => {\n    try {\n      document.getElementsByClassName('debug-group')[0].className += ' ' + 'hideDebug'\n    } catch (NotYetLoadedException) {\n      console.error(NotYetLoadedException)\n    }\n  }\n\n  handler_hoverMouseOverDebug = () => {\n    try {\n      document.getElementsByClassName('debug-group')[0].classList.remove('hideDebug');\n    } catch (NotYetLoadedException) {\n      console.error(NotYetLoadedException)\n    }\n  }\n\n  handler_hoverMouseOutBottom = () => {\n    try {\n      document.getElementsByClassName('contents')[0].className += ' ' + 'hideBottom'\n    } catch (NotYetLoadedException) {\n      console.error(NotYetLoadedException)\n    } \n  }\n\n  handler_hoverMouseOverBottom = () => {\n    try {\n      document.getElementsByClassName('contents')[0].classList.remove('hideBottom');\n    } catch (NotYetLoadedException) {\n      console.error(NotYetLoadedException)\n    }\n  }\n\n  helper_toggleHideDebug = () => {\n    console.log('toggling')\n    try {\n      if (document.getElementsByClassName('debug-group')[0].className.includes('hideDebug')) {\n        this.handler_hoverMouseOverDebug();\n      } else {\n        this.handler_hoverMouseOutDebug();\n      }\n    } catch (NotYetLoadedException) {\n      // \n    }\n  }\n  \n  helper_toggleHideBottom = () => {\n    console.log('toggling')\n    try {\n      if (document.getElementsByClassName('contents')[0].className.includes('hideBottom')) {\n        this.handler_hoverMouseOverBottom();\n      } else {\n        this.handler_hoverMouseOutBottom();\n      }\n    } catch (NotYetLoadedException) {\n      // \n    }\n  }\n\n  /**\n   * **ReactJS Framework Method** \n   */\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handler_keydown);\n  }\n\n  /**\n   * **Component: User Page** \n   * Renders components for desktop view\n   */\n  main_userView = () => {\n    return (\n      <div className='container'>\n        <span id=\"debug_hover_area\" > \n          {this.comp_debug()} \n        </span> \n        {this.comp_tester()}\n        <span id=\"bottom_hover_area\">\n          <div className='contents'>\n            <div style={{width: '100%', height: '100%'}} onClick={this.helper_toggleHideBottom}>\n              <img className=\"chevron\" src={down_chevron}></img>\n            </div>\n            <div className=\"panel_container\">\n              <div className='left_panel'>{this.comp_dataCollection()}</div>\n              <div className='right_panel'>\n                <h3>Cameras</h3>\n                <div className='cameras_container' >\n                  {this.comp_cameraList()}\n                </div>\n              </div>\n            </div>\n          </div>\n        </span>\n\n      </div>\n    );\n  };\n\n  /**\n   * **Component: Admin Page**\n   * Renders components for mobile view\n   */\n  main_adminView = () => {\n    return <div style={{textAlign: 'center'}}>{this.comp_debug()}</div>;\n  };\n\n  /** \n   * **Component: PlaygroundPage**\n   * Renders components for experimental purposes\n   */\n  main_playground = () => {\n    return (\n      <Toggle />\n    )\n  }\n\n  comp_debugHover = () => {\n    \n  }\n\n  /**\n   * **Component: Animation for Study Completion**\n   */\n  comp_completeAnimation = () => {\n    if (this.state.recordedProgress + 1 === this.state.data.length) {\n      try {\n        document.getElementById('testerNextBtn').disabled = true;\n      } catch(NotYetLoadedException) {\n        //\n      }\n      return (\n        <CompleteAnimation />\n      )\n    }\n  }\n\n  // * COMPONENT * //\n  comp_dataCollection = () => {\n    return (\n      <DataCollection\n        data={this.state.data}\n        updateName={this.updateName}\n        curr_sentence={this.state.curr_sentence}\n        socket={this.state.socket}\n        curr_sentence_index={this.state.curr_sentence_index}\n        curr_page={this.state.curr_page}\n        updatePage={this.updatePage}\n      />\n    );\n  };\n\n  // * COMPONENT * //\n  comp_tester = () => {\n    return (\n      <Tester\n        updateSentence={this.updateSentence}\n        data={this.state.data}\n        curr_sentence_index={this.state.curr_sentence_index}\n        data_length={this.state.data.length}\n        first_sentence={this.state.data[this.state.curr_sentence_index]}\n        curr_sentence={this.state.curr_sentence}\n        socket={this.state.socket}\n        recordGreenLight={\n          this.state.recordGreenLight &&\n          this.state.numFilesSavedTotal % this.state.requiredNumCams === 0\n        }\n        debugMode={this.state.debugMode}\n        numFilesSaved={this.state.numFilesSavedTotal}\n        requiredNumCams={this.state.requiredNumCams}\n        updateGreenLightStatus={this.updateGreenLightStatus}\n        recordedProgress={this.state.recordedProgress}\n        updateRecordProgress={this.updateRecordProgress}\n        totalTime={this.state.totalTime}\n        updateTotalTime={this.updateTotalTime}\n        showFileSavingLoader={this.disp_showFileSavingLoader}\n        connectedToServer={this.state.connectedToServer}\n        detectedNumCams={this.state.detectedNumCams}\n      />\n    );\n  };\n\n  // * COMPONENT * //\n  comp_cameraList = () => {\n    return (\n      <CameraList\n        socket={this.state.socket}\n        computerID={this.state.computerID}\n        computerStatus={this.state.computerStatus}\n        updateConnectionStatus={this.updateConnectionStatus}\n        addCamState={this.state.addCamState}\n        toggleCamState={this.helper_toggleCamState}\n        updateDetectedNumCams={this.updateDetectedNumCams}\n        addCam={this.admin_resetCams}\n      />\n    );\n  };\n\n  // * COMPONENT * //\n  comp_status = () => {\n    return (\n      <Status\n        totalWords={this.state.totalWords}\n        data_length={this.state.data.length}\n        recordedProgress={this.state.recordedProgress}\n        helper_checkIfMobileView={this.helper_checkIfMobileView}\n        recordGreenLight={this.state.recordGreenLight}\n        socket={this.state.socket}\n      />\n    );\n  };\n\n  // * COMPONENT * //\n  comp_modals = () => {\n    return (\n      <div>\n        <Modal\n          modalID={'resetProgressModal'}\n          socket={this.state.socket}\n          title={'Are you sure?'}\n          message={'Resetting progress will be permanent.'}\n          buttonCancel={'Cancel'}\n          buttonConfirm={'Reset Progress'}\n          buttonConfirmId={'resetProgressBtn'}\n          toast={'Progress reset'}\n          confirmFunc={this.admin_resetProgress}\n        />\n        <Modal\n          modalID={'overallStatus'}\n          socket={this.state.socket}\n          title={'Status'}\n          onLoadFunc={this.getStatus}\n          message={this.comp_status()}\n          buttonConfirm={'Hide'}\n        />\n      </div>\n    );\n  };\n\n  updateDebugMode = () => {\n    this.setState({debugMode: !this.state.debugMode});\n  }\n\n  // * COMPONENT * //\n  comp_debug = () => {\n    return (\n      <div className=\"debug-group\">\n        <span className=\"vert-bar\">|</span>\n        <label className=\"debug_label\">Admin: </label>\n\n        <button\n          onClick={() => {\n            this.helper_toggleModal('overallStatus');\n            this.getStatus();\n          }}\n          className='debug_button'\n        >\n          Status\n        </button>\n        <button\n          id='resetCamsBtn'\n          className='debug_button'\n          onClick={this.admin_resetCams}\n        >\n          Add Webcam\n        </button>\n        <button\n          className='debug_button'\n          onClick={() => {\n            this.helper_toggleModal('resetProgressModal');\n          }}\n        >\n          Reset Progress\n        </button>\n        <span className=\"vert-bar\">|</span>\n        \n        <div className=\"debug_inline_group\">\n          <label className=\"debug_label\">Debug: </label>\n          <Toggle id='debug_mode' onChangeFunc={this.handler_debugToggle} checked={this.state.debugMode} updateDebugMode={this.updateDebugMode}/>\n        </div>\n        <span className=\"vert-bar\">|</span>\n\n        <br/>\n        <span className=\"vert-bar\">|</span>\n        <div className=\"debug_inline_group\">\n          <label htmlFor=\"\" className=\"debug_label\">Cams: </label>\n          <input id=\"numCamsInput\" type=\"text\" className=\"debug_text_input debug_sm_input warning_message\" value={this.state.detectedNumCams} readOnly/>\n        </div>\n        \n        <div className=\"debug_inline_group\">\n          <span className=\"vert-bar\">|</span>\n          <label htmlFor=\"\" className=\"debug_label\">Server: </label>\n          <span className=\"server_status\"></span>\n          <input id=\"inputServerIP\" type=\"text\" className=\"debug_text_input warning_message\" value={this.state.ip} onChange={this.handler_IPOnChange}/>\n          < button className = 'debug_button'\n          onClick = {\n            this.handler_useThisCompAsServer\n          } > 📡 < /button>\n        </div>\n\n\n\n        <span className=\"vert-bar\">|</span>\n\n        \n        <div style={{width: '100%', height: '100%'}} onClick={this.helper_toggleHideDebug}>\n          <img className=\"chevron\" src={up_chevron}></img>\n        </div>\n        \n        {/* <button className='debug_button' onClick={this.admin_refreshAll}>\n          Refresh All\n        </button> */}\n\n        <button\n          onClick={this.disp_showFileSavedMessage}\n          id='showSavedFilesBtn'\n          className='hidden_button'\n        ></button>\n\n        {/* <pre hidden={this.state.numCams === 8}>\n          debug mode, remember to change num cams back to 8\n        </pre> */}\n      </div>\n    );\n  };\n\n  // * UTILITY * //\n  readTextFile(file) {\n    return fetch(file)\n      .then(response => response.text())\n      .then(text => {\n        this.setState({ data: text.split('\\n') }, () => {\n          let curr_sentence = qs('sentence_index')\n            ? this.state.data[Number(qs('sentence_index'))]\n            : this.state.data[0];\n          this.setState({ curr_sentence }, () => {\n            // console.log(this.state.curr_sentence)\n          });\n          this.setState({\n            totalWords: this.state.data.reduce((sum, sentence) => sum + sentence.length, 0)\n          })\n        });\n      });\n  }\n\n  /**\n   * * UPDATE * \n   * \n   */\n  updateFilesSaved = numFiles => {\n    const successMessage =\n      numFiles % this.state.requiredNumCams === 0\n        ? ' (successful)'\n        : ' (not all cams saved!!)';\n    this.setState({\n      numFilesSavedTotal: numFiles\n    });\n    try {\n      document.getElementById('num_files_saved').innerHTML =\n        'Total Files Saved: ' + numFiles + successMessage;\n    } catch (NotYetLoadedException) {\n      // console.error(NotYetLoadedException);\n    }\n  };\n\n  handler_useThisCompAsServer = () => {    \n    ip_util.clientGetIP(ip => {\n      console.log(ip);\n      if (ip.split('.').length === 4) {\n        ip = 'http://' + ip + ':5000'\n        cogoToast.loading(ip, {\n          position: 'top-right', \n          hideAfter: 3,\n          onClick: hide => {\n            hide()\n          }\n        });\n        this.helper_setServerIP(ip);\n        // if (!this.hideServerOfflineRef) {\n        //   this.hideServerOfflineRef = this.helper_showServerNotOnline();\n        // } else {\n        //   this.hideServerOfflineRef();\n        // }\n      }\n    });\n    // const [ip_v6, ip_v4] = [temp[0], temp[1]]\n    // console.log(ip_v4);\n  }\n\n  handler_IPOnChange = e => {\n    this.setState({ip: e.target.value})\n  }\n\n  handler_debugToggle = debugMode => {\n    console.log('toggling debug mode')\n    this.setState({debugMode}, () => {\n      if (debugMode) {\n        this.setState({requiredNumCams: 1});\n        this.helper_removeHoverEventListeners()\n      } else {\n        this.setState({requiredNumCams: 8});\n        this.helper_addHoverEventListeners()\n        this.handler_hoverMouseOutBottom();\n      }\n    });\n\n\n  }\n\n  handler_fileSaveSuccess = numFiles => {\n    this.updateFilesSaved(numFiles);\n    this.setState({\n        numFilesSavedInd: this.state.numFilesSavedInd + 1\n      },\n      () => {\n        console.log(\n          'this occured: ' + this.state.numFilesSavedInd + ' times.'\n        );\n        try {\n          document.getElementById('testerNextBtn').disabled = true;\n        } catch (NotYetLoadedException) {\n          //\n        }\n        if (this.state.numFilesSavedInd === this.state.requiredNumCams) {\n          console.log('correct number of files saved');\n          try {\n            document.getElementById('showSavedFilesBtn').click();\n            document.getElementById('showSavedFilesBtn').disabled = true;\n            this.setState({\n                numFilesSavedInd: 0\n              },\n              () => {\n                cogoToast.success(\n                  this.style_makeEmojiToastLayout(\n                    ['视频已成功保存', '可继续录'],\n                    '🔥'\n                  ), {\n                    hideAfter: 1,\n                    onClick: hide => {\n                      hide()\n                    }\n                  }\n                );\n              }\n            );\n\n            this.updateGreenLightStatus(true);\n          } catch (Exception) {\n            console.error(Exception);\n          }\n          try {\n            if (this.helper_checkIfMobileView()) {\n              // console.log('here here??');\n              cogoToast.info(\n                'Completed @ Sentence [' + this.state.recordedProgress + ']', {\n                  hideAfter: 0.75,\n                  onClick: hide => {\n                    hide()\n                  }\n                }\n              );\n            }\n          } catch (NotYetLoadedException) {\n            console.error(NotYetLoadedException);\n          }\n        }\n      }\n    );\n  }\n\n  updateDetectedNumCams = detectedNumCams => {\n    this.setState({ detectedNumCams });\n    this.updateGreenLightStatus(true);\n    this.showNoCamsRef();\n    try {\n      document.getElementsByClassName('debug_sm_input')[0].className += (this.state.detectedNumCams > 0) ? \" serverPlaceholderConnected\" : \"\"\n      document.getElementById('numCamsInput').classList.remove(\"warning_message\");\n      \n    } catch (NotYetLoadedException) {\n      //\n    }\n  }\n\n  /** \n   * * UPDATE *\n   * Updates the state computerID with param id\n   * @param {string} id \n  */\n  updateCompID = id => {\n    const status = {};\n    this.setState({ computerID: id });\n    status[this.state.computerID] = [];\n    this.setState({ computerStatus: status }, () => {\n      // console.log(\"init computer status\", this.state.computerStatus);\n    });\n  };\n\n  /**\n   * * STYLE *\n   * Takes a string and finds a substring and returns a stylized version of it,\n   * specifically to add the 🖥 icon in front of the ID.\n   * @param {string} str The full string\n   * @param {string} find The particular substring to find\n   * @returns {string} The stylized string\n   */\n  style_addThisCpuIcon = (str, find) => {\n    var re = new RegExp(find, 'g');\n    return str.replace(re, '🖥: ' + find);\n  };\n\n  style_makeEmojiToastLayout = (msg, emoji) => {\n    return (\n      <div className='cogo-toast'>\n        <div className='cogo-toast-emoji-left'> {emoji}</div>\n        <div>\n          {msg[0]}\n          <br />\n          {msg[1]}\n        </div>\n        <div className='cogo-toast-emoji-right'> {emoji}</div>\n      </div>\n    );\n  };\n\n  ref_hideLoader = undefined;\n  disp_showFileSavingLoader = () => {\n    this.ref_hideLoader = cogoToast.loading(\n      this.style_makeEmojiToastLayout(['视频正在保存', '请耐心等待'], '⌛️'), {\n        hideAfter: 0,\n        onClick: hide => {\n          hide()\n        }\n      }\n    );\n    // setTimeout(hideLoader, 2000);\n    // hideLoader();\n    // this.setState({ hideLoader }, () => {\n    //   console.log(hideLoader);\n    // });\n  };\n\n  disp_showFileSavedMessage = () => {\n    try {\n      this.ref_hideLoader();\n    } catch (NotOnPageError) {\n      //\n    }\n  };\n\n  /**\n   * **Socket Listeners**\n   * Adds socket listeners to the page to respond to messages sent\n   * from server\n   */\n  initSocketListeners = () => {\n    this.state.socket.on('server: online', () => {\n      cogoToast.success('Server is online.', {\n        position: 'top-right', \n        hideAfter: 0, \n        onClick: hide => {\n          hide();\n        }\n      });\n      if (this.hideServerOfflineRef) this.hideServerOfflineRef();\n      document.getElementsByClassName('server_status')[0].classList.add('server_online');\n      document.getElementById('inputServerIP').classList.add('serverPlaceholderConnected');\n      document.getElementById('inputServerIP').classList.remove('warning_message');\n  \n    });\n    if (!this.hideServerOfflineRef) {\n      this.hideServerOfflineRef = this.helper_showServerNotOnline();\n    } else {\n      this.hideServerOfflineRef();\n    }\n\n    this.state.socket.on('server: disconnected', () => {\n      this.setState({ connectedToServer: false}, () => {\n        document.getElementsByClassName('server_status')[0].classList.remove('server_online');\n        document.getElementById('inputServerIP').classList.remove('serverPlaceholderConnected')\n      });\n    });\n\n    this.state.socket.on('server: connected', computerID => {\n      console.log('detected server connected')\n      this.setState({ connectedToServer: true, computerID}, () => {\n        document.getElementById('inputServerIP').classList.add('serverPlaceholderConnected')\n      });\n    });\n    \n    this.state.socket.on('server: connected sync id', id => {\n      if (this.updateCompID) this.updateCompID(id);\n      this.updateCompID = null;\n    });\n\n    this.state.socket.on('server: reset cams', () => {\n      this.updateGreenLightStatus(true);\n    });\n\n    this.state.socket.on('server: response for connection status', status => {\n      try {\n        document.getElementById(\n          'connection_status'\n        ).innerHTML = this.style_addThisCpuIcon(\n          JSON.stringify(status, null, 2),\n          this.state.computerID\n        );\n      } catch (NotOnPageError) {\n        //\n      }\n    });\n\n    this.state.socket.on('server: response for progress', progress => {\n      this.setState({ recordedProgress: progress ? progress : 0 });\n    });\n\n    this.state.socket.on('server: response for numFilesSaved', numFiles => {\n      this.updateFilesSaved(numFiles);\n    });\n\n    this.state.socket.on('server: save files successful', numFiles => {\n      this.handler_fileSaveSuccess(numFiles);\n    });\n\n    this.state.socket.on('server: computer connected order', connectedOrder => {\n      this.setState({\n        connectedOrderMap: update(this.state.connectedOrderMap, {\n          $merge: connectedOrder\n        })\n      });\n    });\n\n    const refreshRates = [0, 666, 1332];\n    this.state.socket.on('server: refresh all', () => {\n      const conectedOrderNum = this.state.connectedOrderMap[\n        this.state.computerID\n      ];\n      const indexRefresh = conectedOrderNum % 3;\n      const time = refreshRates[indexRefresh];\n      setTimeout(() => {\n        window.location.reload(false);\n      }, time);\n    });\n  };\n\n  async pingServer() {\n    try {\n      const serverID = this.state.socket.io.opts.hostname;\n      const response = await fetch(serverID, { mode: 'no-cors' });\n      if (!response.ok) {\n        console.error('no response from server');\n      } else {\n        console.log('connection successful');\n      }\n    } catch (ServerPingFailedException) {\n      console.error(ServerPingFailedException);\n    }\n  }\n\n  /**\n   * **Update: Sentence** \n   * Sent as a prop to components to update app-level state of \n   * curr_sentence_index, and updates server with new index. It also updates \n   * url query without refreshing to reflect current index.\n   * @param {string} curr_sentence\n   */\n  updateSentence = curr_sentence => {\n    if (curr_sentence === '$next') {\n      this.setState({curr_sentence_index: this.state.curr_sentence_index + 1},\n        () => {\n          this.updateSentence(\n            this.state.data[this.state.curr_sentence_index]\n          );\n          this.state.socket.emit('client: update sentence_index', {\n            name: qs('name'),\n            curr_sentence_index: this.state.curr_sentence_index\n          });\n        }\n      );\n    } else if (curr_sentence === '$prev') {\n      this.setState(\n        {\n          curr_sentence_index: Math.max(this.state.curr_sentence_index - 1, 0)\n        },\n        () => {\n          this.updateSentence(this.state.data[this.state.curr_sentence_index]);\n          this.state.socket.emit('client: update sentence_index', {\n            name: qs('name'),\n            curr_sentence_index: this.state.curr_sentence_index\n          });\n        }\n      );\n    } else {\n      window.history.pushState(\n        null,\n        null,\n        '?name=' +\n          qs('name') +\n          '&sentence_index=' +\n          this.state.curr_sentence_index\n      );\n      // console.log(curr_sentence);\n      this.setState({\n        curr_sentence,\n        curr_page:\n          Math.floor(\n            Number(this.state.curr_sentence_index) / this.state.per_page\n          ) + 1\n      });\n    }\n  };\n\n  updatePage = new_page => {\n    if (new_page === 0) {\n      // do nothing\n    }\n    console.log('update page', new_page);\n    this.setState({\n      curr_page: new_page >= 1 ? new_page : 1\n    });\n  };\n\n  updateRecordProgress = curr_sentence_index => {\n    // { <sentence_index> : <bool: recorded/not> }\n    this.setState(\n      {\n        recordedProgress: curr_sentence_index\n      },\n      () => {\n        this.state.socket.emit(\n          'client: update recording progress',\n          curr_sentence_index\n        );\n      }\n    );\n  };\n\n  updateConnectionStatus = recordingStatus => {\n    if (this.state.computerStatus[this.state.computerID]) {\n      const status = {};\n      status[this.state.computerID] = recordingStatus;\n      this.setState({ computerStatus: status }, () => {\n      });\n      this.state.socket.emit('client: update recording status', status);\n    }\n    this.getStatus();\n  };\n\n  updateGreenLightStatus = bool => {\n    this.setState({ recordGreenLight: bool });\n  };\n\n  updateTotalTime = time => {\n    this.setState({ totalTime: time });\n  };\n\n  getStatus = () => {\n    this.state.socket.emit('client: ping for connection status');\n    this.state.socket.emit('client: ping for numFilesSaved');\n    this.state.socket.emit('client: ping for progress');\n  };\n\n  admin_resetCams = () => {\n    // cogoToast.info('Adding Cam', {hideAfter: 1})\n    // this.state.socket.emit('client: stop cams');\n    // this.updateGreenLightStatus(true);\n    this.state.socket.emit('client: reset cams');\n    try {\n      document.getElementById('addCamBtn').click();\n    } catch (NotYetLoadedException) {\n      //\n    }\n    this.state.socket.emit('client: dummy vid, do not save');\n    // cogoToast.info('Cams are reset', { hideAfter: 0.3 });\n    // setTimeout(() => document.getElementById('resetCamsBtn').classList.remove('btn-active'), 1000);\n\n  };\n\n  admin_refreshAll = () => {\n    this.state.socket.emit('client: refresh all');\n  };\n\n  admin_resetProgress = () => {\n    this.state.socket.emit('client: update recording progress', 0);\n    this.state.socket.emit('client: delete total time');\n    this.state.socket.emit('client: reset total files');\n    this.state.socket.emit('client: save total start time', new Date());\n    window.location = window.location.origin;\n    this.state.socket.emit('client: save total time', [0, 0, 0]);\n  };\n\n  helper_emitInitialSocketMessages = () => {\n    if (!this.helper_checkIfMobileView) {\n      this.state.socket.emit('client: update sentence_index', {\n        name: qs('name'),\n        curr_sentence_index: this.state.curr_sentence_index\n      });\n    } else {\n      this.state.socket.emit('client: ask for recording status');\n    }\n    this.state.socket.emit('client: check for progress');\n    this.state.socket.emit('client: ask for sync id');\n  }\n\n  helper_toggleModal = id => {\n    document.getElementById(id).click();\n  };\n\n  helper_checkIfMobileView = () => {\n    return window.location.href.includes('mobile');\n  };\n\n  helper_showNoCamsConnected = () => {\n    return cogoToast.warn(\"No Webcams\", {\n      hideAfter: 0,\n      position: 'top-left', \n      onClick: this.admin_resetCams\n    });\n  }\n\n  helper_showServerNotOnline = () => {\n    console.log('no server')\n    return cogoToast.warn(\"Server is offline\", {\n      hideAfter: 0,\n      position: 'top-right', \n      onClick: hide => {this.handler_useThisCompAsServer(); hide();}\n    });\n  }\n\n  helper_setServerIP = ip => {\n    this.state.socket.disconnect();\n    try {\n      document.getElementsByClassName('server_status')[0].classList.remove('server_online');\n      document.getElementById('inputServerIP').classList.remove('serverPlaceholderConnected');\n    } catch(NotYetLoadedException) {\n      //\n    }\n    this.setState({\n      socket: io(ip),\n      ip: ip\n    });\n    this.state.socket.emit('client: check server connection')\n    // if (hideLoadServer) {hideLoadServer()}\n    setTimeout(() => {\n      if (!document.getElementsByClassName('server_status')[0].className.includes('server_online')) {\n        this.hideServerOfflineRef = this.helper_showServerNotOnline();\n      }\n    }, 3000);\n    this.initSocketListeners();\n  }\n\n  helper_toggleCamState = () => {\n    this.setState({ addCamState: !this.state.addCamState });\n  };\n\n  handler_keyup() {\n    for (const btn of document.getElementsByClassName('debug_button')) {\n      btn.classList.remove('btn-active');\n    }\n  }\n\n  handler_keydown = (event) => {\n    let key = event.key;\n    const inputServerIP = document.getElementById('inputServerIP');\n\n    if ([' ', 'ArrowLeft', 'ArrowRight', 'Escape', 'Enter', 's'].includes(key)) {\n      try {\n        if (key === ' ') {\n          document.getElementById('testerRecordBtn').click();\n          event.preventDefault();\n        } else if (key === 'ArrowLeft') {\n          if (document.activeElement !== inputServerIP) {\n            document.getElementById('testerPrevBtn').click();\n            event.preventDefault();\n          }\n        } else if (key === 'ArrowRight') {\n          if (document.activeElement !== inputServerIP) {\n            document.getElementById('testerNextBtn').click();\n            event.preventDefault();\n          }\n        } else if (key === 'Escape') {\n          document.getElementById('resetCamsBtn').click();\n          event.preventDefault();\n        } else if (key === 'Enter') {\n          console.log('detected enter key');\n          if (document.getElementsByClassName('modali-button-destructive')[0]) {\n            document.getElementsByClassName('modali-button-destructive')[0].click();\n            this.admin_resetProgress();\n          }\n          if (document.activeElement === inputServerIP) {\n            this.helper_setServerIP(inputServerIP.value);\n            cogoToast.info('Updated IP: ' + inputServerIP.value, {\n              onClick: hide => {\n                hide()\n              }\n            })\n            event.preventDefault();\n          }\n        } else if (key === 's') {\n          if (document.activeElement !== document.getElementById('name')) this.helper_toggleModal('overallStatus');\n        }\n      } catch (NotYetLoadedException) {\n        // console.error(NotYetLoadedException);\n      }\n    }\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App.js';\n\nReactDOM.render(<App />, document.getElementById('root'));","module.exports = __webpack_public_path__ + \"static/media/collapse-chevron.126ea5d6.svg\";","module.exports = __webpack_public_path__ + \"static/media/expand-chevron.fd7409a7.svg\";","module.exports = __webpack_public_path__ + \"static/media/beg.565428a5.svg\";","module.exports = __webpack_public_path__ + \"static/media/end.b927e101.svg\";","module.exports = __webpack_public_path__ + \"static/media/sentences.16736696.txt\";","const os = require('os');\nconst ifaces = os.networkInterfaces();\n\nconst nodeGetIP = () => {\n  let address = undefined;\n  Object.keys(ifaces).forEach(function (ifname) {\n    ifaces[ifname].forEach(function (iface) {\n      if ('IPv4' !== iface.family || iface.internal !== false) {\n        // skip over internal (i.e. 127.0.0.1) and non-ipv4 addresses\n        return;\n      }\n      if (ifname === 'en0') {\n        address = iface.address;\n      }\n    });\n  });\n  console.log(address);\n  return address;\n}\n\nconst clientGetIP = onNewIP => { //  onNewIp - your listener function for new IPs\n  var myPeerConnection = window.RTCPeerConnection || window.mozRTCPeerConnection || window.webkitRTCPeerConnection; //compatibility for firefox and chrome\n  var pc = new myPeerConnection({\n      iceServers: []\n    }),\n    noop = function () {},\n    localIPs = {},\n    ipRegex = /([0-9]{1,3}(\\.[0-9]{1,3}){3}|[a-f0-9]{1,4}(:[a-f0-9]{1,4}){7})/g;\n\n  function ipIterate(ip) {\n    if (!localIPs[ip]) onNewIP(ip);\n    localIPs[ip] = true;\n  }\n  pc.createDataChannel(\"\"); //create a bogus data channel\n  pc.createOffer(function (sdp) {\n    sdp.sdp.split('\\n').forEach(function (line) {\n      if (line.indexOf('candidate') < 0) return;\n      line.match(ipRegex).forEach(ipIterate);\n    });\n    pc.setLocalDescription(sdp, noop, noop);\n  }, noop); // create offer and set local description\n  pc.onicecandidate = function (ice) { //listen for candidate events\n    if (!ice || !ice.candidate || !ice.candidate.candidate || !ice.candidate.candidate.match(ipRegex)) return;\n    ice.candidate.candidate.match(ipRegex).forEach(ipIterate);\n  };\n}\n\nmodule.exports = {\n  nodeGetIP,\n  clientGetIP\n}","module.exports = __webpack_public_path__ + \"static/media/up-chevron.fc2195aa.svg\";","module.exports = __webpack_public_path__ + \"static/media/down-chevron.61cf0702.svg\";"],"sourceRoot":""}