{"version":3,"sources":["utils/qs.js","components/Webcam/Webcam.js","components/CameraList/CameraList.js","components/NameField/NameField.js","components/Tester/InProcessScreen.js","components/Timer.js","components/ProgressBar.js","components/Tester/Tester.js","components/Table/TableHeader.js","components/Table/TableRow.js","components/Table/TableData.js","components/Table/PageNum.js","components/Table/PageInput.js","components/Table/TableFooter.js","components/Table/Table.js","components/Table/DataCollection.js","components/Modal.js","components/Status.js","components/Toggle/Toggle.js","components/CompleteAnimation/Checkmark/Checkmark.js","components/CompleteAnimation/Fireworks/Fireworks.js","components/CompleteAnimation/CompleteAnimation.js","app/App.js","index.js","assets/svg/collapse-chevron.svg","assets/svg/expand-chevron.svg","assets/svg/beg.svg","assets/svg/end.svg","assets/data/sentences.txt","utils/ip.js"],"names":["qs","id","parsedUrl","URL","window","location","href","searchParams","has","get","Webcam","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isRecording","recorder","videoSrc","videoEle","startTime","video","React","createRef","today","Date","getFullYear","getMonth","getDate","getTime","react_default","a","createElement","className","onClick","startRecording","controls","autoPlay","playsInline","muted","ref","props","videoRef","name","Component","CameraList","_useState","useState","_useState2","slicedToArray","availableCams","setAvailableCams","_useState3","_useState4","recordingStatus","setRecordingStatus","_useState5","_useState6","availableMics","setAvailableMics","_useState7","_useState8","pluggedInDevices","setPluggedInDevices","helper_extractRelevantCamInfo","device","camera_info","deviceId","label","groupId","initCams","navigator","mediaDevices","enumerateDevices","then","devices","videoDevices","micDevices","numCams","num","reduce","accumulator","kind","updateDetectedNumCams","helper_getNumCams","console","log","map","toLowerCase","includes","indexOf","push","helper_addToMicDevices","videodevices","devicePrior","filter","cam","mic_info","helper_addToVideoDevices","document","getElementById","click","disabled","catch","err","message","Array","prototype","diff","i","startFaceTimeCam","faceTimeDevice","defaultMic","cogoToast","success","hideAfter","addNewCamMic","resolve","undefined","Promise","checkIfMac","Exception","allDevices","detectedTwoDevices","idAoni","newPluggedInID","length","_getNewMicCam","newCam","newMic","error","getNewMicCam","_getNewMicCam2","newMicID","newCamDevice","temp","substring","initCamsDummy","stopAllCams","startAllCams","getUserMedia","audio","exact","frameRate","ideal","width","height","camera","RecordRTC","recorderType","MediaStreamRecorder","type","desiredSampRate","numberOfAudioChannels","disableLogs","getState","current","srcObject","NotYetLoadedException","triggerRecordStatusUpdate","dummy","stopRecording","blob","getBlob","socket","emit","sentence_index","camera_id","updateConnectionStatus","warn","resumeAllCams","_unused","resumeRecording","useEffect","addCamState","on","comp_camsList","components_Webcam_Webcam","key","debug","debugControls","renderCams","NameField","saveName","value","url_state","history","pushState","updateTesterContents","updateGreenLightStatus","detectEnter","e","which","placeholder","onKeyPress","autoFocus","InProcessScreen","recording","setRecordState","done_recording","setDoneRecording","reset_state","reset","nameSet","setName","updateSentence","data","getRecordState","curr_sentence_index","showFileSavingLoader","stopTimer","updateRecordProgress","record","startTimer","displaySentenceToBeRead","recordedYet","recordedProgress","disableNextButtonIfCurrNotRead","emoji","sentence","line1","line2","msg","makeEmojiLayout","recordedClassName","recordTimeEle","recordTimeMsg","innerText","style","transition","color","recordGreenLight","numFilesSaved","text","data_length","NameField_NameField_NameField","getContents","Timer","intervalID","setIntervalID","clearInterval","innerHTML","createInterval","timeSaved","time","t","SyntaxError","setInterval","hour","min","sec","slice","SomeError","updateTotalTime","ProgressBar","percent","curr","total","toFixed","alignmentStyle","align","margin","es","strokeWidth","trailWidth","strokeColor","trailColor","Tester","totalTime","curr_sentence","hidden","TableHeader","TableRow","getClassOfRowItem","read","index","TableData","updateDataOnPageChange","_this2","page","curr_page","max_per_page","beg","end","rowItems","TableRow_TableRow","PageNum","selected","updatePage","PageInput","handleChange","event","Number","target","handleSubmit","preventDefault","onSubmit","htmlFor","onChange","TableFooter","page_num","mid_point","Math","floor","max_page","total_data","nums_list","from","x","PageNum_PageNum","PageInput_PageInput","src","alt","prev","next","Table","TableHeader_TableHeader","TableData_TableData","TableFooter_TableFooter","DataCollection","Table_Table_Table","Modal","_useModali","useModali","animated","title","buttons","dist_default","Button","buttonCancel","isStyleCancel","toggleCompleteModal","buttonConfirm","isStyleDestructive","confirmFunc","toast","info","_useModali2","completeModal","onLoadFunc","getElementsByClassName","modalID","Status","Infinity","remainingWords","setRemainingWords","startTimeTotalSecs","getSeconds","diffSecs","hours","mins","totalRecordingTime","displayTime","tick","showTime","initTime","date","getHours","getMinutes","totalWords","helper_checkIfMobileView","Toggle","toggle","addEventListener","onChangeFunc","checked","Checkmark","version","xmlns","xlink","y","viewBox","enableBackground","xmlSpace","fill","stroke","strokeMiterlimit","d","cx","cy","r","strokeLinecap","points","strokeDasharray","Fireworks","CompleteAnimation","Fireworks_Fireworks","Checkmark_Checkmark","App","per_page","curr_index","ip_address","main_userView","comp_debug","comp_tester","comp_userResearchHeader","comp_dataCollection","comp_cameraList","main_adminView","textAlign","main_playground","comp_completeAnimation","CompleteAnimation_CompleteAnimation","DataCollection_DataCollection","updateName","components_Tester_Tester","first_sentence","numFilesSavedTotal","requiredNumCams","disp_showFileSavingLoader","computerID","computerStatus","toggleCamState","helper_toggleCamState","comp_status","comp_modals","buttonConfirmId","admin_resetProgress","getStatus","helper_toggleModal","admin_resetCams","handler_debugToggle","ip","handler_IPOnChange","handler_useThisCompAsServer","detectedNumCams","readOnly","disp_showFileSavedMessage","updateFilesSaved","numFiles","successMessage","setState","debugMode","handler_fileSaveSuccess","numFilesSavedInd","style_makeEmojiToastLayout","updateCompID","status","style_addThisCpuIcon","str","find","re","RegExp","replace","ref_hideLoader","loading","NotOnPageError","initSocketListeners","classList","add","connectedToServer","remove","JSON","stringify","progress","connectedOrder","connectedOrderMap","update","$merge","refreshRates","conectedOrderNum","setTimeout","reload","max","new_page","bool","admin_refreshAll","origin","helper_emitInitialSocketMessages","handler_keydown","inputServerIP","activeElement","disconnect","io","react_router_dom","react_router","path","component","ip_util","readTextFile","sentences","handler_keyup","removeEventListener","file","fetch","response","split","sum","serverID","opts","hostname","mode","ok","_context","t0","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","return","ReactDOM","render","src_app_App","module","exports","__webpack_require__","p","ifaces","require","networkInterfaces","getIP","address","keys","forEach","ifname","iface","family","internal"],"mappings":"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","file":"static/js/main.4a707ef7.chunk.js","sourcesContent":["// let qs = (function (a) {\n//   console.log(\"in qs:\" + window.location.href)\n//   if (a === \"\") return {};\n//   var b = {};\n//   for (var i = 0; i < a.length; ++i) {\n//     var p = a[i].split('=', 2);\n//     if (p.length === 1)\n//       b[p[0]] = \"\";\n//     else\n//       b[p[0]] = decodeURIComponent(p[1].replace(/\\+/g, \" \"));\n//   }\n//   return b;\n// })(window.location.search.substr(1).split('&'));\n\nconst qs = function(id) {\n  let parsedUrl = new URL(window.location.href);\n  if (parsedUrl.searchParams.has(id)) {\n    return parsedUrl.searchParams.get(id);\n  } else {\n    return false;\n  }\n}\nexport default qs;","import React from 'react';\nimport './Webcam.scss';\nimport PropTypes from 'prop-types';\n\nclass Webcam extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isRecording: false,\n      recorder: null,\n      videoSrc: null,\n      videoEle: null,\n      startTime: 'time',\n    };\n    this.video = React.createRef();\n  }\n  getCurrentTime() {\n    let today = new Date();\n    let date =\n      today.getFullYear() +\n      '-' +\n      (today.getMonth() + 1) +\n      '-' +\n      today.getDate();\n    let time = today.getTime(); //today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n    return date + '-' + time;\n  }\n  \n  render() {\n    // console.log(this.props.videoRef);\n    return (\n      <div className='vid_card' onClick={this.startRecording}>\n        <video\n          className='cam'\n          controls\n          autoPlay\n          playsInline\n          muted\n          ref={this.props.videoRef}\n        />\n        <p className='cam_label'>{this.props.name}</p>\n      </div>\n    );\n  }\n}\n\nWebcam.propTypes = {\n  name: PropTypes.string.isRequired,\n  videoRef: PropTypes.object.isRequired\n};\n\nexport default Webcam;\n","/* eslint-disable no-console */\nimport React, { useState, useEffect } from 'react';\n// import sample_cam from '../../assets/svg/sample-cam.svg';\nimport Webcam from '../Webcam/Webcam.js';\nimport RecordRTC, { MediaStreamRecorder } from 'recordrtc';\nimport qs from '../../utils/qs'\nimport cogoToast from 'cogo-toast';\n// import PropTypes from 'prop-types';\n\nexport default function CameraList(props) {\n  const [availableCams, setAvailableCams] = useState([]);\n  const [recordingStatus, setRecordingStatus] = useState(\"recording-status-loading...\");\n  const [availableMics, setAvailableMics] = useState([]);\n  const [pluggedInDevices, setPluggedInDevices] = useState([]);\n\n  const helper_extractRelevantCamInfo = device => {\n    return {\n      camera_info: {\n        id: device.deviceId,\n        label: device.label,\n        groupId: device.groupId\n      },\n      ref: React.createRef(),\n      recorder: null\n    };\n  }\n  const helper_addToVideoDevices = (device, videodevices) => {\n    device = helper_extractRelevantCamInfo(device);\n    console.log(availableCams);\n    const devicePrior = availableCams.filter(cam => {\n      return cam.camera_info.id === device.camera_info.id\n    })[0];\n    console.log(devicePrior);\n    if (devicePrior) {\n      console.log('found prior device');\n      device.mic_info = devicePrior.mic_info;\n    } else {\n      console.log('using first cam mic!!!')\n      device.mic_info = availableMics[0];\n    }\n    videodevices.push(device);\n  }\n  const helper_addToMicDevices = (device, micDevices) => {\n    if (micDevices.indexOf(device.deviceId) < 0)\n      micDevices.push(device);\n  }\n  const helper_getNumCams = devices => {\n    const num = devices.reduce((accumulator, device) => {\n      return device.kind === 'videoinput' ? accumulator + 1 : accumulator;\n    }, 0);\n    props.updateDetectedNumCams(num);\n    return num;\n  }\n  const initCams = () => {\n    if (!navigator.mediaDevices || !navigator.mediaDevices.enumerateDevices) {\n      console.log('enumerateDevices() not supported.');\n    } else {\n      navigator.mediaDevices.enumerateDevices().then(devices => {\n        let videoDevices = [];\n        let micDevices = [];\n        const numCams = helper_getNumCams(devices);\n\n        console.log(\"number of cams detected: \" + numCams);\n        devices.map(function(device) {\n          if (device.kind === 'audioinput') {\n            if (\n              !device.label.toLowerCase().includes('default') &&\n              !device.label.toLowerCase().includes('communications') && \n              !device.label.toLowerCase().includes('built-in')\n            ) {\n              helper_addToMicDevices(device, micDevices);\n            }\n          }            \n          if (device.kind === 'videoinput') {\n            helper_addToVideoDevices(device, videoDevices);\n          }\n          return null;\n        });\n        setAvailableMics(micDevices);\n        setAvailableCams(videoDevices);\n\n        document.getElementById('startBtn').click();\n        document.getElementById('startBtn').disabled = true;\n        // console.log('getAvailableDevices success!');\n      })\n      .catch(function(err) {\n        console.log(err.name + ': ' + err.message);\n      });\n    }\n  }\n  // const initMics = () => {\n  //   let id = 0;\n  //   availableCams.map(cam => {\n  //     if (availableMics[id]) cam.mic_info = availableMics[id++].deviceId;\n  //   });\n  // }\n\n  Array.prototype.diff = function(a) {\n    return this.filter(function(i) {\n      return a.indexOf(i) < 0;\n    });\n  };\n\n  const getNewMicCam = (newPluggedInID, allDevices) => {\n    const newCam = allDevices.filter(device => {\n      return (\n        newPluggedInID.indexOf(device.deviceId) >= 0 &&\n        device.kind === 'videoinput'\n      );\n    });\n    // should only contain one \n    const newMic = allDevices.filter(device => {\n      return (\n        newPluggedInID.indexOf(device.deviceId) >= 0 &&\n        device.kind === 'audioinput'\n      ); \n    });\n    if (newMic.length > 1) {\n      console.error('multiple new mics detected')\n    }\n    if (newCam.length > 1) {\n      console.error('multiple new cams detected');\n    }\n    const newMicID = newMic[0].deviceId;\n\n    return [newMicID, newCam[0]];\n  }\n\n  const checkIfMac = (resolve) => {\n    let faceTimeDevice = undefined;\n    let defaultMic = undefined;\n    return new Promise(() => {\n      navigator.mediaDevices.enumerateDevices().then(devices => {\n        faceTimeDevice = devices.filter(device => {\n          return device.label.toLowerCase().includes('facetime');\n        });\n        defaultMic = devices.filter(device => {\n          return device.deviceId === 'default'\n        });\n      }).then(()=> {\n        resolve(faceTimeDevice[0], defaultMic[0]);\n      });\n    })\n  }\n\n  const startFaceTimeCam = (faceTimeDevice, defaultMic) => {\n    if (faceTimeDevice) {\n      const device = helper_extractRelevantCamInfo(faceTimeDevice)\n      device.mic_info = defaultMic.deviceId;\n      setAvailableCams([device]);\n      document.getElementById('startBtn').disabled = false;\n      document.getElementById('startBtn').click();\n      document.getElementById('dummyBtn').disabled = false;\n      document.getElementById('dummyBtn').click();\n      cogoToast.success('Mac FaceTime Camera started', {hideAfter: 0.3});\n    }\n  }\n\n  const addNewCamMic = () => {\n    try {\n      checkIfMac(startFaceTimeCam);\n    } catch (Exception) {\n      // console.err('not a mac')\n    }\n    navigator.mediaDevices.enumerateDevices().then(devices => {\n      const allDevices = devices.filter(device => {\n        return (\n          device.label.toLowerCase().includes('aoni') &&\n          !device.label.toLowerCase().includes('communication') &&\n          !device.label.toLowerCase().includes('default')\n        );\n      });\n      let detectedTwoDevices = false;\n\n      const idAoni = allDevices.map(device => {\n        return device.deviceId;\n      });\n      // const newPluggedInPaired = allDevices.map(device => [device.kind, device.deviceId])\n      // console.log(newPluggedInPaired);\n\n      const newPluggedInID = idAoni.diff(pluggedInDevices);\n      if (newPluggedInID.length === 0) {\n        // console.log('no new devices detected');\n      } else if (newPluggedInID.length === 2) {\n        detectedTwoDevices = true;\n        // console.log(\n        //   'new devices: ' + newPluggedInID.map(d => d.substring(0, 5))\n        // );\n      }\n\n      if (detectedTwoDevices) {\n        let [newMicID, newCamDevice] = getNewMicCam(newPluggedInID, allDevices);\n        newCamDevice = helper_extractRelevantCamInfo(newCamDevice);\n        const existCamera = availableCams.filter(cam => {\n          return cam.camera_info.id === newCamDevice.camera_info.id;\n        })[0];\n        if (!existCamera) {\n          newCamDevice.mic_info = newMicID;\n          let temp = availableCams;\n          temp.push(newCamDevice);\n          setAvailableCams(temp);\n          cogoToast.success(\n            'New camera: ' + newCamDevice.camera_info.id.substring(0, 5) + ' added.'\n          ), {hideAfter: 1};\n          document.getElementById('startBtn').disabled = false;\n          initCams();\n          setPluggedInDevices(idAoni);\n        }\n      }      \n    }).then(() => {\n        document.getElementById('dummyBtn').disabled = false;\n        document.getElementById('dummyBtn').click();\n    });\n  }\n\n  function useAvailableWebCams() {\n    //  runs once\n    useEffect(() => {\n      props.updateConnectionStatus();\n    }, [props.addCamState]);\n  }\n\n  const initCamsDummy = () => {\n    stopAllCams(true);\n  }\n\n  const startAllCams = () => {\n    const temp =\n    recordingStatus === 'recording-status-loading...' ? {} : recordingStatus;\n    // goes through all cams array and through each ID, accesses and opens it using navigator\n    availableCams.map(cam => {\n      // console.log(cam.mic_info);\n      if (!cam.mic_info) {\n        console.error('using default microphone...');\n      }\n      navigator.mediaDevices\n        .getUserMedia({\n          audio: {\n            deviceId: {exact: (cam.mic_info) ? cam.mic_info : 'default'}\n          },\n          video: {\n            frameRate: {exact: 30, ideal: 30},\n            width: {ideal: 1920},\n            height: {ideal: 1080},\n            deviceId: cam['camera_info'].id\n          }\n        })\n        .then(camera => {\n          // console.log(camera.getTracks().forEach(track=> {console.log(\"track:\" + track.label + \",\" + track.kind)}));\n          // console.log(\"////////////////////////\");\n          let recorder = RecordRTC(camera, {\n            recorderType: MediaStreamRecorder, //WebAssemblyRecorder,\n            type: 'video',\n            frameRate: 30,\n            desiredSampRate: 16000,\n            width: 1920,\n            height: 1080,\n            numberOfAudioChannels: 2,\n            disableLogs: true\n          });\n          if (recorder.getState() !== 'recording') {\n            recorder.camera = camera;\n            cam['recorder'] = recorder;\n            let video = cam['ref'];\n            try {\n              video.current.srcObject = camera;\n            } catch (NotYetLoadedException) {\n              //\n            }\n            // resetInitialCams(recorder);\n            recorder.startRecording();\n          }\n          triggerRecordStatusUpdate(temp, recorder, cam);\n        })\n        .catch(error => {\n          console.error(error);\n        });\n        return availableCams;\n    });\n  };\n\n  const stopAllCams = (dummy) => {\n    const temp =\n      recordingStatus === 'recording-status-loading...' ? {} : recordingStatus;\n      \n    availableCams.map(cam => {\n      let recorder = cam['recorder'];\n      if (recorder !== null) {\n        recorder.stopRecording(() => {\n          let blob = recorder.getBlob();\n          console.log(\n            '%c recorded data',\n            'background: #222; color: #bada55',\n            blob\n          );\n          if (dummy !== true) {\n            props.socket.emit('client: save data', {\n              name: qs(\"name\"),\n              sentence_index: qs(\"sentence_index\"),\n              camera_id: cam['camera_info'].id,\n              blob: blob\n            });\n          } else {\n            console.log('dummy received, did not save blob');\n          }\n\n        });\n        triggerRecordStatusUpdate(temp, recorder, cam);\n      }\n      return availableCams;\n    });\n  };\n\n  const triggerRecordStatusUpdate = (temp, recorder, cam) => {\n    try {\n      temp[cam['camera_info'].id.substring(0, 15)] = recorder.getState();\n      setRecordingStatus(temp);\n      props.updateConnectionStatus(temp);\n    } catch (NotYetLoadedException) {\n      cogoToast.warn('Camera not yet loaded!', {hideAfter: 0});\n    }\n  }\n\n  const resumeAllCams = () => {\n    const temp =\n      recordingStatus === 'recording-status-loading...' ? {} : recordingStatus;\n    availableCams.map(cam => {\n      let recorder = cam['recorder'];\n      let state = undefined;\n      try {\n        state = recorder.getState();\n      } catch {\n        cogoToast.warn(\"Camera not yet loaded!\", {hideAfter: 0});\n      }\n      if (state === \"paused\") {\n        recorder.resumeRecording();\n      } else if (state === \"stopped\"){\n        try {\n          recorder.startRecording();\n        } catch (NotYetLoadedException) {\n          cogoToast.warn('Camera not yet loaded!', {hideAfter: 0});\n        }\n      }\n      triggerRecordStatusUpdate(temp, recorder, cam);\n      return availableCams;\n    });\n  }\n\n  useAvailableWebCams();\n\n  // dummy to fix bug of first video\n  props.socket.on('server: dummy vid, do not save', function() {\n    document.getElementById('dummyBtn').click();\n    document.getElementById('dummyBtn').disabled = true;\n  });\n\n  // this is actually what calls start cams\n  props.socket.on('server: start cams', function () {\n    document.getElementById(\"resumeBtn\").click();\n    document.getElementById(\"resumeBtn\").disabled = true;\n    document.getElementById('stopBtn').disabled = false;\n\n  });\n\n  // this is actually what calls stop cams\n  props.socket.on('server: stop cams', function () {\n    document.getElementById('stopBtn').click();\n    document.getElementById('stopBtn').disabled = true;\n    document.getElementById(\"resumeBtn\").disabled = false;\n  });\n\n  const debugControls = (debug) => {\n    if (debug) {\n      return (\n        <div>\n          {/* <p>Don't click these while actual testing</p> */}\n          <button id='dummyBtn' onClick={initCamsDummy}>\n            dummy reset\n          </button>\n          <button id='startBtn' onClick={startAllCams}>\n            start and pause all cams\n          </button>\n          <button id='resumeBtn' onClick={resumeAllCams}>\n            resume all cams\n          </button>\n          <button id='stopBtn' onClick={stopAllCams}>\n            stop all cams\n          </button>\n          <button\n            id='addCamBtn'\n            className='hidden_button'\n            onClick={addNewCamMic}\n          >\n            Add Cam\n          </button>\n          {/* <button id=\"setCompID\" onClick={getSetCompID}>get set computer ID</button> */}\n        </div>\n      );\n    }\n  }\n\n  const renderCams = () => {\n\n    // initMics();\n\n    const debug = true;\n    let i = 0; \n    const comp_camsList = availableCams.map(cam => {\n      return (\n        <Webcam\n          key={i++}\n          name={'ID: ' + cam['camera_info'].id.substring(0, 15)}\n          videoRef={cam['ref']}\n        />\n      );\n    });\n\n\n    return (\n      <div id='camera_list'>\n        {debugControls(debug)}\n        <div>\n          <div className='cameras'>{comp_camsList}</div>\n        </div>\n      </div>\n    );\n  };\n  \n  return renderCams();\n}","import React, { Component } from 'react'\nimport './NameField.scss'\nimport PropTypes from 'prop-types';\n\nexport default class NameField extends Component {\n  saveName = () => {\n    let name = document.getElementById(\"name\").value;\n    // document.location.search = \"name=\" + name + \"&sentence_index=0\";\n    let url_state = '?name=' + name + '&sentence_index=0'\n    window.history.pushState(\n      null,\n      null,\n      url_state\n    );\n    \n    this.props.socket.emit('client: start testing', {\n      name,\n      sentence_index: 0\n    })\n    this.props.socket.emit('client: dummy vid, do not save');\n    this.props.socket.emit('client: update recording progress', 0);\n    this.props.socket.emit('client: save total time', [0,0,0]);\n    this.props.socket.emit('client: save total start time', new Date())\n    this.props.updateTesterContents();\n    this.props.updateGreenLightStatus(true);\n    \n  }\n\n  detectEnter = (e) => {\n    if (e.which === 13) {\n      this.saveName(e);\n    }\n  }\n\n\n  render() {\n    return (\n      <div>\n        <div className='name_input'>\n          <input\n            type='text'\n            name='name'\n            id='name'\n            placeholder='输入名字（拼音）'\n            onKeyPress={this.detectEnter}\n            autoFocus\n          />\n          <br/>\n          <button className=\"btn btn-center\" onClick={this.saveName}>Save Name</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nNameField.propTypes = {\n  socket: PropTypes.object.isRequired,\n  updateTesterContents: PropTypes.func.isRequired,\n  updateGreenLightStatus: PropTypes.func.isRequired,\n};","/* eslint-disable no-console */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport NameField from '../NameField/NameField';\nimport qs from '../../utils/qs';\n\nexport default function InProcessScreen(props) {\n  const [recording, setRecordState] = useState(false);\n  const [done_recording, setDoneRecording] = useState(false);\n  const [reset_state, reset] = useState(false);\n  const [nameSet, setName] = useState(qs('name'));\n\n  function updateSentence(data) {\n    reset(true);\n    props.updateSentence(data);\n  }\n\n  function getRecordState() {\n    if (recording) {\n      return 'Done';\n    } else if (done_recording && !reset_state) {\n      return 'Retry';\n    } else {\n      return 'Record';\n    }\n  }\n\n  function stopRecording() {\n    setDoneRecording(true);\n    setRecordState(false);\n    props.socket.emit('client: stop cams', 'in process screen');\n    reset(false);\n    props.showFileSavingLoader();\n    props.updateSentence('$next');\n\n    props.updateGreenLightStatus(false);\n    props.stopTimer();\n    markSentenceAsDone(props.curr_sentence_index);\n  }\n\n  function markSentenceAsDone(curr_sentence_index) {\n    if (curr_sentence_index >= 0 ) props.updateRecordProgress(curr_sentence_index);\n  }\n\n  function startRecording() {\n    props.socket.emit('client: start cams', 'in process screen');\n    setRecordState(true);\n    props.startTimer();\n    document.getElementById('testerRecordBtn').className = 'btn btn-danger';\n\n  }\n\n  function record() {\n    document.getElementById('showSavedFilesBtn').disabled = false;\n    if (recording) {\n      stopRecording();\n    } else {\n      startRecording();\n    }\n  }\n\n  \n  function disableNextButtonIfCurrNotRead() {\n    const recordedYet =\n      props.recordedProgress > props.curr_sentence_index;\n    try {\n      if (recordedYet) {\n        document.getElementById('testerNextBtn').disabled = false;\n      } else {\n        document.getElementById('testerNextBtn').disabled = true;\n      }\n    } catch (Exception) {\n      // console.log(Exception);\n    }\n  }\n\n  function makeEmojiLayout(msg, emoji) {\n    return (\n      <div className='emoji-layout-container'>\n        <div className='emoji-layout-emoji-left'> {emoji}</div>\n        <div>\n          {msg[0]}\n          <br />\n          {msg[1]}\n        </div>\n        <div className='emoji-layout-emoji-right'> {emoji}</div>\n      </div>\n    );\n  }\n\n  function displaySentenceToBeRead() {\n    disableNextButtonIfCurrNotRead();\n    const recordedYet = \n      (props.curr_sentence_index > 0) ? \n      props.recordedProgress >= props.curr_sentence_index : \n      false;\n    const emoji = recordedYet ? '↺' : '';\n    let sentence = props.data[props.curr_sentence_index];\n    if (sentence) {\n      const line1 = sentence.substring(0,10)\n      const line2 = sentence.substring(10);\n      sentence = makeEmojiLayout([line1, line2], emoji);\n    }\n    \n    // const sentence = recordedMessage + ' ' + props.data[props.curr_sentence_index] + ' ' + recordedMessage;\n    const recordedClassName = recordedYet ? 'recorded_sentence_highlight sentence_to_be_read' : 'sentence_to_be_read'\n    return (\n      <div>\n        <br />\n        <div className={recordedClassName}>\n          {sentence}\n        </div>\n      </div>\n    );\n  }\n\n  \n\n  function trans(text) {\n    if (text === 'Done') {\n      return '结束录制';\n    } else if (text === 'Retry') {\n      return '重新录制';\n    } else if (text === 'Record') {\n      return '开始录制'\n    } else {\n      return text;\n    }\n  }\n\n  function updateTesterContents() {\n    setName(true);\n  }\n\n  function getContents() {\n    if (!nameSet) {\n      return (\n        <div>\n          <NameField\n            socket={props.socket}\n            updateTesterContents={updateTesterContents}\n            updateGreenLightStatus={props.updateGreenLightStatus}\n          />\n        </div>\n      );\n    } else {\n      try {\n        let recordTimeEle = document.getElementById('record_time_content');\n        let recordTimeMsg = document.getElementById('record_time_msg');\n        let colorRecordTime = (recordTimeEle.innerText === '00:00:00') ? 'gray' : 'red';\n        if (colorRecordTime === 'gray') {\n          recordTimeEle.style.transition = 'all 0.5 ease'\n          recordTimeMsg.style.transition = 'all 0.5 ease'\n          recordTimeEle.style.color = 'black';\n          recordTimeMsg.style.color = 'black';\n        } else {\n          recordTimeEle.style.transition = 'all 0.5 ease'\n          recordTimeMsg.style.transition = 'all 0.5 ease'\n          recordTimeEle.style.color = '#FF1053';\n          recordTimeMsg.style.color = '#FF1053';\n        }\n      } catch (NotYetLoadedException) {\n        //\n      }\n      return (\n        <div>\n          {displaySentenceToBeRead()}\n          <div className='recording_hint'>\n          <pre id='record_time_content'>00:00:00</pre>\n          <pre id='record_time_msg'>录制中</pre>\n            \n          </div>\n          <button\n            id='testerRecordBtn'\n            className={\n              getRecordState() === 'Done'\n                ? 'btn btn-danger'\n                : 'btn_highlight_green'\n            }\n            onClick={record}\n            disabled={\n              !props.recordGreenLight ||\n              props.numFilesSaved % props.numCams !== 0\n            }\n          >\n            {trans(getRecordState())}\n          </button>\n          <br />\n          <button\n            className='btn'\n            id='testerPrevBtn'\n            onClick={() => updateSentence('$prev')}\n            disabled={\n              props.curr_sentence_index === 0 ||\n              !props.recordGreenLight ||\n              props.numFilesSaved % props.numCams !== 0 ||\n              recording\n            }\n          >\n            ⬅上一句\n          </button>\n          <button\n            className='btn'\n            id='testerNextBtn'\n            onClick={() => updateSentence('$next')}\n            disabled={\n              props.curr_sentence_index === props.data_length - 1 ||\n              !props.recordGreenLight ||\n              props.numFilesSaved % props.numCams !== 0 ||\n              recording\n            }\n          >\n            下一句➡\n          </button>\n        </div>\n      );\n    }\n  }\n\n  return (\n    <div className='test_container'>\n      {getContents()}\n    </div>\n  );\n}\n\nInProcessScreen.propTypes = {\n  curr_sentence_index: PropTypes.number.isRequired,\n  curr_sentence: PropTypes.string.isRequired,\n  data_length: PropTypes.number.isRequired,\n  updateSentence: PropTypes.func.isRequired,\n  socket: PropTypes.object.isRequired,\n  data: PropTypes.array.isRequired,\n  updateGreenLightStatus: PropTypes.func.isRequired,\n  recordGreenLight: PropTypes.bool.isRequired,\n  numFilesSaved: PropTypes.number.isRequired,\n  numCams: PropTypes.number.isRequired,\n  stopTimer: PropTypes.func.isRequired,\n  startTimer: PropTypes.func.isRequired,\n  recordedProgress: PropTypes.number.isRequired,\n  updateRecordProgress: PropTypes.func.isRequired,\n  showFileSavingLoader: PropTypes.func.isRequired,\n};\n","/* eslint-disable no-console */\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Timer(props) {\n  const [intervalID, setIntervalID] = useState(undefined);\n  // let totalTime = []\n  // function saveTotalTime(event) {\n    // event.preventDefault();\n    // props.socket.emit(\n    //   'client: save total time',\n    //   totalTime\n    // );\n    // event.returnValue = '';\n  // }\n\n\n  function stopTimer() {\n    clearInterval(intervalID);\n    document.getElementById(props.name).innerHTML = '00:00:00';\n  }\n\n  function createInterval(timeSaved) {\n    let time = (timeSaved) ? timeSaved : [0, 0, 0];\n    try {\n      time = time.map(t => {\n        return t ? t : 0;\n      });\n    } catch (SyntaxError) {\n      console.error('some issue with this: ' + time);\n    }\n    // console.log(timeSaved);\n    return setInterval(() => {\n      let hour = time[0];\n      let min = time[1];\n      let sec = time[2];\n\n      if (sec < 60) {\n        sec += 1;\n      }\n      if (sec === 60) {\n        min += 1;\n        sec = 0;\n      }\n      if (min === 60) {\n        hour += 1;\n        min = 0;\n      }\n      time = [hour, min, sec];\n      // totalTime = time;\n      try {\n        document.getElementById(props.name).innerHTML =\n          ('0' + hour).slice(-2) +\n          ':' +\n          ('0' + min).slice(-2) +\n          ':' +\n          ('0' + sec).slice(-2);\n\n      } catch (SomeError) {\n        console.error(SomeError);\n      }\n      props.updateTotalTime(time);\n    }, 1000);\n  }\n\n  useEffect(() => {\n    // window.addEventListener('beforeunload', saveTotalTime);\n    props.socket.emit('client: get total time');\n    props.socket.on('server: response for total time', timeSaved => {\n      if (!timeSaved && !intervalID) {\n        setIntervalID(createInterval());\n      }\n      stopTimer();\n      setIntervalID(createInterval(timeSaved));\n    });\n    props.socket.on('server: reset total timer', () => {\n      stopTimer();\n      setIntervalID(createInterval());\n    });\n  }, []);\n  return (\n    <div>\n      {/* <button onClick={resetTimerClick}>reset</button> */}\n    </div>\n  );\n}\n\nTimer.propTypes = {\n  name: PropTypes.string.isRequired,\n  socket: PropTypes.object.isRequired,\n  totalTime: PropTypes.array.isRequired,\n  updateTotalTime: PropTypes.func.isRequired\n};\n","import React from 'react'\nimport PropTypes from 'prop-types';\nimport { Line } from 'rc-progress';\n\nexport default function ProgressBar(props) {\n  const percent = ((props.curr / props.total) * 100).toFixed(2);\n  const alignmentStyle = props.align === 'left' ? { margin: '0' } : {};\n  return (\n    <div className='progress_bar' style={alignmentStyle}>\n      <pre>\n        {props.curr} / {props.total} ({percent}%)\n      </pre>\n      <Line\n        percent={percent}\n        strokeWidth={props.strokeWidth}\n        trailWidth={props.strokeWidth}\n        strokeColor='#64e7fd'\n        trailColor='#363732'\n      />\n    </div>\n  );\n}\n\nProgressBar.propTypes = {\n  curr: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  align: PropTypes.string.isRequired,\n  strokeWidth: PropTypes.number.isRequired,\n};\n","import React, { useState } from 'react';\nimport './Tester.scss';\nimport PropTypes from 'prop-types';\nimport InProcessScreen from './InProcessScreen.js';\nimport Timer from '../Timer.js'\nimport qs from '../../utils/qs'\nimport ProgressBar from '../ProgressBar'\n\nfunction Tester(props) {\n  const [intervalID, setIntervalID] = useState(undefined);\n\n  function comp_inProcessScreen() {\n    return (\n      <InProcessScreen\n        updateSentence={props.updateSentence}\n        curr_sentence_index={props.curr_sentence_index}\n        data_length={props.data_length}\n        socket={props.socket}\n        data={props.data}\n        curr_sentence={props.curr_sentence}\n        recordGreenLight={props.recordGreenLight}\n        updateGreenLightStatus={props.updateGreenLightStatus}\n        numFilesSaved={props.numFilesSaved}\n        numCams={props.numCams}\n        stopTimer={stopTimer}\n        startTimer={startTimer}\n        recordedProgress={props.recordedProgress}\n        updateRecordProgress={props.updateRecordProgress}\n        showFileSavingLoader={props.showFileSavingLoader}\n      />\n    );\n  }\n\n  function stopTimer() {\n    clearInterval(intervalID);\n    document.getElementById('record_time_content').innerHTML = '00:00:00';\n  }\n\n  function startTimer() {\n    setIntervalID(createInterval());\n  }\n\n  function createInterval() {\n    let time = [0, 0, 0];\n    return setInterval(() => {\n      let hour = time[0];\n      let min = time[1];\n      let sec = time[2];\n\n      if (sec < 60) {\n        sec += 1;\n      }\n      if (sec === 60) {\n        min += 1;\n        sec = 0;\n      }\n      if (min === 60) {\n        hour += 1;\n        min = 0;\n      }\n      time = [hour, min, sec];\n      document.getElementById('record_time_content').innerHTML =\n        ('0' + hour).slice(-2) +\n        ':' +\n        ('0' + min).slice(-2) +\n        ':' +\n        ('0' + sec).slice(-2);\n      }, 10);\n  }\n\n  return (\n    <div className='testing_screen'>\n      <Timer\n          name={'total_timer'}\n          socket={props.socket}\n          totalTime={props.totalTime}\n          updateTotalTime={props.updateTotalTime}\n        />\n      <pre id='total_timer'>00:00:00</pre>\n      <ProgressBar\n        curr={props.recordedProgress}\n        total={props.data_length - 1}\n        align={'center'}\n        strokeWidth={2}\n      />\n      <div className='middle'>\n        <div className='inner'>{comp_inProcessScreen()}</div>\n      </div>\n      <pre\n        hidden={\n          props.recordGreenLight ||\n          props.curr_sentence_index === 0 ||\n          !qs('name')\n        }\n        className='warning_message'\n      >\n        如果等保存时间多余10秒钟，通知老师来从设置机器\n      </pre>\n    </div>\n  );\n}\n\nTester.propTypes = {\n  updateSentence: PropTypes.func.isRequired,\n  curr_sentence_index: PropTypes.number.isRequired,\n  curr_sentence: PropTypes.string.isRequired,\n  data_length: PropTypes.number.isRequired,\n  socket: PropTypes.object.isRequired,\n  data: PropTypes.array.isRequired,\n  recordGreenLight: PropTypes.bool.isRequired,\n  updateGreenLightStatus: PropTypes.func.isRequired,\n  numFilesSaved: PropTypes.number.isRequired,\n  numCams: PropTypes.number.isRequired,\n  recordedProgress: PropTypes.number.isRequired,\n  updateRecordProgress: PropTypes.func.isRequired,\n  totalTime: PropTypes.array.isRequired,\n  updateTotalTime: PropTypes.func.isRequired,\n  showFileSavingLoader: PropTypes.func.isRequired\n};\n\nexport default Tester;\n","import React, { Component } from 'react'\n\nexport default class TableHeader extends Component {\n  render() {\n    return (\n      <div>\n        <div className='table_header_footer'>\n          <div>Sentence</div>\n          {/* <div>Length</div>\n          <div>Actions</div> */}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './TableRow.scss';\n// import Actions from './Actions';\nimport PropTypes from 'prop-types';\n\nexport default class TableRow extends Component {\n  getClassOfRowItem = () => {\n    let read = this.props.read ? 'read row_item' : 'row_item';\n    // let sentence = this.props.sentence;\n    let is_current = this.props.curr_sentence_index === this.props.index ? ' curr_sentence' : '';\n    return read + is_current;\n  }\n\n\n  render() {\n    return (\n      <div>\n        <div className='table_row'>\n          <div className={this.getClassOfRowItem()}>\n            {this.props.index + \": \" + this.props.sentence}\n          </div>\n          {/* <div className='row_item'>00:00 / {this.props.time} </div> */}\n          {/* <Actions /> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nTableRow.propTypes = {\n  sentence: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  curr_sentence_index: PropTypes.number.isRequired,\n  time: PropTypes.string.isRequired,\n  read: PropTypes.bool.isRequired,\n};\n","import React, { Component } from 'react';\nimport TableRow from './TableRow.js';\nimport PropTypes from 'prop-types';\nimport './TableData.scss';\n\nexport default class TableData extends Component {\n  updateDataOnPageChange = () => {};\n  render() {\n    let data = this.props.data;\n    let page = this.props.curr_page;\n    let max_per_page = this.props.max_per_page;\n    let beg = page * max_per_page - max_per_page;\n    let end = beg + max_per_page;\n    let small_data = data.slice(beg, end);\n    let rowItems = small_data.map((sentence, i) => (\n      <TableRow\n        curr_sentence_index={this.props.curr_sentence_index}\n        sentence={sentence}\n        time='00:00'\n        read={false}\n        key={sentence+\":\"+i}\n        index={i + beg}\n      />\n    ));\n\n    return <div className='table'>{rowItems}</div>;\n  }\n}\n\nTableData.propTypes = {\n  data: PropTypes.array.isRequired,\n  curr_sentence_index: PropTypes.number.isRequired,\n  curr_page: PropTypes.number.isRequired,\n  max_per_page: PropTypes.number.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class PageNum extends Component {\n  render() {\n    return (\n      <div \n        className={this.props.selected ? 'page_num' : 'can_click_num page_num'}\n        onClick={() => this.props.updatePage(this.props.num)}>\n        {this.props.num}\n      </div>\n    );\n  }\n}\n\nPageNum.propTypes = {\n  num: PropTypes.number.isRequired,\n  selected: PropTypes.bool.isRequired,\n  updatePage: PropTypes.func.isRequired\n};\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\n\nexport default class PageInput extends Component {\n  handleChange = (event) => {\n    this.props.updatePage(Number(event.target.value));\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n  }\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor='page'>Page:</label>\n          <input\n            type='text'\n            value={this.props.curr_page}\n            onChange={this.handleChange}\n          />\n        </form>\n      </div>\n    );\n  }\n}\n\nPageInput.propTypes = {\n  updatePage: PropTypes.func.isRequired,\n  curr_page: PropTypes.number.isRequired\n}","import React, { Component } from 'react'\nimport './TableFooter.scss'\nimport PageNum from './PageNum.js'\nimport next from '../../assets/svg/collapse-chevron.svg'\nimport prev from '../../assets/svg/expand-chevron.svg';\nimport PropTypes from 'prop-types';\nimport PageInput from './PageInput.js'\nimport beg from '../../assets/svg/beg.svg'\nimport end from '../../assets/svg/end.svg';\n\nexport default class TableFooter extends Component {\n  updatePage=(page_num) => {\n    this.props.updatePage(page_num);\n  }\n\n  render() {\n    let curr_page = this.props.curr_page;\n    let max_per_page = this.props.max_per_page;\n    let mid_point = Math.floor(max_per_page / 2)\n    let max_page = Number(((this.props.total_data + 1) / this.props.max_per_page + 1).toFixed(0));\n    let page_nums = Array.from(new Array(max_per_page), (x, i) => { \n      let min = 0;\n      if (curr_page <= mid_point) {\n        min = i;\n      } else if (curr_page >= max_page - mid_point) {\n        min = i + max_page - max_per_page;\n      } else {\n        min = i + curr_page - mid_point - 1;\n      }\n      return min;\n    });\n    let nums_list = page_nums.map((i) => {\n      i = i + 1;\n      return <PageNum num={i} selected={curr_page === i} key={i} updatePage={this.props.updatePage}/>\n    });\n\n    return (\n      <div>\n        <div className='table_header_footer'>\n          <div className='table_footer'>\n            <div className='left_footer'>\n              <PageInput\n                updatePage={this.props.updatePage}\n                curr_page={this.props.curr_page}\n              />\n            </div>\n            <div className='right_footer'>\n              <img\n                src={beg}\n                alt=''\n                className='small_btn'\n                onClick={() => this.props.updatePage(1)}\n              />\n              <img\n                src={prev}\n                alt=''\n                className='small_btn'\n                onClick={() => this.props.updatePage(curr_page - 1)}\n              />\n              {nums_list}\n              <img\n                src={next}\n                alt=''\n                className='small_btn'\n                onClick={() => this.props.updatePage(curr_page + 1)}\n              />\n              <img\n                src={end}\n                alt=''\n                className='small_btn'\n                onClick={() => this.props.updatePage(max_page)}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nTableFooter.propTypes = {\n  updatePage: PropTypes.func.isRequired,\n  curr_page: PropTypes.number.isRequired,\n  total_data: PropTypes.number.isRequired,\n  max_per_page: PropTypes.number.isRequired\n};","import React, { Component } from 'react'\nimport TableHeader from './TableHeader.js'\nimport './Table.scss'\nimport TableData from './TableData.js'\nimport PropTypes from 'prop-types';\nimport TableFooter from './TableFooter';\nexport default class Table extends Component {\n  constructor(props) {\n    super(props);\n    let per_page = 8;\n    this.state = {\n      max_per_page: per_page\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <TableHeader />\n        <TableData\n          data={this.props.data}\n          curr_page={this.props.curr_page}\n          max_per_page={this.state.max_per_page}\n          curr_sentence_index={this.props.curr_sentence_index}\n        />\n        <TableFooter\n          total_data={this.props.data.length}\n          updatePage={this.props.updatePage}\n          curr_page={this.props.curr_page}\n          max_per_page={this.state.max_per_page}\n        />\n      </div>\n    );\n  }\n}\n\nTable.propTypes = {\n  curr_sentence_index: PropTypes.number.isRequired,\n  curr_page: PropTypes.number.isRequired,\n  updatePage: PropTypes.func.isRequired,\n  data: PropTypes.array.isRequired,\n};","import React, { Component } from 'react';\nimport Table from './Table';\nimport PropTypes from 'prop-types';\n\nexport default class DataCollection extends Component {\n\n\n  render() {\n    return (\n      <div>\n        <div className='name_field'>\n        </div>\n        <div className='data_table'>\n          <Table\n            data={this.props.data}\n            curr_sentence_index={\n              this.props.curr_sentence_index\n            }\n            curr_page={this.props.curr_page}\n            updatePage={this.props.updatePage}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nDataCollection.propTypes = {\n  data: PropTypes.array.isRequired,\n  curr_sentence_index: PropTypes.number.isRequired,\n  socket: PropTypes.object.isRequired,\n  updatePage: PropTypes.func.isRequired,\n  curr_page: PropTypes.number.isRequired\n};\n","import React, { useEffect } from 'react'\nimport Modali, { useModali } from 'modali';\nimport PropTypes from 'prop-types';\nimport cogoToast from 'cogo-toast';\n\nexport default function Modal(props) {\n  const [completeModal, toggleCompleteModal] = useModali({\n    animated: true,\n    title: props.title,\n    message: props.message,\n    buttons: [\n      <Modali.Button\n        label={props.buttonCancel ? props.buttonCancel : ''}\n        isStyleCancel\n        className={!props.buttonCancel ? 'display_none' : ''}\n        key={props.buttonCancel}\n        hidden={!props.buttonCancel}\n        onClick={() => toggleCompleteModal()}\n      />,\n      <Modali.Button\n        label={props.buttonConfirm}\n        isStyleDestructive\n        onClick={() => {\n          if (props.confirmFunc) props.confirmFunc();\n          toggleCompleteModal();\n          if (props.toast) cogoToast.info(props.toast);\n        }}\n        hidden={!props.buttonConfirm}\n        key={props.buttonConfirm}\n      />\n    ]\n  });\n  useEffect(() => {\n    if (props.onLoadFunc) props.onLoadFunc()\n    try {\n      if (!props.buttonCancel)\n        document.getElementsByClassName(\n          'modali-button-cancel'\n          )[0].className += ' display_none';\n      if (!props.buttonConfirm)\n        document.getElementsByClassName(\n          'modali-button-destructive'\n        )[0].className += ' display_none';\n    } catch (NotYetLoadedException) {\n      // console.log(NotYetLoadedException);\n    }\n  }, [])\n\n  return (\n    <div style={{ height: '0px' }}>\n      <button\n        className=\"hidden_button\"\n        id={props.modalID}\n        onClick={toggleCompleteModal}\n      >\n        toggle modal\n      </button>\n      <Modali.Modal {...completeModal} />\n    </div>\n  );\n}\n\nModal.propTypes = {\n  socket: PropTypes.object,\n  title: PropTypes.string,\n  message: PropTypes.any,\n  buttonCancel: PropTypes.string,\n  buttonConfirm: PropTypes.string,\n  toast: PropTypes.string,\n  confirmFunc: PropTypes.func,\n  modalID: PropTypes.string,\n  onLoadFunc: PropTypes.func,\n  buttonConfirmId: PropTypes.string\n};\n","import React, { useState, useEffect } from 'react';\nimport qs from '../utils/qs';\nimport PropTypes from 'prop-types';\nimport ProgressBar from './ProgressBar';\n\nexport default function Status(props) {\n  const [remainingWords, setRemainingWords] = useState(Infinity)\n\n  let intervalID = undefined\n\n  let i = 0; \n  useEffect(() => {\n    // console.log('status page loaded');\n    clearInterval(intervalID);\n    props.socket.on('server: response for start time', startTime => {\n      try {\n        // alert('setting starttime');\n        startTime = new Date(startTime);\n        const startTimeTotalSecs = getSeconds(startTime);\n        const nowSecs = getSeconds(new Date());\n        let diffSecs = nowSecs - startTimeTotalSecs;\n        // let expectedTime = diffSecs / (props.recordedProgress / props.data_length - 1)\n        // console.log(diffSecs);\n        const hours = Math.floor(diffSecs / 3600)\n        diffSecs -= hours * 3600;\n        const mins = Math.floor(diffSecs / 60);\n        diffSecs -= mins * 60;\n        const secs = diffSecs\n        const totalRecordingTime = [hours, mins, secs];\n        displayTime(totalRecordingTime);\n        intervalID = setInterval(() => tick(totalRecordingTime), 1000);\n      } catch (NotYetLoadedException) {\n        console.error(NotYetLoadedException);\n      }\n    });\n    showTime();\n    setRemainingWords(0);\n    console.log(remainingWords);\n    // setRemainingWords(totalWords - wordsCompleted)\n  }, [])\n\n  const displayTime = time => {\n    try {\n      document.getElementById('total_time_elapsed').innerText =\n        'Total Recording Time—' +\n        ('0' + time[0]).slice(-2) +\n        ':' +\n        ('0' + time[1]).slice(-2) +\n        ':' +\n        ('0' + time[2]).slice(-2);\n    } \n    catch(NotYetLoadedException) {\n      //\n    }\n  }\n\n  let time = undefined\n  const tick = initTime => {\n    if (!time) {\n      time = initTime;\n    } \n    // console.log('ticking')\n    let hour = time[0];\n    let min = time[1];\n    let sec = time[2];\n\n    if (sec < 60) {\n      sec += 1;\n    }\n    if (sec === 60) {\n      min += 1;\n      sec = 0;\n    }\n    if (min === 60) {\n      hour += 1;\n      min = 0;\n    }\n    time = [hour, min, sec];\n    // console.log(time);\n    try {\n      displayTime(time);\n    } catch (SomeError) {\n      console.error(SomeError);\n    }\n  };\n\n  const getSeconds = date => \n    date.getHours() * 60 * 60 +\n    date.getMinutes() * 60 +\n    date.getSeconds();\n\n  const helper_showTime = () => {\n    // console.log('asking for start time now');\n    props.socket.emit('client: ask for start time');\n  };\n\n  const showTime = () => {\n    try {\n      document.getElementById('showTimeBtn').click();\n      document.getElementById('showTimeBtn').disabled = true;\n    } catch (NotYetLoadedException) {\n      //\n    }\n  };\n\n\n\n  return (\n    <div>\n      <ProgressBar\n        curr={props.recordedProgress}\n        total={props.data_length - 1}\n        align={'left'}\n        strokeWidth={3}\n      />\n      <pre id='total_time_elapsed'>00:00:00</pre>\n      <pre id=\"total_words\"> / {props.totalWords}</pre>\n      <pre id='connection_status'></pre>\n      <pre id='num_files_saved'></pre>\n      {i++}\n      <pre\n        hidden={\n          props.recordGreenLight ||\n          props.helper_checkIfMobileView() ||\n          !qs('name')\n        }\n        className='warning_message'\n      >\n        Please Click Reset!\n      </pre>\n      <button\n        onClick={helper_showTime}\n        id='showTimeBtn'\n        className='hidden_button'\n      ></button>\n    </div>\n  );\n}\n\nStatus.propTypes = {\n  recordedProgress: PropTypes.number.isRequired,\n  data_length: PropTypes.number.isRequired,\n  recordGreenLight: PropTypes.bool.isRequired,\n  helper_checkIfMobileView: PropTypes.func.isRequired,\n  socket: PropTypes.object.isRequired,\n  totalWords: PropTypes.number.isRequired\n\n};","/**\n * **Based on: http://www.cssscript.com/demo/pure-css-css3-smooth-toggle-switch/**\n */\n\nimport React, { useEffect }from 'react'\nimport './toggle.scss'\nimport PropTypes from 'prop-types';\n\n/**\n * \n * @param {*} props \n */\nexport default function Toggle(props) {\n  useEffect(() => {\n    const toggle = document.getElementById(props.id);\n    try {\n      toggle.addEventListener('change', () => {\n        props.onChangeFunc(toggle.checked);\n      });\n      // document.getElementsByClassName('switch-wrapper')[0].addEventListener('mouseover', () => {\n      //   document.getElementsByClassName('inset-toggle')[0].classList.add('switch-hover');\n      //   console.log('hovered over')\n      // });\n      // document.getElementsByClassName('switch-wrapper')[0].addEventListener('mouseout', () => {\n      //   document.getElementsByClassName('inset-toggle')[0].classList.remove('switch-hover');\n      //   console.log('hovered out')\n      // })\n    } catch (NotYetLoadedException) {\n      //\n    }\n  }, [])\n  return (\n    <div className=\"switch-wrapper\">\n      <div className=\"switch\">\n      <div className=\"invisible_pushdown\"></div>\n        <input type=\"checkbox\" name=\"toggle\" id={props.id}/>\n        <label htmlFor=\"toggle\" className=\"inset-toggle\"><i>🕷</i></label>\n      </div>  \n    </div>\n  )\n}\n\nToggle.propTypes = {\n  id: PropTypes.string.isRequired,\n  onChangeFunc: PropTypes.func.isRequired\n}","import React from 'react'\nimport './Checkmark.scss'\n\n/**\n * **Based on: https://codepen.io/ashleygalante/pen/nwoKh**\n */\nexport default function Checkmark() {\n  return (\n    <div className=\"checkmark\">\n      <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 161.2 161.2\" enableBackground=\"new 0 0 161.2 161.2\" xmlSpace=\"preserve\">\n        <path className=\"path\" fill=\"none\" stroke=\"#FFBA49\" strokeMiterlimit=\"10\" d=\"M425.9,52.1L425.9,52.1c-2.2-2.6-6-2.6-8.3-0.1l-42.7,46.2l-14.3-16.4\n          c-2.3-2.7-6.2-2.7-8.6-0.1c-1.9,2.1-2,5.6-0.1,7.7l17.6,20.3c0.2,0.3,0.4,0.6,0.6,0.9c1.8,2,4.4,2.5,6.6,1.4c0.7-0.3,1.4-0.8,2-1.5\n          c0.3-0.3,0.5-0.6,0.7-0.9l46.3-50.1C427.7,57.5,427.7,54.2,425.9,52.1z\"/>\n        <circle className=\"path\" fill=\"none\" stroke=\"#FFBA49\" strokeWidth=\"4\" strokeMiterlimit=\"10\" cx=\"80.6\" cy=\"80.6\" r=\"62.1\"/>\n        <polyline className=\"path\" fill=\"none\" stroke=\"#FFBA49\" strokeWidth=\"6\" strokeLinecap=\"round\" strokeMiterlimit=\"10\" points=\"113,52.8 \n          74.1,108.4 48.2,86.4 \"/>\n        <circle className=\"spin\" fill=\"none\" stroke=\"#FFBA49\" strokeWidth=\"4\" strokeMiterlimit=\"10\" strokeDasharray=\"12.2175,12.2175\" cx=\"80.6\" cy=\"80.6\" r=\"73.9\"/>\n      </svg>\n      <p id=\"complete_message\">🔥 恭喜您完成 🔥</p>\n    </div>\n  )\n}\n","import React from 'react'\nimport './Fireworks.scss'\n\nexport default function Fireworks() {\n  return (\n    <div className=\"pyro\">\n      <div className=\"before\"></div>\n      <div className=\"after\"></div>\n      </div>\n  )\n}\n","import React from 'react'\nimport Checkmark from './Checkmark/Checkmark'\nimport Fireworks from './Fireworks/Fireworks'\nimport './CompleteAnimation.scss'\n\nexport default function CompleteAnimation() {\n  return (\n    <div className=\"CompleteAnimationBG\">\n      <Fireworks />\n      <Checkmark />\n    </div>\n  )\n}","/* eslint-disable no-console */\nimport React from 'react';\nimport update from 'react-addons-update'\nimport qs from '../utils/qs'\nimport cogoToast from 'cogo-toast';\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport io from 'socket.io-client';\n\n// scss\nimport './App.scss';\n\n// components\nimport CameraList from '../components/CameraList/CameraList';\nimport Tester from '../components/Tester/Tester';\nimport DataCollection from '../components/Table/DataCollection';\nimport Modal from '../components/Modal'\nimport Status from '../components/Status'\nimport Toggle from '../components/Toggle/Toggle'\nimport CompleteAnimation from '../components/CompleteAnimation/CompleteAnimation'\n\n// data\nimport sentences from '../assets/data/sentences.txt';\n// import sentences from '../assets/data/sentences-english-test.txt';\n\nimport ip_util from '../utils/ip'\n\nclass App extends React.Component {\n  per_page = 8;\n  curr_index = qs('sentence_index');\n  ip_address = 'http://192.168.0.103:5000'\n  /**\n   * Constructor for main react App Component\n   * @param {object} props \n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      requiredNumCams: 8,\n      curr_sentence: '',\n      curr_sentence_index: this.curr_index ? Number(this.curr_index) : 0,\n      data: [],\n      per_page: this.per_page,\n      curr_page: this.curr_index ? Math.floor(Number(this.curr_index) / this.per_page) + 1 : 1,\n      computerStatus: {},\n      recordGreenLight: false,\n      computerID: -1,\n      numFilesSavedTotal: 0,\n      numFilesSavedInd: 0,\n      connectedOrderMap: {},\n      recordedProgress: 0,\n      addCamState: false,\n      totalTime: [],\n      startTime: undefined,\n      totalWords: 0,\n      remainingWords: 0,\n      debugMode: false,\n      socket: io(this.ip_address),\n      ip: this.ip_address,\n      connectedToServer: false,\n      detectedNumCams: 0\n    };\n  }\n\n  /**\n   * **ReactJS Framework Method**  \n   */\n  render() {\n    return (\n      <Router>\n        <Route path='/' exact component={this.main_userView} />\n        <Route path='/admin' exact component={this.main_adminView} />\n        <Route path='/playground' exact component={this.main_playground} />\n        {this.comp_modals()}\n        {this.comp_completeAnimation()}\n      </Router>\n    );\n  }\n\n  /**\n   * **ReactJS Framework Method**\n   */\n  componentDidMount() {\n    // console.log(ip.getIP());\n    console.log(ip_util);\n    this.helper_emitInitialSocketMessages();\n    this.readTextFile(sentences);\n    this.initSocketListeners();\n    try {\n      document.getElementById('debug_mode').checked = this.state.requiredNumCams === 1\n    } catch (NotYetLoadedException) {\n      //\n    }\n    // this.pingServer();\n    window.addEventListener('keydown', this.handler_keydown);\n    window.addEventListener('keyup', this.handler_keyup);\n  }\n\n  /**\n   * **ReactJS Framework Method** \n   */\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handler_keydown);\n  }\n\n  /**\n   * **Component: User Page** \n   * Renders components for desktop view\n   */\n  main_userView = () => {\n    return (\n      <div className='container'>\n        {this.comp_debug()}\n        {this.comp_tester()}\n        {this.comp_userResearchHeader()}\n        <div className='contents'>\n          <div className='left_panel'>{this.comp_dataCollection()}</div>\n          <div className='right_panel cameras_container'>\n            {this.comp_cameraList()}\n          </div>\n          <div className=''></div>\n        </div>\n      </div>\n    );\n  };\n\n  /**\n   * **Component: Admin Page**\n   * Renders components for mobile view\n   */\n  main_adminView = () => {\n    return <div style={{textAlign: 'center'}}>{this.comp_debug()}</div>;\n  };\n\n  /** \n   * **Component: PlaygroundPage**\n   * Renders components for experimental purposes\n   */\n\n   main_playground = () => {\n     return (\n       <Toggle />\n     )\n   }\n  /**\n   * **Component: Animation for Study Completion**\n   */\n  comp_completeAnimation = () => {\n    if (this.state.recordedProgress + 1 === this.state.data.length) {\n      try {\n        document.getElementById('testerNextBtn').disabled = true;\n      } catch(NotYetLoadedException) {\n        //\n      }\n      return (\n        <CompleteAnimation />\n      )\n    }\n  }\n\n  // * COMPONENT * //\n  comp_dataCollection = () => {\n    return (\n      <DataCollection\n        data={this.state.data}\n        updateName={this.updateName}\n        curr_sentence={this.state.curr_sentence}\n        socket={this.state.socket}\n        curr_sentence_index={this.state.curr_sentence_index}\n        curr_page={this.state.curr_page}\n        updatePage={this.updatePage}\n      />\n    );\n  };\n\n  // * COMPONENT * //\n  comp_tester = () => {\n    return (\n      <Tester\n        updateSentence={this.updateSentence}\n        data={this.state.data}\n        curr_sentence_index={this.state.curr_sentence_index}\n        data_length={this.state.data.length}\n        first_sentence={this.state.data[this.state.curr_sentence_index]}\n        curr_sentence={this.state.curr_sentence}\n        socket={this.state.socket}\n        recordGreenLight={\n          this.state.recordGreenLight &&\n          this.state.numFilesSavedTotal % this.state.requiredNumCams === 0\n        }\n        numFilesSaved={this.state.numFilesSavedTotal}\n        numCams={this.state.requiredNumCams}\n        updateGreenLightStatus={this.updateGreenLightStatus}\n        recordedProgress={this.state.recordedProgress}\n        updateRecordProgress={this.updateRecordProgress}\n        totalTime={this.state.totalTime}\n        updateTotalTime={this.updateTotalTime}\n        showFileSavingLoader={this.disp_showFileSavingLoader}\n      />\n    );\n  };\n\n  // * COMPONENT * //\n  comp_userResearchHeader = () => {\n    return (\n      <div>\n        <br />\n        <h1>For User Researcher Purpose Only</h1>\n        <hr />\n      </div>\n    );\n  };\n\n  // * COMPONENT * //\n  comp_cameraList = () => {\n    return (\n      <CameraList\n        socket={this.state.socket}\n        computerID={this.state.computerID}\n        computerStatus={this.state.computerStatus}\n        updateConnectionStatus={this.updateConnectionStatus}\n        addCamState={this.state.addCamState}\n        toggleCamState={this.helper_toggleCamState}\n        updateDetectedNumCams={this.updateDetectedNumCams}\n      />\n    );\n  };\n\n  // * COMPONENT * //\n  comp_status = () => {\n    return (\n      <Status\n        totalWords={this.state.totalWords}\n        data_length={this.state.data.length}\n        recordedProgress={this.state.recordedProgress}\n        helper_checkIfMobileView={this.helper_checkIfMobileView}\n        recordGreenLight={this.state.recordGreenLight}\n        socket={this.state.socket}\n      />\n    );\n  };\n\n  // * COMPONENT * //\n  comp_modals = () => {\n    return (\n      <div>\n        <Modal\n          modalID={'resetProgressModal'}\n          socket={this.state.socket}\n          title={'Are you sure?'}\n          message={'Resetting progress will be permanent.'}\n          buttonCancel={'Cancel'}\n          buttonConfirm={'Reset Progress'}\n          buttonConfirmId={'resetProgressBtn'}\n          toast={'Progress reset'}\n          confirmFunc={this.admin_resetProgress}\n        />\n        <Modal\n          modalID={'overallStatus'}\n          socket={this.state.socket}\n          title={'Status'}\n          onLoadFunc={this.getStatus}\n          message={this.comp_status()}\n          buttonConfirm={'Hide'}\n        />\n      </div>\n    );\n  };\n\n  \n\n  // * COMPONENT * //\n  comp_debug = () => {\n    return (\n      <div className=\"debug-group\">\n        <button\n          onClick={() => {\n            this.helper_toggleModal('overallStatus');\n            this.getStatus();\n          }}\n          className='debug_button'\n        >\n          Status\n        </button>\n        <button\n          id='resetCamsBtn'\n          className='debug_button'\n          onClick={this.admin_resetCams}\n        >\n          Reset Cams\n        </button>\n        <button\n          className='debug_button'\n          onClick={() => {\n            this.helper_toggleModal('resetProgressModal');\n          }}\n        >\n          Reset Progress\n        </button>\n        \n        \n        <div className=\"debug_inline_group\">\n          <label className=\"debug_label\">Debug Mode: </label>\n          <Toggle id='debug_mode' onChangeFunc={this.handler_debugToggle} />\n        </div>\n\n        <div className=\"debug_inline_group\">\n          <label htmlFor=\"\" className=\"debug_label\">Server: </label>\n          <span className=\"server_status\"></span>\n          <input id=\"inputServerIP\" type=\"text\" className=\"debug_text_input\" value={this.state.ip} onChange={this.handler_IPOnChange}/>\n        </div>\n        <button className='debug_button' onClick={this.handler_useThisCompAsServer()}>🖥</button>\n\n        <div className=\"debug_inline_group\">\n          <label htmlFor=\"\" className=\"debug_label\">Cams: </label>\n          <input type=\"text\" className=\"debug_text_input debug_sm_input\" value={this.state.detectedNumCams} readOnly/>\n        </div>\n\n\n        {/* <button className='debug_button' onClick={this.admin_refreshAll}>\n          Refresh All\n        </button> */}\n\n        <button\n          onClick={this.disp_showFileSavedMessage}\n          id='showSavedFilesBtn'\n          className='hidden_button'\n        ></button>\n\n        {/* <pre hidden={this.state.numCams === 8}>\n          debug mode, remember to change num cams back to 8\n        </pre> */}\n      </div>\n    );\n  };\n\n  // * UTILITY * //\n  readTextFile(file) {\n    return fetch(file)\n      .then(response => response.text())\n      .then(text => {\n        this.setState({ data: text.split('\\n') }, () => {\n          let curr_sentence = qs('sentence_index')\n            ? this.state.data[Number(qs('sentence_index'))]\n            : this.state.data[0];\n          this.setState({ curr_sentence }, () => {\n            // console.log(this.state.curr_sentence)\n          });\n          this.setState({\n            totalWords: this.state.data.reduce((sum, sentence) => sum + sentence.length, 0)\n          })\n        });\n      });\n  }\n\n  /**\n   * * UPDATE * \n   * \n   */\n  updateFilesSaved = numFiles => {\n    const successMessage =\n      numFiles % this.state.requiredNumCams === 0\n        ? ' (successful)'\n        : ' (not all cams saved!!)';\n    this.setState({\n      numFilesSavedTotal: numFiles\n    });\n    try {\n      document.getElementById('num_files_saved').innerHTML =\n        'Total Files Saved: ' + numFiles + successMessage;\n    } catch (NotYetLoadedException) {\n      // console.error(NotYetLoadedException);\n    }\n  };\n\n  handler_useThisCompAsServer = () => {\n\n  }\n\n  handler_IPOnChange = e => {\n    this.setState({ip: e.target.value})\n  }\n  handler_debugToggle = debugMode => {\n    this.setState({debugMode}, () => {\n      if (debugMode) {\n        this.setState({requiredNumCams: 1});\n      } else {\n        this.setState({requiredNumCams: 8});\n      }\n    });\n  }\n\n  handler_fileSaveSuccess = numFiles => {\n    this.updateFilesSaved(numFiles);\n    this.setState({\n        numFilesSavedInd: this.state.numFilesSavedInd + 1\n      },\n      () => {\n        console.log(\n          'this occured: ' + this.state.numFilesSavedInd + ' times.'\n        );\n        try {\n          document.getElementById('testerNextBtn').disabled = true;\n        } catch (NotYetLoadedException) {\n          //\n        }\n        if (this.state.numFilesSavedInd === this.state.requiredNumCams) {\n          console.log('correct number of files saved');\n          try {\n            document.getElementById('showSavedFilesBtn').click();\n            document.getElementById('showSavedFilesBtn').disabled = true;\n            this.setState({\n                numFilesSavedInd: 0\n              },\n              () => {\n                cogoToast.success(\n                  this.style_makeEmojiToastLayout(\n                    ['视频已成功保存', '可继续录'],\n                    '🔥'\n                  ), {\n                    hideAfter: 2\n                  }\n                );\n              }\n            );\n\n            this.updateGreenLightStatus(true);\n          } catch (Exception) {\n            console.error(Exception);\n          }\n          try {\n            if (this.helper_checkIfMobileView()) {\n              // console.log('here here??');\n              cogoToast.info(\n                'Completed @ Sentence [' + this.state.recordedProgress + ']', {\n                  hideAfter: 0.75\n                }\n              );\n            }\n          } catch (NotYetLoadedException) {\n            console.error(NotYetLoadedException);\n          }\n        }\n      }\n    );\n  }\n\n  updateDetectedNumCams = detectedNumCams => {\n    this.setState({ detectedNumCams });\n    try {\n      document.getElementsByClassName('debug_sm_input')[0].className += (this.state.detectedNumCams > 0) ? \" serverPlaceholderConnected\" : \"\"\n    } catch (NotYetLoadedException) {\n      //\n    }\n  }\n\n  /** \n   * * UPDATE *\n   * Updates the state computerID with param id\n   * @param {string} id \n  */\n  updateCompID = id => {\n    const status = {};\n    this.setState({ computerID: id });\n    status[this.state.computerID] = [];\n    this.setState({ computerStatus: status }, () => {\n      // console.log(\"init computer status\", this.state.computerStatus);\n    });\n  };\n\n  /**\n   * * STYLE *\n   * Takes a string and finds a substring and returns a stylized version of it,\n   * specifically to add the 🖥 icon in front of the ID.\n   * @param {string} str The full string\n   * @param {string} find The particular substring to find\n   * @returns {string} The stylized string\n   */\n  style_addThisCpuIcon = (str, find) => {\n    var re = new RegExp(find, 'g');\n    return str.replace(re, '🖥: ' + find);\n  };\n\n  style_makeEmojiToastLayout = (msg, emoji) => {\n    return (\n      <div className='cogo-toast'>\n        <div className='cogo-toast-emoji-left'> {emoji}</div>\n        <div>\n          {msg[0]}\n          <br />\n          {msg[1]}\n        </div>\n        <div className='cogo-toast-emoji-right'> {emoji}</div>\n      </div>\n    );\n  };\n\n  ref_hideLoader = undefined;\n  disp_showFileSavingLoader = () => {\n    this.ref_hideLoader = cogoToast.loading(\n      this.style_makeEmojiToastLayout(['视频正在保存', '请耐心等待'], '⌛️')\n    );\n    // setTimeout(hideLoader, 2000);\n    // hideLoader();\n    // this.setState({ hideLoader }, () => {\n    //   console.log(hideLoader);\n    // });\n  };\n\n  disp_showFileSavedMessage = () => {\n    try {\n      this.ref_hideLoader();\n    } catch (NotOnPageError) {\n      //\n    }\n  };\n\n  /**\n   * **Socket Listeners**\n   * Adds socket listeners to the page to respond to messages sent\n   * from server\n   */\n  initSocketListeners = () => {\n    this.state.socket.on('server: online', () => {\n      console.log('server online!')\n      document.getElementsByClassName('server_status')[0].classList.add('server_online');\n      document.getElementById('inputServerIP').classList.add('serverPlaceholderConnected');\n    });\n\n    this.state.socket.on('server: disconnected', () => {\n      this.setState({ connectedToServer: false}, () => {\n        document.getElementsByClassName('server_status')[0].classList.remove('server_online');\n        document.getElementById('inputServerIP').classList.remove('serverPlaceholderConnected')\n      });\n    });\n\n    this.state.socket.on('server: connected', computerID => {\n      console.log('detected server connected')\n      this.setState({ connectedToServer: true, computerID}, () => {\n        document.getElementsByClassName('server_status')[0].classList.add('server_online');\n        document.getElementById('inputServerIP').classList.add('serverPlaceholderConnected')\n      });\n    });\n    \n    this.state.socket.on('server: connected sync id', id => {\n      if (this.updateCompID) this.updateCompID(id);\n      this.updateCompID = null;\n    });\n\n    this.state.socket.on('server: reset cams', () => {\n      this.updateGreenLightStatus(true);\n    });\n\n    this.state.socket.on('server: response for connection status', status => {\n      try {\n        document.getElementById(\n          'connection_status'\n        ).innerHTML = this.style_addThisCpuIcon(\n          JSON.stringify(status, null, 2),\n          this.state.computerID\n        );\n      } catch (NotOnPageError) {\n        //\n      }\n    });\n\n    this.state.socket.on('server: response for progress', progress => {\n      this.setState({ recordedProgress: progress ? progress : 0 });\n    });\n\n    this.state.socket.on('server: response for numFilesSaved', numFiles => {\n      this.updateFilesSaved(numFiles);\n    });\n\n    this.state.socket.on('server: save files successful', numFiles => {\n      this.handler_fileSaveSuccess(numFiles);\n    });\n\n    this.state.socket.on('server: computer connected order', connectedOrder => {\n      this.setState({\n        connectedOrderMap: update(this.state.connectedOrderMap, {\n          $merge: connectedOrder\n        })\n      });\n    });\n\n    const refreshRates = [0, 666, 1332];\n    this.state.socket.on('server: refresh all', () => {\n      const conectedOrderNum = this.state.connectedOrderMap[\n        this.state.computerID\n      ];\n      const indexRefresh = conectedOrderNum % 3;\n      const time = refreshRates[indexRefresh];\n      setTimeout(() => {\n        window.location.reload(false);\n      }, time);\n    });\n  };\n\n  async pingServer() {\n    try {\n      const serverID = this.state.socket.io.opts.hostname;\n      const response = await fetch(serverID, { mode: 'no-cors' });\n      if (!response.ok) {\n        console.error('no response from server');\n      } else {\n        console.log('connection successful');\n      }\n    } catch (ServerPingFailedException) {\n      console.error(ServerPingFailedException);\n    }\n  }\n\n  /**\n   * **Update: Sentence** \n   * Sent as a prop to components to update app-level state of \n   * curr_sentence_index, and updates server with new index. It also updates \n   * url query without refreshing to reflect current index.\n   * @param {string} curr_sentence\n   */\n  updateSentence = curr_sentence => {\n    if (curr_sentence === '$next') {\n      this.setState({curr_sentence_index: this.state.curr_sentence_index + 1},\n        () => {\n          this.updateSentence(\n            this.state.data[this.state.curr_sentence_index]\n          );\n          this.state.socket.emit('client: update sentence_index', {\n            name: qs('name'),\n            curr_sentence_index: this.state.curr_sentence_index\n          });\n        }\n      );\n    } else if (curr_sentence === '$prev') {\n      this.setState(\n        {\n          curr_sentence_index: Math.max(this.state.curr_sentence_index - 1, 0)\n        },\n        () => {\n          this.updateSentence(this.state.data[this.state.curr_sentence_index]);\n          this.state.socket.emit('client: update sentence_index', {\n            name: qs('name'),\n            curr_sentence_index: this.state.curr_sentence_index\n          });\n        }\n      );\n    } else {\n      window.history.pushState(\n        null,\n        null,\n        '?name=' +\n          qs('name') +\n          '&sentence_index=' +\n          this.state.curr_sentence_index\n      );\n      // console.log(curr_sentence);\n      this.setState({\n        curr_sentence,\n        curr_page:\n          Math.floor(\n            Number(this.state.curr_sentence_index) / this.state.per_page\n          ) + 1\n      });\n    }\n  };\n\n  updatePage = new_page => {\n    if (new_page === 0) {\n      // do nothing\n    }\n    console.log('update page', new_page);\n    this.setState({\n      curr_page: new_page >= 1 ? new_page : 1\n    });\n  };\n\n  updateRecordProgress = curr_sentence_index => {\n    // { <sentence_index> : <bool: recorded/not> }\n    this.setState(\n      {\n        recordedProgress: curr_sentence_index\n      },\n      () => {\n        this.state.socket.emit(\n          'client: update recording progress',\n          curr_sentence_index\n        );\n      }\n    );\n  };\n\n  updateConnectionStatus = recordingStatus => {\n    if (this.state.computerStatus[this.state.computerID]) {\n      const status = {};\n      status[this.state.computerID] = recordingStatus;\n      this.setState({ computerStatus: status }, () => {\n      });\n      this.state.socket.emit('client: update recording status', status);\n    }\n    this.getStatus();\n  };\n\n  updateGreenLightStatus = bool => {\n    this.setState({ recordGreenLight: bool });\n  };\n\n  updateTotalTime = time => {\n    this.setState({ totalTime: time });\n  };\n\n  getStatus = () => {\n    this.state.socket.emit('client: ping for connection status');\n    this.state.socket.emit('client: ping for numFilesSaved');\n    this.state.socket.emit('client: ping for progress');\n  };\n\n  admin_resetCams = () => {\n    // this.state.socket.emit('client: stop cams');\n    this.updateGreenLightStatus(true);\n    this.state.socket.emit('client: reset cams');\n    try {\n      document.getElementById('addCamBtn').click();\n    } catch (NotYetLoadedException) {\n      //\n    }\n    this.state.socket.emit('client: dummy vid, do not save');\n    // cogoToast.info('Cams are reset', { hideAfter: 0.3 });\n\n    const resetBtn = document.getElementById('resetCamsBtn');\n    if (!resetBtn.className.includes('btn-active')) {\n      document.getElementById('resetCamsBtn').className += (' btn-active');\n    }\n  };\n\n  admin_refreshAll = () => {\n    this.state.socket.emit('client: refresh all');\n  };\n\n  admin_resetProgress = () => {\n    this.state.socket.emit('client: update recording progress', 0);\n    this.state.socket.emit('client: delete total time');\n    this.state.socket.emit('client: reset total files');\n    this.state.socket.emit('client: save total start time', new Date());\n    window.location = window.location.origin;\n    this.state.socket.emit('client: save total time', [0, 0, 0]);\n  };\n\n  helper_emitInitialSocketMessages = () => {\n    if (!this.helper_checkIfMobileView) {\n      this.state.socket.emit('client: update sentence_index', {\n        name: qs('name'),\n        curr_sentence_index: this.state.curr_sentence_index\n      });\n    } else {\n      this.state.socket.emit('client: ask for recording status');\n    }\n    this.state.socket.emit('client: check for progress');\n    this.state.socket.emit('client: ask for sync id');\n  }\n\n  helper_toggleModal = id => {\n    document.getElementById(id).click();\n  };\n\n  helper_checkIfMobileView = () => {\n    return window.location.href.includes('mobile');\n  };\n\n  helper_toggleCamState = () => {\n    this.setState({ addCamState: !this.state.addCamState });\n  };\n\n  handler_keyup() {\n    for (const btn of document.getElementsByClassName('debug_button')) {\n      btn.classList.remove('btn-active');\n    }\n  }\n\n  handler_keydown = (event) => {\n    let key = event.key;\n    if ([' ', 'ArrowLeft', 'ArrowRight', 'Escape', 'Enter', 's'].includes(key)) {\n      try {\n        if (key === ' ') {\n          document.getElementById('testerRecordBtn').click();\n          event.preventDefault();\n        } else if (key === 'ArrowLeft') {\n          document.getElementById('testerPrevBtn').click();\n          event.preventDefault();\n        } else if (key === 'ArrowRight') {\n          console.log('detected right arrow key');\n          document.getElementById('testerNextBtn').click();\n          event.preventDefault();\n        } else if (key === 'Escape') {\n          document.getElementById('resetCamsBtn').click();\n          event.preventDefault();\n        } else if (key === 'Enter') {\n          console.log('detected enter key');\n          if (document.getElementsByClassName('modali-button-destructive')[0]) {\n            document.getElementsByClassName('modali-button-destructive')[0].click();\n            this.admin_resetProgress();\n          }\n          const inputServerIP = document.getElementById('inputServerIP');\n          if (document.activeElement === inputServerIP) {\n            this.state.socket.disconnect();\n            document.getElementsByClassName('server_status')[0].classList.remove('server_online');\n            document.getElementById('inputServerIP').classList.remove('serverPlaceholderConnected');\n            console.log(inputServerIP.value);\n            this.setState({socket: io(inputServerIP.value), ip: inputServerIP.value});\n            this.state.socket.emit('client: check server connection')\n            event.preventDefault();\n          }\n        } else if (key === 's') {\n          if (document.activeElement !== document.getElementById('name')) this.helper_toggleModal('overallStatus');\n        }\n      } catch (NotYetLoadedException) {\n        console.error(NotYetLoadedException);\n      }\n    }\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App.js';\n\nReactDOM.render(<App />, document.getElementById('root'));","module.exports = __webpack_public_path__ + \"static/media/collapse-chevron.126ea5d6.svg\";","module.exports = __webpack_public_path__ + \"static/media/expand-chevron.fd7409a7.svg\";","module.exports = __webpack_public_path__ + \"static/media/beg.565428a5.svg\";","module.exports = __webpack_public_path__ + \"static/media/end.b927e101.svg\";","module.exports = __webpack_public_path__ + \"static/media/sentences.16736696.txt\";","const os = require('os');\nconst ifaces = os.networkInterfaces();\n\nconst getIP = () => {\n  console.log('getting ip...')\n  let address = undefined;\n  Object.keys(ifaces).forEach(function (ifname) {\n    ifaces[ifname].forEach(function (iface) {\n      if ('IPv4' !== iface.family || iface.internal !== false) {\n        // skip over internal (i.e. 127.0.0.1) and non-ipv4 addresses\n        return;\n      }\n      if (ifname === 'en0') {\n        address = iface.address;\n      }\n    });\n  });\n  return address;\n}\n\nmodule.exports = { getIP }"],"sourceRoot":""}