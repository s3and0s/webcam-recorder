{"version":3,"sources":["utils/qs.js","components/Webcam/Webcam.js","components/CameraList/CameraList.js","components/NameField/NameField.js","components/Tester/InProcessScreen.js","components/ProgressBar.js","components/Tester/Tester.js","components/Table/TableHeader.js","components/Table/TableRow.js","components/Table/TableData.js","components/Table/PageNum.js","components/Table/PageInput.js","components/Table/TableFooter.js","components/Table/Table.js","components/Table/DataCollection.js","components/Modal.js","components/Status.js","components/Toggle/Toggle.js","components/CompleteAnimation/Checkmark/Checkmark.js","components/CompleteAnimation/Fireworks/Fireworks.js","components/CompleteAnimation/CompleteAnimation.js","app/App.js","index.js","assets/svg/collapse-chevron.svg","assets/svg/expand-chevron.svg","assets/svg/beg.svg","assets/svg/end.svg","assets/data/sentences.txt","utils/ip.js","assets/svg/up-chevron.svg","assets/svg/down-chevron.svg"],"names":["qs","id","parsedUrl","URL","window","location","href","searchParams","has","get","Webcam","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isRecording","recorder","videoSrc","videoEle","startTime","video","React","createRef","today","Date","getFullYear","getMonth","getDate","getTime","react_default","a","createElement","className","onClick","startRecording","controls","autoPlay","playsInline","muted","ref","props","videoRef","name","Component","CameraList","_useState","useState","_useState2","slicedToArray","availableCams","setAvailableCams","_useState3","_useState4","recordingStatus","setRecordingStatus","_useState5","_useState6","availableMics","setAvailableMics","_useState7","_useState8","pluggedInDevices","setPluggedInDevices","helper_extractRelevantCamInfo","device","camera_info","deviceId","label","groupId","initCams","navigator","mediaDevices","enumerateDevices","then","devices","videoDevices","micDevices","numCams","num","reduce","accumulator","kind","updateDetectedNumCams","helper_getNumCams","console","log","map","toLowerCase","includes","indexOf","push","helper_addToMicDevices","videodevices","devicePrior","filter","cam","mic_info","helper_addToVideoDevices","document","getElementById","click","disabled","catch","err","message","Array","prototype","diff","i","startFaceTimeCam","faceTimeDevice","defaultMic","cogoToast","success","hideAfter","hide","addNewCamMic","resolve","undefined","Promise","checkIfMac","Exception","allDevices","detectedTwoDevices","idAoni","newPluggedInID","length","warn","_getNewMicCam","newCam","newMic","error","getNewMicCam","_getNewMicCam2","newMicID","newCamDevice","temp","substring","initCamsDummy","stopAllCams","startAllCams","getUserMedia","audio","exact","frameRate","ideal","width","height","camera","RecordRTC","recorderType","MediaStreamRecorder","type","desiredSampRate","numberOfAudioChannels","disableLogs","getState","current","srcObject","NotYetLoadedException","triggerRecordStatusUpdate","dummy","stopRecording","blob","getBlob","socket","emit","sentence_index","camera_id","updateConnectionStatus","resumeAllCams","_unused","resumeRecording","useEffect","addCamState","on","addCam","comp_camsList","components_Webcam_Webcam","key","debug","debugControls","style","marginTop","renderCams","NameField","saveName","value","url_state","history","pushState","updateTesterContents","updateGreenLightStatus","detectEnter","e","which","placeholder","onKeyPress","autoFocus","InProcessScreen","recording","setRecordState","done_recording","setDoneRecording","reset_state","reset","nameSet","setName","updateSentence","data","getRecordState","curr_sentence_index","showFileSavingLoader","stopTimer","updateRecordProgress","record","startTimer","displaySentenceToBeRead","debugMode","recordedYet","recordedProgress","disableNextButtonIfCurrNotRead","emoji","sentence","line1","line2","msg","makeEmojiLayout","recordedClassName","fontSize","recordTimeEle","recordTimeMsg","innerText","transition","color","recordGreenLight","numFilesSaved","connectedToServer","text","data_length","NameField_NameField_NameField","getContents","ProgressBar","percent","curr","total","toFixed","alignmentStyle","align","margin","es","strokeWidth","trailWidth","strokeColor","trailColor","Tester","intervalID","setIntervalID","clearInterval","innerHTML","time","setInterval","hour","min","sec","slice","createInterval","curr_sentence","hidden","TableHeader","TableRow","getClassOfRowItem","read","index","TableData","updateDataOnPageChange","_this2","page","curr_page","max_per_page","beg","end","rowItems","TableRow_TableRow","PageNum","selected","updatePage","PageInput","handleChange","event","Number","target","handleSubmit","preventDefault","onSubmit","htmlFor","onChange","TableFooter","page_num","mid_point","Math","floor","max_page","total_data","nums_list","from","x","PageNum_PageNum","PageInput_PageInput","src","alt","prev","next","Table","TableHeader_TableHeader","TableData_TableData","TableFooter_TableFooter","DataCollection","Table_Table_Table","Modal","_useModali","useModali","animated","title","buttons","dist_default","Button","buttonCancel","isStyleCancel","toggleCompleteModal","buttonConfirm","isStyleDestructive","confirmFunc","toast","info","_useModali2","completeModal","onLoadFunc","getElementsByClassName","modalID","Status","Infinity","remainingWords","setRemainingWords","startTimeTotalSecs","getSeconds","diffSecs","hours","mins","totalRecordingTime","displayTime","tick","showTime","initTime","SomeError","date","getHours","getMinutes","totalWords","helper_checkIfMobileView","Toggle","toggle","addEventListener","onChangeFunc","checked","updateDebugMode","Checkmark","version","xmlns","xlink","y","viewBox","enableBackground","xmlSpace","fill","stroke","strokeMiterlimit","d","cx","cy","r","strokeLinecap","points","strokeDasharray","Fireworks","CompleteAnimation","Fireworks_Fireworks","Checkmark_Checkmark","App","per_page","curr_index","ip_address","showNoCamsRef","hideServerOfflineRef","helper_addHoverEventListeners","debugHoverArea","bottomHoverArea","handler_hoverMouseOutDebug","handler_hoverMouseOverDebug","handler_hoverMouseOutBottom","handler_hoverMouseOverBottom","helper_removeHoverEventListeners","removeEventListener","classList","remove","helper_toggleHideDebug","helper_toggleHideBottom","main_userView","comp_debug","comp_tester","down_chevron","comp_dataCollection","comp_cameraList","main_adminView","textAlign","main_playground","comp_debugHover","comp_completeAnimation","CompleteAnimation_CompleteAnimation","DataCollection_DataCollection","updateName","components_Tester_Tester","first_sentence","numFilesSavedTotal","requiredNumCams","totalTime","updateTotalTime","disp_showFileSavingLoader","computerID","computerStatus","toggleCamState","helper_toggleCamState","admin_resetCams","comp_status","comp_modals","buttonConfirmId","admin_resetProgress","getStatus","setState","helper_toggleModal","handler_debugToggle","detectedNumCams","readOnly","ip","handler_IPOnChange","handler_useThisCompAsServer","up_chevron","disp_showFileSavedMessage","updateFilesSaved","numFiles","successMessage","ip_util","clientGetIP","split","loading","style_makeEmojiToastLayout","position","helper_setServerIP","helper_showServerNotOnline","handler_fileSaveSuccess","numFilesSavedInd","updateCompID","status","style_addThisCpuIcon","str","find","re","RegExp","replace","ref_hideLoader","NotOnPageError","initSocketListeners","add","JSON","stringify","progress","connectedOrder","connectedOrderMap","update","$merge","refreshRates","conectedOrderNum","setTimeout","reload","max","new_page","bool","admin_refreshAll","origin","helper_emitInitialSocketMessages","helper_showNoCamsConnected","disconnect","io","handler_keydown","inputServerIP","activeElement","react_router_dom","react_router","path","component","readTextFile","sentences","handler_keyup","file","_this3","fetch","response","sum","serverID","opts","hostname","mode","ok","_context","t0","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","return","ReactDOM","render","src_app_App","module","exports","__webpack_require__","p","ifaces","require","networkInterfaces","nodeGetIP","address","keys","forEach","ifname","iface","family","internal","onNewIP","pc","RTCPeerConnection","mozRTCPeerConnection","webkitRTCPeerConnection","iceServers","noop","localIPs","ipRegex","ipIterate","createDataChannel","createOffer","sdp","line","match","setLocalDescription","onicecandidate","ice","candidate"],"mappings":"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","file":"static/js/main.fa711ce5.chunk.js","sourcesContent":["// let qs = (function (a) {\n//   console.log(\"in qs:\" + window.location.href)\n//   if (a === \"\") return {};\n//   var b = {};\n//   for (var i = 0; i < a.length; ++i) {\n//     var p = a[i].split('=', 2);\n//     if (p.length === 1)\n//       b[p[0]] = \"\";\n//     else\n//       b[p[0]] = decodeURIComponent(p[1].replace(/\\+/g, \" \"));\n//   }\n//   return b;\n// })(window.location.search.substr(1).split('&'));\n\nconst qs = function(id) {\n  let parsedUrl = new URL(window.location.href);\n  if (parsedUrl.searchParams.has(id)) {\n    return parsedUrl.searchParams.get(id);\n  } else {\n    return false;\n  }\n}\nexport default qs;","import React from 'react';\nimport './Webcam.scss';\nimport PropTypes from 'prop-types';\n\nclass Webcam extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isRecording: false,\n      recorder: null,\n      videoSrc: null,\n      videoEle: null,\n      startTime: 'time',\n    };\n    this.video = React.createRef();\n  }\n  getCurrentTime() {\n    let today = new Date();\n    let date =\n      today.getFullYear() +\n      '-' +\n      (today.getMonth() + 1) +\n      '-' +\n      today.getDate();\n    let time = today.getTime(); //today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n    return date + '-' + time;\n  }\n  \n  render() {\n    // console.log(this.props.videoRef);\n    return (\n      <div className='vid_card' onClick={this.startRecording}>\n        <video\n          className='cam'\n          controls\n          autoPlay\n          playsInline\n          muted\n          ref={this.props.videoRef}\n        />\n        <p className='cam_label'>{this.props.name}</p>\n      </div>\n    );\n  }\n}\n\nWebcam.propTypes = {\n  name: PropTypes.string.isRequired,\n  videoRef: PropTypes.object.isRequired\n};\n\nexport default Webcam;\n","/* eslint-disable no-console */\nimport React, { useState, useEffect } from 'react';\n// import sample_cam from '../../assets/svg/sample-cam.svg';\nimport Webcam from '../Webcam/Webcam.js';\nimport RecordRTC, { MediaStreamRecorder } from 'recordrtc';\nimport qs from '../../utils/qs'\nimport cogoToast from 'cogo-toast';\n// import PropTypes from 'prop-types';\n\nexport default function CameraList(props) {\n  const [availableCams, setAvailableCams] = useState([]);\n  const [recordingStatus, setRecordingStatus] = useState(\"recording-status-loading...\");\n  const [availableMics, setAvailableMics] = useState([]);\n  const [pluggedInDevices, setPluggedInDevices] = useState([]);\n\n  const helper_extractRelevantCamInfo = device => {\n    return {\n      camera_info: {\n        id: device.deviceId,\n        label: device.label,\n        groupId: device.groupId\n      },\n      ref: React.createRef(),\n      recorder: null\n    };\n  }\n  const helper_addToVideoDevices = (device, videodevices) => {\n    device = helper_extractRelevantCamInfo(device);\n    console.log(availableCams);\n    const devicePrior = availableCams.filter(cam => {\n      return cam.camera_info.id === device.camera_info.id\n    })[0];\n    console.log(devicePrior);\n    if (devicePrior) {\n      console.log('found prior device');\n      device.mic_info = devicePrior.mic_info;\n    } else {\n      console.log('using first cam mic!!!')\n      device.mic_info = availableMics[0];\n    }\n    videodevices.push(device);\n  }\n  const helper_addToMicDevices = (device, micDevices) => {\n    if (micDevices.indexOf(device.deviceId) < 0)\n      micDevices.push(device);\n  }\n  const helper_getNumCams = devices => {\n    const num = devices.reduce((accumulator, device) => {\n      return device.kind === 'videoinput' ? accumulator + 1 : accumulator;\n    }, 0);\n    props.updateDetectedNumCams(num);\n    return num;\n  }\n  const initCams = () => {\n    if (!navigator.mediaDevices || !navigator.mediaDevices.enumerateDevices) {\n      console.log('enumerateDevices() not supported.');\n    } else {\n      navigator.mediaDevices.enumerateDevices().then(devices => {\n        let videoDevices = [];\n        let micDevices = [];\n        const numCams = helper_getNumCams(devices);\n\n        console.log(\"number of cams detected: \" + numCams);\n        devices.map(function(device) {\n          if (device.kind === 'audioinput') {\n            if (\n              !device.label.toLowerCase().includes('default') &&\n              !device.label.toLowerCase().includes('communications') && \n              !device.label.toLowerCase().includes('built-in')\n            ) {\n              helper_addToMicDevices(device, micDevices);\n            }\n          }            \n          if (device.kind === 'videoinput') {\n            helper_addToVideoDevices(device, videoDevices);\n          }\n          return null;\n        });\n        setAvailableMics(micDevices);\n        setAvailableCams(videoDevices);\n\n        document.getElementById('startBtn').click();\n        document.getElementById('startBtn').disabled = true;\n        // console.log('getAvailableDevices success!');\n      })\n      .catch(function(err) {\n        console.log(err.name + ': ' + err.message);\n      });\n    }\n  }\n  // const initMics = () => {\n  //   let id = 0;\n  //   availableCams.map(cam => {\n  //     if (availableMics[id]) cam.mic_info = availableMics[id++].deviceId;\n  //   });\n  // }\n\n  Array.prototype.diff = function(a) {\n    return this.filter(function(i) {\n      return a.indexOf(i) < 0;\n    });\n  };\n\n  const getNewMicCam = (newPluggedInID, allDevices) => {\n    const newCam = allDevices.filter(device => {\n      return (\n        newPluggedInID.indexOf(device.deviceId) >= 0 &&\n        device.kind === 'videoinput'\n      );\n    });\n    // should only contain one \n    const newMic = allDevices.filter(device => {\n      return (\n        newPluggedInID.indexOf(device.deviceId) >= 0 &&\n        device.kind === 'audioinput'\n      ); \n    });\n    if (newMic.length > 1) {\n      console.error('multiple new mics detected')\n    }\n    if (newCam.length > 1) {\n      console.error('multiple new cams detected');\n    }\n    const newMicID = newMic[0].deviceId;\n\n    return [newMicID, newCam[0]];\n  }\n\n  const checkIfMac = (resolve) => {\n    let faceTimeDevice = undefined;\n    let defaultMic = undefined;\n    return new Promise(() => {\n      navigator.mediaDevices.enumerateDevices().then(devices => {\n        faceTimeDevice = devices.filter(device => {\n          return device.label.toLowerCase().includes('facetime');\n        });\n        defaultMic = devices.filter(device => {\n          return device.deviceId === 'default'\n        });\n      }).then(()=> {\n        resolve(faceTimeDevice[0], defaultMic[0]);\n      });\n    })\n  }\n\n  const startFaceTimeCam = (faceTimeDevice, defaultMic) => {\n    if (faceTimeDevice) {\n      const device = helper_extractRelevantCamInfo(faceTimeDevice)\n      device.mic_info = defaultMic.deviceId;\n      setAvailableCams([device]);\n      document.getElementById('startBtn').disabled = false;\n      document.getElementById('startBtn').click();\n      document.getElementById('dummyBtn').disabled = false;\n      document.getElementById('dummyBtn').click();\n      cogoToast.success('Mac FaceTime Camera started', {\n        hideAfter: 0.3,\n        onClick: hide => {\n          hide()\n        }\n      });\n    }\n  }\n\n  const addNewCamMic = () => {\n    try {\n      checkIfMac(startFaceTimeCam);\n    } catch (Exception) {\n      // console.err('not a mac')\n    }\n    navigator.mediaDevices.enumerateDevices().then(devices => {\n      const allDevices = devices.filter(device => {\n        return (\n          device.label.toLowerCase().includes('aoni') &&\n          !device.label.toLowerCase().includes('communication') &&\n          !device.label.toLowerCase().includes('default')\n        );\n      });\n      let detectedTwoDevices = false;\n\n      const idAoni = allDevices.map(device => {\n        return device.deviceId;\n      });\n      // const newPluggedInPaired = allDevices.map(device => [device.kind, device.deviceId])\n      // console.log(newPluggedInPaired);\n\n      const newPluggedInID = idAoni.diff(pluggedInDevices);\n      if (newPluggedInID.length === 0) {\n        // console.log('no new devices detected');\n        cogoToast.warn('No additional webcams detected.', {hideAfter: 1});\n      } else if (newPluggedInID.length === 2) {\n        detectedTwoDevices = true;\n        // console.log(\n        //   'new devices: ' + newPluggedInID.map(d => d.substring(0, 5))\n        // );\n      }\n\n      if (detectedTwoDevices) {\n        let [newMicID, newCamDevice] = getNewMicCam(newPluggedInID, allDevices);\n        newCamDevice = helper_extractRelevantCamInfo(newCamDevice);\n        const existCamera = availableCams.filter(cam => {\n          return cam.camera_info.id === newCamDevice.camera_info.id;\n        })[0];\n        if (!existCamera) {\n          newCamDevice.mic_info = newMicID;\n          let temp = availableCams;\n          temp.push(newCamDevice);\n          setAvailableCams(temp);\n          cogoToast.success(\n            'New camera: ' + newCamDevice.camera_info.id.substring(0, 5) + ' added.'\n          ), {\n            hideAfter: 0.5,\n            onClick: hide => {\n              hide();\n            }\n          };\n          document.getElementById('startBtn').disabled = false;\n          initCams();\n          setPluggedInDevices(idAoni);\n        }\n      }      \n    }).then(() => {\n        document.getElementById('dummyBtn').disabled = false;\n        document.getElementById('dummyBtn').click();\n    });\n  }\n\n  function useAvailableWebCams() {\n    //  runs once\n    useEffect(() => {\n      props.updateConnectionStatus();\n    }, [props.addCamState]);\n  }\n\n  const initCamsDummy = () => {\n    stopAllCams(true);\n  }\n\n  const startAllCams = () => {\n    const temp =\n    recordingStatus === 'recording-status-loading...' ? {} : recordingStatus;\n    // goes through all cams array and through each ID, accesses and opens it using navigator\n    availableCams.map(cam => {\n      // console.log(cam.mic_info);\n      if (!cam.mic_info) {\n        console.error('using default microphone...');\n      }\n      navigator.mediaDevices\n        .getUserMedia({\n          audio: {\n            deviceId: {exact: (cam.mic_info) ? cam.mic_info : 'default'}\n          },\n          video: {\n            frameRate: {exact: 30, ideal: 30},\n            width: {ideal: 1920},\n            height: {ideal: 1080},\n            deviceId: cam['camera_info'].id\n          }\n        })\n        .then(camera => {\n          // console.log(camera.getTracks().forEach(track=> {console.log(\"track:\" + track.label + \",\" + track.kind)}));\n          // console.log(\"////////////////////////\");\n          let recorder = RecordRTC(camera, {\n            recorderType: MediaStreamRecorder, //WebAssemblyRecorder,\n            type: 'video',\n            frameRate: 30,\n            desiredSampRate: 16000,\n            width: 1920,\n            height: 1080,\n            numberOfAudioChannels: 2,\n            disableLogs: true\n          });\n          if (recorder.getState() !== 'recording') {\n            recorder.camera = camera;\n            cam['recorder'] = recorder;\n            let video = cam['ref'];\n            try {\n              video.current.srcObject = camera;\n            } catch (NotYetLoadedException) {\n              //\n            }\n            // resetInitialCams(recorder);\n            recorder.startRecording();\n          }\n          triggerRecordStatusUpdate(temp, recorder, cam);\n        })\n        .catch(error => {\n          console.error(error);\n        });\n        return availableCams;\n    });\n  };\n\n  const stopAllCams = (dummy) => {\n    const temp =\n      recordingStatus === 'recording-status-loading...' ? {} : recordingStatus;\n      \n    availableCams.map(cam => {\n      let recorder = cam['recorder'];\n      if (recorder !== null) {\n        recorder.stopRecording(() => {\n          let blob = recorder.getBlob();\n          console.log(\n            '%c recorded data',\n            'background: #222; color: #bada55',\n            blob\n          );\n          if (dummy !== true) {\n            props.socket.emit('client: save data', {\n              name: qs(\"name\"),\n              sentence_index: qs(\"sentence_index\"),\n              camera_id: cam['camera_info'].id,\n              blob: blob\n            });\n          } else {\n            console.log('dummy received, did not save blob');\n          }\n\n        });\n        triggerRecordStatusUpdate(temp, recorder, cam);\n      }\n      return availableCams;\n    });\n  };\n\n  const triggerRecordStatusUpdate = (temp, recorder, cam) => {\n    try {\n      temp[cam['camera_info'].id.substring(0, 15)] = recorder.getState();\n      setRecordingStatus(temp);\n      props.updateConnectionStatus(temp);\n    } catch (NotYetLoadedException) {\n      cogoToast.warn('Camera not yet loaded!', {\n        hideAfter: 0,\n        onClick: hide => {\n          hide()\n        }\n      });\n    }\n  }\n\n  const resumeAllCams = () => {\n    const temp =\n      recordingStatus === 'recording-status-loading...' ? {} : recordingStatus;\n    availableCams.map(cam => {\n      let recorder = cam['recorder'];\n      let state = undefined;\n      try {\n        state = recorder.getState();\n      } catch {\n        cogoToast.warn(\"Camera not yet loaded!\", {\n          hideAfter: 0,\n          onClick: hide => {\n            hide()\n          }\n        });\n      }\n      if (state === \"paused\") {\n        recorder.resumeRecording();\n      } else if (state === \"stopped\"){\n        try {\n          recorder.startRecording();\n        } catch (NotYetLoadedException) {\n          cogoToast.warn('Camera not yet loaded!', {\n            hideAfter: 0,\n            onClick: hide => {\n              hide()\n            }\n          });\n        }\n      }\n      triggerRecordStatusUpdate(temp, recorder, cam);\n      return availableCams;\n    });\n  }\n\n  useAvailableWebCams();\n\n  // dummy to fix bug of first video\n  props.socket.on('server: dummy vid, do not save', function() {\n    document.getElementById('dummyBtn').click();\n    document.getElementById('dummyBtn').disabled = true;\n  });\n\n  // this is actually what calls start cams\n  props.socket.on('server: start cams', function () {\n    document.getElementById(\"resumeBtn\").click();\n    document.getElementById(\"resumeBtn\").disabled = true;\n    document.getElementById('stopBtn').disabled = false;\n\n  });\n\n  // this is actually what calls stop cams\n  props.socket.on('server: stop cams', function () {\n    document.getElementById('stopBtn').click();\n    document.getElementById('stopBtn').disabled = true;\n    document.getElementById(\"resumeBtn\").disabled = false;\n  });\n\n  const debugControls = (debug) => {\n    if (debug) {\n      return (\n        <div>\n          {/* <p>Don't click these while actual testing</p> */}\n          <button id='dummyBtn' className=\"hidden_button\" onClick={initCamsDummy}>\n            dummy reset\n          </button>\n          <button id='startBtn' className=\"hidden_button\" onClick={startAllCams}>\n            start and pause all cams\n          </button>\n          <button id='resumeBtn' className=\"hidden_button\" onClick={resumeAllCams}>\n            resume all cams\n          </button>\n          <button id='stopBtn' className=\"hidden_button\" onClick={stopAllCams}>\n            stop all cams\n          </button>\n          <button\n            id='addCamBtn'\n            className='hidden_button'\n            onClick={addNewCamMic} \n          >\n            Add Cam\n          </button>\n          {/* <button id=\"setCompID\" onClick={getSetCompID}>get set computer ID</button> */}\n        </div>\n      );\n    }\n  }\n\n  const renderCams = addCam => {\n\n    // initMics()\n    const debug = true;\n    let i = 0; \n    const comp_camsList = availableCams.map(cam => {\n      return (\n        <Webcam\n          key={i++}\n          name={'ID: ' + cam['camera_info'].id.substring(0, 15)}\n          videoRef={cam['ref']}\n        />\n      );\n    });\n      \n\n    return (\n      <div id='camera_list'>\n        {debugControls(debug)}\n        <div>\n          <div className='cameras'>{comp_camsList}</div>\n          <button className='debug_button' style={{ marginTop: '1em'}} onClick={addCam}>Add Webcam</button>\n        </div>\n      </div>\n    );\n  };\n  \n  return renderCams(props.addCam);\n}","import React, { Component } from 'react'\nimport './NameField.scss'\nimport PropTypes from 'prop-types';\n\nexport default class NameField extends Component {\n  saveName = () => {\n    let name = document.getElementById(\"name\").value;\n    // document.location.search = \"name=\" + name + \"&sentence_index=0\";\n    let url_state = '?name=' + name + '&sentence_index=0'\n    window.history.pushState(\n      null,\n      null,\n      url_state\n    );\n    \n    this.props.socket.emit('client: start testing', {\n      name,\n      sentence_index: 0\n    })\n    this.props.socket.emit('client: dummy vid, do not save');\n    this.props.socket.emit('client: update recording progress', 0);\n    this.props.socket.emit('client: save total time', [0,0,0]);\n    this.props.socket.emit('client: save total start time', new Date())\n    this.props.updateTesterContents();\n    this.props.updateGreenLightStatus(true);\n    \n  }\n\n  detectEnter = (e) => {\n    if (e.which === 13) {\n      this.saveName(e);\n    }\n  }\n\n\n  render() {\n    return (\n      <div>\n        <div className='name_input'>\n          <input\n            type='text'\n            name='name'\n            id='name'\n            placeholder='输入名字（拼音）'\n            onKeyPress={this.detectEnter}\n            autoFocus\n          />\n          <br/>\n          <button className=\"btn btn-center\" onClick={this.saveName}>Save Name</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nNameField.propTypes = {\n  socket: PropTypes.object.isRequired,\n  updateTesterContents: PropTypes.func.isRequired,\n  updateGreenLightStatus: PropTypes.func.isRequired,\n};","/* eslint-disable no-console */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport NameField from '../NameField/NameField';\nimport qs from '../../utils/qs';\n\nexport default function InProcessScreen(props) {\n  const [recording, setRecordState] = useState(false);\n  const [done_recording, setDoneRecording] = useState(false);\n  const [reset_state, reset] = useState(false);\n  const [nameSet, setName] = useState(qs('name'));\n\n  function updateSentence(data) {\n    reset(true);\n    props.updateSentence(data);\n  }\n\n  function getRecordState() {\n    if (recording) {\n      return 'Done';\n    } else if (done_recording && !reset_state) {\n      return 'Retry';\n    } else {\n      return 'Record';\n    }\n  }\n\n  function stopRecording() {\n    setDoneRecording(true);\n    setRecordState(false);\n    props.socket.emit('client: stop cams', 'in process screen');\n    reset(false);\n    props.showFileSavingLoader();\n    props.updateSentence('$next');\n\n    props.updateGreenLightStatus(false);\n    props.stopTimer();\n    markSentenceAsDone(props.curr_sentence_index);\n  }\n\n  function markSentenceAsDone(curr_sentence_index) {\n    if (curr_sentence_index >= 0 ) props.updateRecordProgress(curr_sentence_index);\n  }\n\n  function startRecording() {\n    props.socket.emit('client: start cams', 'in process screen');\n    setRecordState(true);\n    props.startTimer();\n    document.getElementById('testerRecordBtn').className = 'btn btn-danger';\n\n  }\n\n  function record() {\n    document.getElementById('showSavedFilesBtn').disabled = false;\n    if (recording) {\n      stopRecording();\n    } else {\n      startRecording();\n    }\n  }\n\n  \n  function disableNextButtonIfCurrNotRead() {\n    if (!props.debugMode) {\n      const recordedYet =\n      props.recordedProgress > props.curr_sentence_index;\n      try {\n        if (recordedYet) {\n          document.getElementById('testerNextBtn').disabled = false;\n        } else {\n          document.getElementById('testerNextBtn').disabled = true;\n        }\n      } catch (Exception) {\n        // console.log(Exception);\n      }\n    }\n  }\n\n  function makeEmojiLayout(msg, emoji) {\n    return (\n      <div className='emoji-layout-container'>\n        <div className='emoji-layout-emoji-left'> {emoji}</div>\n        <div>\n          {msg[0]}\n          <br />\n          {msg[1]}\n        </div>\n        <div className='emoji-layout-emoji-right'> {emoji}</div>\n      </div>\n    );\n  }\n\n  function displaySentenceToBeRead() {\n    disableNextButtonIfCurrNotRead();\n    const recordedYet = \n      (props.curr_sentence_index > 0) ? \n      props.recordedProgress >= props.curr_sentence_index : \n      false;\n    const emoji = recordedYet ? '↺' : '';\n    let sentence = props.data[props.curr_sentence_index];\n    if (sentence) {\n      const line1 = sentence.substring(0,10)\n      const line2 = sentence.substring(10);\n      sentence = makeEmojiLayout([line1, line2], emoji);\n    }\n    \n    // const sentence = recordedMessage + ' ' + props.data[props.curr_sentence_index] + ' ' + recordedMessage;\n    const recordedClassName = recordedYet ? 'recorded_sentence_highlight sentence_to_be_read' : 'sentence_to_be_read'\n    return (\n      <div>\n        <br />\n        <div className={recordedClassName}>\n          <p style={{fontSize: '16px'}}>[{props.curr_sentence_index}]</p>\n          {sentence}\n        </div>\n      </div>\n    );\n  }\n\n  \n\n  function trans(text) {\n    if (text === 'Done') {\n      return '结束录制';\n    } else if (text === 'Retry') {\n      return '重新录制';\n    } else if (text === 'Record') {\n      return '开始录制'\n    } else {\n      return text;\n    }\n  }\n\n  function updateTesterContents() {\n    setName(true);\n  }\n\n  function getContents() {\n    if (!nameSet) {\n      return (\n        <div>\n          <NameField\n            socket={props.socket}\n            updateTesterContents={updateTesterContents}\n            updateGreenLightStatus={props.updateGreenLightStatus}\n          />\n        </div>\n      );\n    } else {\n      try {\n        let recordTimeEle = document.getElementById('record_time_content');\n        let recordTimeMsg = document.getElementById('record_time_msg');\n        let colorRecordTime = (recordTimeEle.innerText === '00:00:00') ? 'gray' : 'red';\n        if (colorRecordTime === 'gray') {\n          recordTimeEle.style.transition = 'all 0.5 ease'\n          recordTimeMsg.style.transition = 'all 0.5 ease'\n          recordTimeEle.style.color = 'black';\n          recordTimeMsg.style.color = 'black';\n        } else {\n          recordTimeEle.style.transition = 'all 0.5 ease'\n          recordTimeMsg.style.transition = 'all 0.5 ease'\n          recordTimeEle.style.color = '#FF1053';\n          recordTimeMsg.style.color = '#FF1053';\n        }\n      } catch (NotYetLoadedException) {\n        //\n      }\n      return (\n        <div>\n          {displaySentenceToBeRead()}\n          <div className='recording_hint'>\n          <pre id='record_time_content'>00:00:00</pre>\n          <pre id='record_time_msg'>录制中</pre>\n            \n          </div>\n          <button\n            id='testerRecordBtn'\n            className={\n              getRecordState() === 'Done'\n                ? 'btn btn-danger'\n                : 'btn_highlight_green'\n            }\n            onClick={record}\n            disabled={\n              !props.recordGreenLight ||\n              props.numFilesSaved % props.numCams !== 0 || \n              !props.connectedToServer\n            }\n          >\n            {trans(getRecordState())}\n          </button>\n          <br />\n          <button\n            className='btn'\n            id='testerPrevBtn'\n            onClick={() => updateSentence('$prev')}\n            disabled={\n              props.curr_sentence_index === 0 ||\n              !props.recordGreenLight ||\n              props.numFilesSaved % props.numCams !== 0 ||\n              recording\n            }\n          >\n            ⬅上一句\n          </button>\n          <button\n            className='btn'\n            id='testerNextBtn'\n            onClick={() => updateSentence('$next')}\n            disabled={\n              props.curr_sentence_index === props.data_length - 1 ||\n              !props.recordGreenLight ||\n              props.numFilesSaved % props.numCams !== 0 ||\n              recording\n            }\n          >\n            下一句➡\n          </button>\n        </div>\n      );\n    }\n  }\n\n  return (\n    <div className='test_container'>\n      {getContents()}\n    </div>\n  );\n}\n\nInProcessScreen.propTypes = {\n  curr_sentence_index: PropTypes.number.isRequired,\n  curr_sentence: PropTypes.string.isRequired,\n  data_length: PropTypes.number.isRequired,\n  updateSentence: PropTypes.func.isRequired,\n  socket: PropTypes.object.isRequired,\n  data: PropTypes.array.isRequired,\n  updateGreenLightStatus: PropTypes.func.isRequired,\n  recordGreenLight: PropTypes.bool.isRequired,\n  numFilesSaved: PropTypes.number.isRequired,\n  numCams: PropTypes.number.isRequired,\n  stopTimer: PropTypes.func.isRequired,\n  startTimer: PropTypes.func.isRequired,\n  recordedProgress: PropTypes.number.isRequired,\n  updateRecordProgress: PropTypes.func.isRequired,\n  showFileSavingLoader: PropTypes.func.isRequired,\n  debugMode: PropTypes.bool.isRequired,\n  connectedToServer: PropTypes.bool.isRequired,\n};\n","import React from 'react'\nimport PropTypes from 'prop-types';\nimport { Line } from 'rc-progress';\n\nexport default function ProgressBar(props) {\n  const percent = ((props.curr ) / (props.total + 1) * 100).toFixed(2);\n  const alignmentStyle = props.align === 'left' ? { margin: '0' } : {};\n  return (\n    <div className='progress_bar' style={alignmentStyle}>\n      <pre>\n        进度: {props.curr} / {props.total + 1} ({percent}%)\n      </pre>\n      <Line\n        percent={percent}\n        strokeWidth={props.strokeWidth}\n        trailWidth={props.strokeWidth}\n        strokeColor = '#3bb8ce'\n        trailColor='#363732'\n      />\n    </div>\n  );\n}\n\nProgressBar.propTypes = {\n  curr: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  align: PropTypes.string.isRequired,\n  strokeWidth: PropTypes.number.isRequired,\n};\n","import React, { useState } from 'react';\nimport './Tester.scss';\nimport PropTypes from 'prop-types';\nimport InProcessScreen from './InProcessScreen.js';\nimport qs from '../../utils/qs'\nimport ProgressBar from '../ProgressBar'\n\nfunction Tester(props) {\n  const [intervalID, setIntervalID] = useState(undefined);\n\n  function comp_inProcessScreen() {\n    return (\n      <InProcessScreen\n        updateSentence={props.updateSentence}\n        curr_sentence_index={props.curr_sentence_index}\n        data_length={props.data_length}\n        socket={props.socket}\n        data={props.data}\n        curr_sentence={props.curr_sentence}\n        recordGreenLight={props.recordGreenLight}\n        updateGreenLightStatus={props.updateGreenLightStatus}\n        numFilesSaved={props.numFilesSaved}\n        numCams={props.numCams}\n        stopTimer={stopTimer}\n        startTimer={startTimer}\n        recordedProgress={props.recordedProgress}\n        updateRecordProgress={props.updateRecordProgress}\n        showFileSavingLoader={props.showFileSavingLoader}\n        debugMode={props.debugMode}\n        connectedToServer={props.connectedToServer}\n      />\n    );\n  }\n\n  function stopTimer() {\n    clearInterval(intervalID);\n    document.getElementById('record_time_content').innerHTML = '00:00:00';\n  }\n\n  function startTimer() {\n    setIntervalID(createInterval());\n  }\n\n  function createInterval() {\n    let time = [0, 0, 0];\n    return setInterval(() => {\n      let hour = time[0];\n      let min = time[1];\n      let sec = time[2];\n\n      if (sec < 60) {\n        sec += 1;\n      }\n      if (sec === 60) {\n        min += 1;\n        sec = 0;\n      }\n      if (min === 60) {\n        hour += 1;\n        min = 0;\n      }\n      time = [hour, min, sec];\n      document.getElementById('record_time_content').innerHTML =\n        ('0' + hour).slice(-2) +\n        ':' +\n        ('0' + min).slice(-2) +\n        ':' +\n        ('0' + sec).slice(-2);\n      }, 10);\n  }\n\n  return (\n    <div className='testing_screen'>\n      <ProgressBar\n        curr={props.recordedProgress}\n        total={props.data_length - 1}\n        align={'center'}\n        strokeWidth={2}\n      />\n      <div className='middle'>\n        <div className='inner'>{comp_inProcessScreen()}</div>\n      </div>\n      <pre\n        hidden={\n          props.recordGreenLight ||\n          props.curr_sentence_index === 0 ||\n          !qs('name')\n        }\n        className='warning_message'\n      >\n        如果等保存时间多余10秒钟，通知老师来从设置机器\n      </pre>\n    </div>\n  );\n}\n\nTester.propTypes = {\n  updateSentence: PropTypes.func.isRequired,\n  curr_sentence_index: PropTypes.number.isRequired,\n  curr_sentence: PropTypes.string.isRequired,\n  data_length: PropTypes.number.isRequired,\n  socket: PropTypes.object.isRequired,\n  data: PropTypes.array.isRequired,\n  recordGreenLight: PropTypes.bool.isRequired,\n  updateGreenLightStatus: PropTypes.func.isRequired,\n  numFilesSaved: PropTypes.number.isRequired,\n  numCams: PropTypes.number.isRequired,\n  recordedProgress: PropTypes.number.isRequired,\n  updateRecordProgress: PropTypes.func.isRequired,\n  totalTime: PropTypes.array.isRequired,\n  updateTotalTime: PropTypes.func.isRequired,\n  showFileSavingLoader: PropTypes.func.isRequired,\n  debugMode: PropTypes.bool.isRequired,\n  connectedToServer: PropTypes.bool.isRequired,\n}\n\nexport default Tester;\n","import React, { Component } from 'react'\n\nexport default class TableHeader extends Component {\n  render() {\n    return (\n      <div>\n        <div className='table_header_footer'>\n          <h3>Sentence</h3>\n          {/* <div>Length</div>\n          <div>Actions</div> */}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './TableRow.scss';\n// import Actions from './Actions';\nimport PropTypes from 'prop-types';\n\nexport default class TableRow extends Component {\n  getClassOfRowItem = () => {\n    let read = this.props.read ? 'read row_item' : 'row_item';\n    // let sentence = this.props.sentence;\n    let is_current = this.props.curr_sentence_index === this.props.index ? ' curr_sentence' : '';\n    return read + is_current;\n  }\n\n\n  render() {\n    return (\n      <div>\n        <div className='table_row'>\n          <div className={this.getClassOfRowItem()}>\n            {this.props.index + \": \" + this.props.sentence}\n          </div>\n          {/* <div className='row_item'>00:00 / {this.props.time} </div> */}\n          {/* <Actions /> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nTableRow.propTypes = {\n  sentence: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  curr_sentence_index: PropTypes.number.isRequired,\n  time: PropTypes.string.isRequired,\n  read: PropTypes.bool.isRequired,\n};\n","import React, { Component } from 'react';\nimport TableRow from './TableRow.js';\nimport PropTypes from 'prop-types';\nimport './TableData.scss';\n\nexport default class TableData extends Component {\n  updateDataOnPageChange = () => {};\n  render() {\n    let data = this.props.data;\n    let page = this.props.curr_page;\n    let max_per_page = this.props.max_per_page;\n    let beg = page * max_per_page - max_per_page;\n    let end = beg + max_per_page;\n    let small_data = data.slice(beg, end);\n    let rowItems = small_data.map((sentence, i) => (\n      <TableRow\n        curr_sentence_index={this.props.curr_sentence_index}\n        sentence={sentence}\n        time='00:00'\n        read={false}\n        key={sentence+\":\"+i}\n        index={i + beg}\n      />\n    ));\n\n    return <div className='table'>{rowItems}</div>;\n  }\n}\n\nTableData.propTypes = {\n  data: PropTypes.array.isRequired,\n  curr_sentence_index: PropTypes.number.isRequired,\n  curr_page: PropTypes.number.isRequired,\n  max_per_page: PropTypes.number.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class PageNum extends Component {\n  render() {\n    return (\n      <div \n        className={this.props.selected ? 'page_num' : 'can_click_num page_num'}\n        onClick={() => this.props.updatePage(this.props.num)}>\n        {this.props.num}\n      </div>\n    );\n  }\n}\n\nPageNum.propTypes = {\n  num: PropTypes.number.isRequired,\n  selected: PropTypes.bool.isRequired,\n  updatePage: PropTypes.func.isRequired\n};\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\n\nexport default class PageInput extends Component {\n  handleChange = (event) => {\n    this.props.updatePage(Number(event.target.value));\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n  }\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor='page'>Page:</label>\n          <input\n            type='text'\n            value={this.props.curr_page}\n            onChange={this.handleChange}\n            className = 'debug_text_input'\n          />\n        </form>\n      </div>\n    );\n  }\n}\n\nPageInput.propTypes = {\n  updatePage: PropTypes.func.isRequired,\n  curr_page: PropTypes.number.isRequired\n}","import React, { Component } from 'react'\nimport './TableFooter.scss'\nimport PageNum from './PageNum.js'\nimport next from '../../assets/svg/collapse-chevron.svg'\nimport prev from '../../assets/svg/expand-chevron.svg';\nimport PropTypes from 'prop-types';\nimport PageInput from './PageInput.js'\nimport beg from '../../assets/svg/beg.svg'\nimport end from '../../assets/svg/end.svg';\n\nexport default class TableFooter extends Component {\n  updatePage=(page_num) => {\n    this.props.updatePage(page_num);\n  }\n\n  render() {\n    let curr_page = this.props.curr_page;\n    let max_per_page = this.props.max_per_page;\n    let mid_point = Math.floor(max_per_page / 2)\n    let max_page = Number(((this.props.total_data + 1) / this.props.max_per_page + 1).toFixed(0));\n    let page_nums = Array.from(new Array(max_per_page), (x, i) => { \n      let min = 0;\n      if (curr_page <= mid_point) {\n        min = i;\n      } else if (curr_page >= max_page - mid_point) {\n        min = i + max_page - max_per_page;\n      } else {\n        min = i + curr_page - mid_point - 1;\n      }\n      return min;\n    });\n    let nums_list = page_nums.map((i) => {\n      i = i + 1;\n      return <PageNum num={i} selected={curr_page === i} key={i} updatePage={this.props.updatePage}/>\n    });\n\n    return (\n      <div>\n        <div className='table_header_footer'>\n          <div className='table_footer'>\n            <div className='left_footer'>\n              <PageInput\n                updatePage={this.props.updatePage}\n                curr_page={this.props.curr_page}\n              />\n            </div>\n            <div className='right_footer'>\n              <img\n                src={beg}\n                alt=''\n                className='small_btn'\n                onClick={() => this.props.updatePage(1)}\n              />\n              <img\n                src={prev}\n                alt=''\n                className='small_btn'\n                onClick={() => this.props.updatePage(curr_page - 1)}\n              />\n              {nums_list}\n              <img\n                src={next}\n                alt=''\n                className='small_btn'\n                onClick={() => this.props.updatePage(curr_page + 1)}\n              />\n              <img\n                src={end}\n                alt=''\n                className='small_btn'\n                onClick={() => this.props.updatePage(max_page)}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nTableFooter.propTypes = {\n  updatePage: PropTypes.func.isRequired,\n  curr_page: PropTypes.number.isRequired,\n  total_data: PropTypes.number.isRequired,\n  max_per_page: PropTypes.number.isRequired\n};","import React, { Component } from 'react'\nimport TableHeader from './TableHeader.js'\nimport './Table.scss'\nimport TableData from './TableData.js'\nimport PropTypes from 'prop-types';\nimport TableFooter from './TableFooter';\nexport default class Table extends Component {\n  constructor(props) {\n    super(props);\n    let per_page = 8;\n    this.state = {\n      max_per_page: per_page\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <TableHeader />\n        <TableData\n          data={this.props.data}\n          curr_page={this.props.curr_page}\n          max_per_page={this.state.max_per_page}\n          curr_sentence_index={this.props.curr_sentence_index}\n        />\n        <TableFooter\n          total_data={this.props.data.length}\n          updatePage={this.props.updatePage}\n          curr_page={this.props.curr_page}\n          max_per_page={this.state.max_per_page}\n        />\n      </div>\n    );\n  }\n}\n\nTable.propTypes = {\n  curr_sentence_index: PropTypes.number.isRequired,\n  curr_page: PropTypes.number.isRequired,\n  updatePage: PropTypes.func.isRequired,\n  data: PropTypes.array.isRequired,\n};","import React, { Component } from 'react';\nimport Table from './Table';\nimport PropTypes from 'prop-types';\n\nexport default class DataCollection extends Component {\n\n\n  render() {\n    return (\n      <div>\n        <div className='data_table'>\n          <Table\n            data={this.props.data}\n            curr_sentence_index={\n              this.props.curr_sentence_index\n            }\n            curr_page={this.props.curr_page}\n            updatePage={this.props.updatePage}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nDataCollection.propTypes = {\n  data: PropTypes.array.isRequired,\n  curr_sentence_index: PropTypes.number.isRequired,\n  socket: PropTypes.object.isRequired,\n  updatePage: PropTypes.func.isRequired,\n  curr_page: PropTypes.number.isRequired\n};\n","import React, { useEffect } from 'react'\nimport Modali, { useModali } from 'modali';\nimport PropTypes from 'prop-types';\nimport cogoToast from 'cogo-toast';\n\nexport default function Modal(props) {\n  const [completeModal, toggleCompleteModal] = useModali({\n    animated: true,\n    title: props.title,\n    message: props.message,\n    buttons: [\n      <Modali.Button\n        label={props.buttonCancel ? props.buttonCancel : ''}\n        isStyleCancel\n        className={!props.buttonCancel ? 'display_none' : ''}\n        key={props.buttonCancel}\n        hidden={!props.buttonCancel}\n        onClick={() => toggleCompleteModal()}\n      />,\n      <Modali.Button\n        label={props.buttonConfirm}\n        isStyleDestructive\n        onClick={() => {\n          if (props.confirmFunc) props.confirmFunc();\n          toggleCompleteModal();\n          if (props.toast) cogoToast.info(props.toast, {\n            onClick: hide => {\n              hide()\n            }\n          });\n        }}\n        hidden={!props.buttonConfirm}\n        key={props.buttonConfirm}\n      />\n    ]\n  });\n  useEffect(() => {\n    if (props.onLoadFunc) props.onLoadFunc()\n    try {\n      if (!props.buttonCancel)\n        document.getElementsByClassName(\n          'modali-button-cancel'\n          )[0].className += ' display_none';\n      if (!props.buttonConfirm)\n        document.getElementsByClassName(\n          'modali-button-destructive'\n        )[0].className += ' display_none';\n    } catch (NotYetLoadedException) {\n      // console.log(NotYetLoadedException);\n    }\n  }, [])\n\n  return (\n    <div style={{ height: '0px' }}>\n      <button\n        className=\"hidden_button\"\n        id={props.modalID}\n        onClick={toggleCompleteModal}\n      >\n        toggle modal\n      </button>\n      <Modali.Modal {...completeModal} />\n    </div>\n  );\n}\n\nModal.propTypes = {\n  socket: PropTypes.object,\n  title: PropTypes.string,\n  message: PropTypes.any,\n  buttonCancel: PropTypes.string,\n  buttonConfirm: PropTypes.string,\n  toast: PropTypes.string,\n  confirmFunc: PropTypes.func,\n  modalID: PropTypes.string,\n  onLoadFunc: PropTypes.func,\n  buttonConfirmId: PropTypes.string\n};\n","import React, { useState, useEffect } from 'react';\nimport qs from '../utils/qs';\nimport PropTypes from 'prop-types';\nimport ProgressBar from './ProgressBar';\n\nexport default function Status(props) {\n  const [remainingWords, setRemainingWords] = useState(Infinity)\n\n  let intervalID = undefined\n\n  let i = 0; \n  useEffect(() => {\n    // console.log('status page loaded');\n    clearInterval(intervalID);\n    props.socket.on('server: response for start time', startTime => {\n      try {\n        // alert('setting starttime');\n        startTime = new Date(startTime);\n        const startTimeTotalSecs = getSeconds(startTime);\n        const nowSecs = getSeconds(new Date());\n        let diffSecs = nowSecs - startTimeTotalSecs;\n        // let expectedTime = diffSecs / (props.recordedProgress / props.data_length - 1)\n        // console.log(diffSecs);\n        const hours = Math.floor(diffSecs / 3600)\n        diffSecs -= hours * 3600;\n        const mins = Math.floor(diffSecs / 60);\n        diffSecs -= mins * 60;\n        const secs = diffSecs\n        const totalRecordingTime = [hours, mins, secs];\n        displayTime(totalRecordingTime);\n        intervalID = setInterval(() => tick(totalRecordingTime), 1000);\n      } catch (NotYetLoadedException) {\n        console.error(NotYetLoadedException);\n      }\n    });\n    showTime();\n    setRemainingWords(0);\n    console.log(remainingWords);\n    // setRemainingWords(totalWords - wordsCompleted)\n  }, [])\n\n  const displayTime = time => {\n    try {\n      document.getElementById('total_time_elapsed').innerText =\n        'Total Recording Time—' +\n        ('0' + time[0]).slice(-2) +\n        ':' +\n        ('0' + time[1]).slice(-2) +\n        ':' +\n        ('0' + time[2]).slice(-2);\n    } \n    catch(NotYetLoadedException) {\n      //\n    }\n  }\n\n  let time = undefined\n  const tick = initTime => {\n    if (!time) {\n      time = initTime;\n    } \n    // console.log('ticking')\n    let hour = time[0];\n    let min = time[1];\n    let sec = time[2];\n\n    if (sec < 60) {\n      sec += 1;\n    }\n    if (sec === 60) {\n      min += 1;\n      sec = 0;\n    }\n    if (min === 60) {\n      hour += 1;\n      min = 0;\n    }\n    time = [hour, min, sec];\n    // console.log(time);\n    try {\n      displayTime(time);\n    } catch (SomeError) {\n      console.error(SomeError);\n    }\n  };\n\n  const getSeconds = date => \n    date.getHours() * 60 * 60 +\n    date.getMinutes() * 60 +\n    date.getSeconds();\n\n  const helper_showTime = () => {\n    // console.log('asking for start time now');\n    props.socket.emit('client: ask for start time');\n  };\n\n  const showTime = () => {\n    try {\n      document.getElementById('showTimeBtn').click();\n      document.getElementById('showTimeBtn').disabled = true;\n    } catch (NotYetLoadedException) {\n      //\n    }\n  };\n\n\n\n  return (\n    <div>\n      <ProgressBar\n        curr={props.recordedProgress}\n        total={props.data_length - 1}\n        align={'left'}\n        strokeWidth={3}\n      />\n      <pre id='total_time_elapsed'>00:00:00</pre>\n      <pre id=\"total_words\"> / {props.totalWords}</pre>\n      <pre id='connection_status'></pre>\n      <pre id='num_files_saved'></pre>\n      {i++}\n      <pre\n        hidden={\n          props.recordGreenLight ||\n          props.helper_checkIfMobileView() ||\n          !qs('name')\n        }\n        className='warning_message'\n      >\n        Please Click Reset!\n      </pre>\n      <button\n        onClick={helper_showTime}\n        id='showTimeBtn'\n        className='hidden_button'\n      ></button>\n    </div>\n  );\n}\n\nStatus.propTypes = {\n  recordedProgress: PropTypes.number.isRequired,\n  data_length: PropTypes.number.isRequired,\n  recordGreenLight: PropTypes.bool.isRequired,\n  helper_checkIfMobileView: PropTypes.func.isRequired,\n  socket: PropTypes.object.isRequired,\n  totalWords: PropTypes.number.isRequired\n\n};","/**\n * **Based on: http://www.cssscript.com/demo/pure-css-css3-smooth-toggle-switch/**\n */\n\nimport React, { useEffect }from 'react'\nimport './toggle.scss'\nimport PropTypes from 'prop-types';\n\n/**\n * \n * @param {*} props \n */\nexport default function Toggle(props) {\n  useEffect(() => {\n    const toggle = document.getElementById(props.id);\n    try {\n      toggle.addEventListener('change', () => {\n        props.onChangeFunc(toggle.checked);\n      });\n      // document.getElementsByClassName('switch-wrapper')[0].addEventListener('mouseover', () => {\n      //   document.getElementsByClassName('inset-toggle')[0].classList.add('switch-hover');\n      //   console.log('hovered over')\n      // });\n      // document.getElementsByClassName('switch-wrapper')[0].addEventListener('mouseout', () => {\n      //   document.getElementsByClassName('inset-toggle')[0].classList.remove('switch-hover');\n      //   console.log('hovered out')\n      // })\n    } catch (NotYetLoadedException) {\n      //\n    }\n  }, [])\n  return (\n    <div className=\"switch-wrapper\">\n      <div className=\"switch\">\n      <div className=\"invisible_pushdown\"></div>\n        <input type=\"checkbox\" name=\"toggle\" id={props.id}  checked={props.checked} onChange={props.updateDebugMode}/>\n        <label htmlFor=\"toggle\" className=\"inset-toggle\"><i>🕷</i></label>\n      </div>  \n    </div>\n  )\n}\n\nToggle.propTypes = {\n  id: PropTypes.string.isRequired,\n  onChangeFunc: PropTypes.func.isRequired,\n  checked: PropTypes.bool.isRequired,\n  updateDebugMode: PropTypes.func.isRequired\n}","import React from 'react'\nimport './Checkmark.scss'\n\n/**\n * **Based on: https://codepen.io/ashleygalante/pen/nwoKh**\n */\nexport default function Checkmark() {\n  return (\n    <div className=\"checkmark\">\n      <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 161.2 161.2\" enableBackground=\"new 0 0 161.2 161.2\" xmlSpace=\"preserve\">\n        <path className=\"path\" fill=\"none\" stroke=\"#FFBA49\" strokeMiterlimit=\"10\" d=\"M425.9,52.1L425.9,52.1c-2.2-2.6-6-2.6-8.3-0.1l-42.7,46.2l-14.3-16.4\n          c-2.3-2.7-6.2-2.7-8.6-0.1c-1.9,2.1-2,5.6-0.1,7.7l17.6,20.3c0.2,0.3,0.4,0.6,0.6,0.9c1.8,2,4.4,2.5,6.6,1.4c0.7-0.3,1.4-0.8,2-1.5\n          c0.3-0.3,0.5-0.6,0.7-0.9l46.3-50.1C427.7,57.5,427.7,54.2,425.9,52.1z\"/>\n        <circle className=\"path\" fill=\"none\" stroke=\"#FFBA49\" strokeWidth=\"4\" strokeMiterlimit=\"10\" cx=\"80.6\" cy=\"80.6\" r=\"62.1\"/>\n        <polyline className=\"path\" fill=\"none\" stroke=\"#FFBA49\" strokeWidth=\"6\" strokeLinecap=\"round\" strokeMiterlimit=\"10\" points=\"113,52.8 \n          74.1,108.4 48.2,86.4 \"/>\n        <circle className=\"spin\" fill=\"none\" stroke=\"#FFBA49\" strokeWidth=\"4\" strokeMiterlimit=\"10\" strokeDasharray=\"12.2175,12.2175\" cx=\"80.6\" cy=\"80.6\" r=\"73.9\"/>\n      </svg>\n      <p id=\"complete_message\">🔥 恭喜您完成 🔥</p>\n    </div>\n  )\n}\n","import React from 'react'\nimport './Fireworks.scss'\n\nexport default function Fireworks() {\n  return (\n    <div className=\"pyro\">\n      <div className=\"before\"></div>\n      <div className=\"after\"></div>\n      </div>\n  )\n}\n","import React from 'react'\nimport Checkmark from './Checkmark/Checkmark'\nimport Fireworks from './Fireworks/Fireworks'\nimport './CompleteAnimation.scss'\n\nexport default function CompleteAnimation() {\n  return (\n    <div className=\"CompleteAnimationBG\">\n      <Fireworks />\n      <Checkmark />\n    </div>\n  )\n}","/* eslint-disable no-console */\nimport React from 'react';\nimport update from 'react-addons-update'\nimport qs from '../utils/qs'\nimport cogoToast from 'cogo-toast';\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport io from 'socket.io-client';\n\n// scss\nimport './App.scss';\n\n// components\nimport CameraList from '../components/CameraList/CameraList';\nimport Tester from '../components/Tester/Tester';\nimport DataCollection from '../components/Table/DataCollection';\nimport Modal from '../components/Modal'\nimport Status from '../components/Status'\nimport Toggle from '../components/Toggle/Toggle'\nimport CompleteAnimation from '../components/CompleteAnimation/CompleteAnimation'\n\n// data\nimport sentences from '../assets/data/sentences.txt';\n// import sentences from '../assets/data/sentences-english-test.txt';\n\n// util\nimport ip_util from '../utils/ip'\n\n// chevron\nimport up_chevron from '../assets/svg/up-chevron.svg'\nimport down_chevron from '../assets/svg/down-chevron.svg'\n\n\nclass App extends React.Component {\n  per_page = 8;\n  curr_index = qs('sentence_index');\n  ip_address = 'http://192.168.0.103:5000'\n  /**\n   * Constructor for main react App Component\n   * @param {object} props \n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      requiredNumCams: 1,\n      curr_sentence: '',\n      curr_sentence_index: this.curr_index ? Number(this.curr_index) : 0,\n      data: [],\n      per_page: this.per_page,\n      curr_page: this.curr_index ? Math.floor(Number(this.curr_index) / this.per_page) + 1 : 1,\n      computerStatus: {},\n      recordGreenLight: false,\n      computerID: -1,\n      numFilesSavedTotal: 0,\n      numFilesSavedInd: 0,\n      connectedOrderMap: {},\n      recordedProgress: 0,\n      addCamState: false,\n      totalTime: [],\n      startTime: undefined,\n      totalWords: 0,\n      remainingWords: 0,\n      debugMode: true,\n      socket: io(this.ip_address),\n      ip: this.ip_address,\n      connectedToServer: false,\n      detectedNumCams: 0\n    };\n  }\n\n  /**\n   * **ReactJS Framework Method**  \n   */\n  render() {\n    return (\n      <Router>\n        <Route path='/' exact component={this.main_userView} />\n        <Route path='/admin' exact component={this.main_adminView} />\n        <Route path='/playground' exact component={this.main_playground} />\n        {this.comp_modals()}\n        {this.comp_completeAnimation()}\n      </Router>\n    );\n  }\n\n  showNoCamsRef = undefined;\n  hideServerOfflineRef = undefined;\n \n  /**\n   * **ReactJS Framework Method**\n   */\n  componentDidMount() {\n    // console.log(ip_util.getIP());\n    // console.log(ip_util);\n    try {\n      this.helper_emitInitialSocketMessages();\n      this.readTextFile(sentences);\n      this.initSocketListeners();\n      document.getElementById('debug_mode').checked = this.state.requiredNumCams === 1\n    \n    // this.pingServer();\n      window.addEventListener('keydown', this.handler_keydown);\n      window.addEventListener('keyup', this.handler_keyup);\n      this.showNoCamsRef = this.helper_showNoCamsConnected();\n      setTimeout(() => {\n        this.hideServerOfflineRef = this.helper_showServerNotOnline();\n      }, 3000)\n\n      // this.helper_addHoverEventListeners()\n      \n    } catch (NotYetLoadedException) {\n      //\n    }\n  }\n\n  helper_addHoverEventListeners = () => {\n    const debugHoverArea = document.getElementById('debug_hover_area');\n    const bottomHoverArea = document.getElementById('bottom_hover_area');\n    debugHoverArea.addEventListener('mouseout', this.handler_hoverMouseOutDebug);\n    debugHoverArea.addEventListener('mouseover', this.handler_hoverMouseOverDebug);\n    bottomHoverArea.addEventListener('mouseout', this.handler_hoverMouseOutBottom);\n    bottomHoverArea.addEventListener('mouseover', this.handler_hoverMouseOverBottom);\n  }\n  helper_removeHoverEventListeners = () => {\n    const debugHoverArea = document.getElementById('debug_hover_area');\n    const bottomHoverArea = document.getElementById('bottom_hover_area');\n    debugHoverArea.removeEventListener('mouseout', this.handler_hoverMouseOutDebug);\n    debugHoverArea.removeEventListener('mouseover', this.handler_hoverMouseOverDebug);\n    bottomHoverArea.removeEventListener('mouseout', this.handler_hoverMouseOutBottom);\n    bottomHoverArea.removeEventListener('mouseover', this.handler_hoverMouseOverBottom);\n    this.handler_hoverMouseOverBottom();\n  }\n\n  handler_hoverMouseOutDebug = () => {\n    try {\n      document.getElementsByClassName('debug-group')[0].className += ' ' + 'hideDebug'\n    } catch (NotYetLoadedException) {\n      console.error(NotYetLoadedException)\n    }\n  }\n\n  handler_hoverMouseOverDebug = () => {\n    try {\n      document.getElementsByClassName('debug-group')[0].classList.remove('hideDebug');\n    } catch (NotYetLoadedException) {\n      console.error(NotYetLoadedException)\n    }\n  }\n\n  handler_hoverMouseOutBottom = () => {\n    try {\n      document.getElementsByClassName('contents')[0].className += ' ' + 'hideBottom'\n    } catch (NotYetLoadedException) {\n      console.error(NotYetLoadedException)\n    } \n  }\n\n  handler_hoverMouseOverBottom = () => {\n    try {\n      document.getElementsByClassName('contents')[0].classList.remove('hideBottom');\n    } catch (NotYetLoadedException) {\n      console.error(NotYetLoadedException)\n    }\n  }\n\n  helper_toggleHideDebug = () => {\n    console.log('toggling')\n    try {\n      if (document.getElementsByClassName('debug-group')[0].className.includes('hideDebug')) {\n        this.handler_hoverMouseOverDebug();\n      } else {\n        this.handler_hoverMouseOutDebug();\n      }\n    } catch (NotYetLoadedException) {\n      // \n    }\n  }\n  \n  helper_toggleHideBottom = () => {\n    console.log('toggling')\n    try {\n      if (document.getElementsByClassName('contents')[0].className.includes('hideBottom')) {\n        this.handler_hoverMouseOverBottom();\n      } else {\n        this.handler_hoverMouseOutBottom();\n      }\n    } catch (NotYetLoadedException) {\n      // \n    }\n  }\n\n  /**\n   * **ReactJS Framework Method** \n   */\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handler_keydown);\n  }\n\n  /**\n   * **Component: User Page** \n   * Renders components for desktop view\n   */\n  main_userView = () => {\n    return (\n      <div className='container'>\n        <span id=\"debug_hover_area\" > \n          {this.comp_debug()} \n        </span> \n        {this.comp_tester()}\n        <span id=\"bottom_hover_area\">\n          <div className='contents'>\n            <div style={{width: '100%', height: '100%'}} onClick={this.helper_toggleHideBottom}>\n              <img className=\"chevron\" src={down_chevron}></img>\n            </div>\n            <div className=\"panel_container\">\n              <div className='left_panel'>{this.comp_dataCollection()}</div>\n              <div className='right_panel'>\n                <h3>Cameras</h3>\n                <div className='cameras_container' >\n                  {this.comp_cameraList()}\n                </div>\n              </div>\n            </div>\n          </div>\n        </span>\n\n      </div>\n    );\n  };\n\n  /**\n   * **Component: Admin Page**\n   * Renders components for mobile view\n   */\n  main_adminView = () => {\n    return <div style={{textAlign: 'center'}}>{this.comp_debug()}</div>;\n  };\n\n  /** \n   * **Component: PlaygroundPage**\n   * Renders components for experimental purposes\n   */\n  main_playground = () => {\n    return (\n      <Toggle />\n    )\n  }\n\n  comp_debugHover = () => {\n    \n  }\n\n  /**\n   * **Component: Animation for Study Completion**\n   */\n  comp_completeAnimation = () => {\n    if (this.state.recordedProgress + 1 === this.state.data.length) {\n      try {\n        document.getElementById('testerNextBtn').disabled = true;\n      } catch(NotYetLoadedException) {\n        //\n      }\n      return (\n        <CompleteAnimation />\n      )\n    }\n  }\n\n  // * COMPONENT * //\n  comp_dataCollection = () => {\n    return (\n      <DataCollection\n        data={this.state.data}\n        updateName={this.updateName}\n        curr_sentence={this.state.curr_sentence}\n        socket={this.state.socket}\n        curr_sentence_index={this.state.curr_sentence_index}\n        curr_page={this.state.curr_page}\n        updatePage={this.updatePage}\n      />\n    );\n  };\n\n  // * COMPONENT * //\n  comp_tester = () => {\n    return (\n      <Tester\n        updateSentence={this.updateSentence}\n        data={this.state.data}\n        curr_sentence_index={this.state.curr_sentence_index}\n        data_length={this.state.data.length}\n        first_sentence={this.state.data[this.state.curr_sentence_index]}\n        curr_sentence={this.state.curr_sentence}\n        socket={this.state.socket}\n        recordGreenLight={\n          this.state.recordGreenLight &&\n          this.state.numFilesSavedTotal % this.state.requiredNumCams === 0\n        }\n        debugMode={this.state.debugMode}\n        numFilesSaved={this.state.numFilesSavedTotal}\n        numCams={this.state.requiredNumCams}\n        updateGreenLightStatus={this.updateGreenLightStatus}\n        recordedProgress={this.state.recordedProgress}\n        updateRecordProgress={this.updateRecordProgress}\n        totalTime={this.state.totalTime}\n        updateTotalTime={this.updateTotalTime}\n        showFileSavingLoader={this.disp_showFileSavingLoader}\n        connectedToServer={this.state.connectedToServer}\n      />\n    );\n  };\n\n  // * COMPONENT * //\n  comp_cameraList = () => {\n    return (\n      <CameraList\n        socket={this.state.socket}\n        computerID={this.state.computerID}\n        computerStatus={this.state.computerStatus}\n        updateConnectionStatus={this.updateConnectionStatus}\n        addCamState={this.state.addCamState}\n        toggleCamState={this.helper_toggleCamState}\n        updateDetectedNumCams={this.updateDetectedNumCams}\n        addCam={this.admin_resetCams}\n      />\n    );\n  };\n\n  // * COMPONENT * //\n  comp_status = () => {\n    return (\n      <Status\n        totalWords={this.state.totalWords}\n        data_length={this.state.data.length}\n        recordedProgress={this.state.recordedProgress}\n        helper_checkIfMobileView={this.helper_checkIfMobileView}\n        recordGreenLight={this.state.recordGreenLight}\n        socket={this.state.socket}\n      />\n    );\n  };\n\n  // * COMPONENT * //\n  comp_modals = () => {\n    return (\n      <div>\n        <Modal\n          modalID={'resetProgressModal'}\n          socket={this.state.socket}\n          title={'Are you sure?'}\n          message={'Resetting progress will be permanent.'}\n          buttonCancel={'Cancel'}\n          buttonConfirm={'Reset Progress'}\n          buttonConfirmId={'resetProgressBtn'}\n          toast={'Progress reset'}\n          confirmFunc={this.admin_resetProgress}\n        />\n        <Modal\n          modalID={'overallStatus'}\n          socket={this.state.socket}\n          title={'Status'}\n          onLoadFunc={this.getStatus}\n          message={this.comp_status()}\n          buttonConfirm={'Hide'}\n        />\n      </div>\n    );\n  };\n\n  updateDebugMode = () => {\n    this.setState({debugMode: !this.state.debugMode});\n  }\n\n  // * COMPONENT * //\n  comp_debug = () => {\n    return (\n      <div className=\"debug-group\">\n        <span className=\"vert-bar\">|</span>\n        <label className=\"debug_label\">Admin: </label>\n\n        <button\n          onClick={() => {\n            this.helper_toggleModal('overallStatus');\n            this.getStatus();\n          }}\n          className='debug_button'\n        >\n          Status\n        </button>\n        <button\n          id='resetCamsBtn'\n          className='debug_button'\n          onClick={this.admin_resetCams}\n        >\n          Add Webcam\n        </button>\n        <button\n          className='debug_button'\n          onClick={() => {\n            this.helper_toggleModal('resetProgressModal');\n          }}\n        >\n          Reset Progress\n        </button>\n        <span className=\"vert-bar\">|</span>\n        \n        <div className=\"debug_inline_group\">\n          <label className=\"debug_label\">Debug: </label>\n          <Toggle id='debug_mode' onChangeFunc={this.handler_debugToggle} checked={this.state.debugMode} updateDebugMode={this.updateDebugMode}/>\n        </div>\n        <span className=\"vert-bar\">|</span>\n\n        <br/>\n        <span className=\"vert-bar\">|</span>\n        <div className=\"debug_inline_group\">\n          <label htmlFor=\"\" className=\"debug_label\">Cams: </label>\n          <input type=\"text\" className=\"debug_text_input debug_sm_input\" value={this.state.detectedNumCams} readOnly/>\n        </div>\n        \n        <div className=\"debug_inline_group\">\n          <span className=\"vert-bar\">|</span>\n          <label htmlFor=\"\" className=\"debug_label\">Server: </label>\n          <span className=\"server_status\"></span>\n          <input id=\"inputServerIP\" type=\"text\" className=\"debug_text_input\" value={this.state.ip} onChange={this.handler_IPOnChange}/>\n          <button className='debug_button' onClick={this.handler_useThisCompAsServer}>🖥</button>\n        </div>\n\n\n\n        <span className=\"vert-bar\">|</span>\n\n        \n        <div style={{width: '100%', height: '100%'}} onClick={this.helper_toggleHideDebug}>\n          <img className=\"chevron\" src={up_chevron}></img>\n        </div>\n        \n        {/* <button className='debug_button' onClick={this.admin_refreshAll}>\n          Refresh All\n        </button> */}\n\n        <button\n          onClick={this.disp_showFileSavedMessage}\n          id='showSavedFilesBtn'\n          className='hidden_button'\n        ></button>\n\n        {/* <pre hidden={this.state.numCams === 8}>\n          debug mode, remember to change num cams back to 8\n        </pre> */}\n      </div>\n    );\n  };\n\n  // * UTILITY * //\n  readTextFile(file) {\n    return fetch(file)\n      .then(response => response.text())\n      .then(text => {\n        this.setState({ data: text.split('\\n') }, () => {\n          let curr_sentence = qs('sentence_index')\n            ? this.state.data[Number(qs('sentence_index'))]\n            : this.state.data[0];\n          this.setState({ curr_sentence }, () => {\n            // console.log(this.state.curr_sentence)\n          });\n          this.setState({\n            totalWords: this.state.data.reduce((sum, sentence) => sum + sentence.length, 0)\n          })\n        });\n      });\n  }\n\n  /**\n   * * UPDATE * \n   * \n   */\n  updateFilesSaved = numFiles => {\n    const successMessage =\n      numFiles % this.state.requiredNumCams === 0\n        ? ' (successful)'\n        : ' (not all cams saved!!)';\n    this.setState({\n      numFilesSavedTotal: numFiles\n    });\n    try {\n      document.getElementById('num_files_saved').innerHTML =\n        'Total Files Saved: ' + numFiles + successMessage;\n    } catch (NotYetLoadedException) {\n      // console.error(NotYetLoadedException);\n    }\n  };\n\n  handler_useThisCompAsServer = () => {    \n    ip_util.clientGetIP(ip => {\n      console.log(ip);\n      if (ip.split('.').length === 4) {\n        cogoToast.loading(this.style_makeEmojiToastLayout(['Connecting to ', ip], '📡'), {\n          position: 'top-right', \n          onClick: hide => {\n            hide()\n          }\n        });\n        ip = 'http://' + ip + ':5000'\n        this.helper_setServerIP(ip);\n        if (!this.hideServerOfflineRef) {\n          this.hideServerOfflineRef = this.helper_showServerNotOnline();\n        } else {\n          this.hideServerOfflineRef();\n        }\n      }\n    });\n    // const [ip_v6, ip_v4] = [temp[0], temp[1]]\n    // console.log(ip_v4);\n  }\n\n  handler_IPOnChange = e => {\n    this.setState({ip: e.target.value})\n  }\n\n  handler_debugToggle = debugMode => {\n    console.log('toggling debug mode')\n    this.setState({debugMode}, () => {\n      if (debugMode) {\n        this.setState({requiredNumCams: 1});\n        this.helper_removeHoverEventListeners()\n      } else {\n        this.setState({requiredNumCams: 8});\n        this.helper_addHoverEventListeners()\n        this.handler_hoverMouseOutBottom();\n      }\n    });\n\n\n  }\n\n  handler_fileSaveSuccess = numFiles => {\n    this.updateFilesSaved(numFiles);\n    this.setState({\n        numFilesSavedInd: this.state.numFilesSavedInd + 1\n      },\n      () => {\n        console.log(\n          'this occured: ' + this.state.numFilesSavedInd + ' times.'\n        );\n        try {\n          document.getElementById('testerNextBtn').disabled = true;\n        } catch (NotYetLoadedException) {\n          //\n        }\n        if (this.state.numFilesSavedInd === this.state.requiredNumCams) {\n          console.log('correct number of files saved');\n          try {\n            document.getElementById('showSavedFilesBtn').click();\n            document.getElementById('showSavedFilesBtn').disabled = true;\n            this.setState({\n                numFilesSavedInd: 0\n              },\n              () => {\n                cogoToast.success(\n                  this.style_makeEmojiToastLayout(\n                    ['视频已成功保存', '可继续录'],\n                    '🔥'\n                  ), {\n                    hideAfter: 1,\n                    onClick: hide => {\n                      hide()\n                    }\n                  }\n                );\n              }\n            );\n\n            this.updateGreenLightStatus(true);\n          } catch (Exception) {\n            console.error(Exception);\n          }\n          try {\n            if (this.helper_checkIfMobileView()) {\n              // console.log('here here??');\n              cogoToast.info(\n                'Completed @ Sentence [' + this.state.recordedProgress + ']', {\n                  hideAfter: 0.75,\n                  onClick: hide => {\n                    hide()\n                  }\n                }\n              );\n            }\n          } catch (NotYetLoadedException) {\n            console.error(NotYetLoadedException);\n          }\n        }\n      }\n    );\n  }\n\n  updateDetectedNumCams = detectedNumCams => {\n    this.setState({ detectedNumCams });\n    this.showNoCamsRef();\n    try {\n      document.getElementsByClassName('debug_sm_input')[0].className += (this.state.detectedNumCams > 0) ? \" serverPlaceholderConnected\" : \"\"\n    } catch (NotYetLoadedException) {\n      //\n    }\n  }\n\n  /** \n   * * UPDATE *\n   * Updates the state computerID with param id\n   * @param {string} id \n  */\n  updateCompID = id => {\n    const status = {};\n    this.setState({ computerID: id });\n    status[this.state.computerID] = [];\n    this.setState({ computerStatus: status }, () => {\n      // console.log(\"init computer status\", this.state.computerStatus);\n    });\n  };\n\n  /**\n   * * STYLE *\n   * Takes a string and finds a substring and returns a stylized version of it,\n   * specifically to add the 🖥 icon in front of the ID.\n   * @param {string} str The full string\n   * @param {string} find The particular substring to find\n   * @returns {string} The stylized string\n   */\n  style_addThisCpuIcon = (str, find) => {\n    var re = new RegExp(find, 'g');\n    return str.replace(re, '🖥: ' + find);\n  };\n\n  style_makeEmojiToastLayout = (msg, emoji) => {\n    return (\n      <div className='cogo-toast'>\n        <div className='cogo-toast-emoji-left'> {emoji}</div>\n        <div>\n          {msg[0]}\n          <br />\n          {msg[1]}\n        </div>\n        <div className='cogo-toast-emoji-right'> {emoji}</div>\n      </div>\n    );\n  };\n\n  ref_hideLoader = undefined;\n  disp_showFileSavingLoader = () => {\n    this.ref_hideLoader = cogoToast.loading(\n      this.style_makeEmojiToastLayout(['视频正在保存', '请耐心等待'], '⌛️'), {\n        onClick: hide => {\n          hide()\n        }\n      }\n    );\n    // setTimeout(hideLoader, 2000);\n    // hideLoader();\n    // this.setState({ hideLoader }, () => {\n    //   console.log(hideLoader);\n    // });\n  };\n\n  disp_showFileSavedMessage = () => {\n    try {\n      this.ref_hideLoader();\n    } catch (NotOnPageError) {\n      //\n    }\n  };\n\n  /**\n   * **Socket Listeners**\n   * Adds socket listeners to the page to respond to messages sent\n   * from server\n   */\n  initSocketListeners = () => {\n    this.state.socket.on('server: online', () => {\n      cogoToast.success('Server is online.', {\n        position: 'top-right', \n        hideAfter: 0, \n        onClick: hide => {\n          hide();\n        }\n      });\n      if (this.hideServerOfflineRef) this.hideServerOfflineRef();\n      document.getElementsByClassName('server_status')[0].classList.add('server_online');\n      document.getElementById('inputServerIP').classList.add('serverPlaceholderConnected');\n      \n    });\n    if (!this.hideServerOfflineRef) {\n      this.hideServerOfflineRef = this.helper_showServerNotOnline();\n    } else {\n      this.hideServerOfflineRef();\n    }\n\n    this.state.socket.on('server: disconnected', () => {\n      this.setState({ connectedToServer: false}, () => {\n        document.getElementsByClassName('server_status')[0].classList.remove('server_online');\n        document.getElementById('inputServerIP').classList.remove('serverPlaceholderConnected')\n      });\n    });\n\n    this.state.socket.on('server: connected', computerID => {\n      console.log('detected server connected')\n      this.setState({ connectedToServer: true, computerID}, () => {\n        document.getElementsByClassName('server_status')[0].classList.add('server_online');\n        document.getElementById('inputServerIP').classList.add('serverPlaceholderConnected')\n      });\n    });\n    \n    this.state.socket.on('server: connected sync id', id => {\n      if (this.updateCompID) this.updateCompID(id);\n      this.updateCompID = null;\n    });\n\n    this.state.socket.on('server: reset cams', () => {\n      this.updateGreenLightStatus(true);\n    });\n\n    this.state.socket.on('server: response for connection status', status => {\n      try {\n        document.getElementById(\n          'connection_status'\n        ).innerHTML = this.style_addThisCpuIcon(\n          JSON.stringify(status, null, 2),\n          this.state.computerID\n        );\n      } catch (NotOnPageError) {\n        //\n      }\n    });\n\n    this.state.socket.on('server: response for progress', progress => {\n      this.setState({ recordedProgress: progress ? progress : 0 });\n    });\n\n    this.state.socket.on('server: response for numFilesSaved', numFiles => {\n      this.updateFilesSaved(numFiles);\n    });\n\n    this.state.socket.on('server: save files successful', numFiles => {\n      this.handler_fileSaveSuccess(numFiles);\n    });\n\n    this.state.socket.on('server: computer connected order', connectedOrder => {\n      this.setState({\n        connectedOrderMap: update(this.state.connectedOrderMap, {\n          $merge: connectedOrder\n        })\n      });\n    });\n\n    const refreshRates = [0, 666, 1332];\n    this.state.socket.on('server: refresh all', () => {\n      const conectedOrderNum = this.state.connectedOrderMap[\n        this.state.computerID\n      ];\n      const indexRefresh = conectedOrderNum % 3;\n      const time = refreshRates[indexRefresh];\n      setTimeout(() => {\n        window.location.reload(false);\n      }, time);\n    });\n  };\n\n  async pingServer() {\n    try {\n      const serverID = this.state.socket.io.opts.hostname;\n      const response = await fetch(serverID, { mode: 'no-cors' });\n      if (!response.ok) {\n        console.error('no response from server');\n      } else {\n        console.log('connection successful');\n      }\n    } catch (ServerPingFailedException) {\n      console.error(ServerPingFailedException);\n    }\n  }\n\n  /**\n   * **Update: Sentence** \n   * Sent as a prop to components to update app-level state of \n   * curr_sentence_index, and updates server with new index. It also updates \n   * url query without refreshing to reflect current index.\n   * @param {string} curr_sentence\n   */\n  updateSentence = curr_sentence => {\n    if (curr_sentence === '$next') {\n      this.setState({curr_sentence_index: this.state.curr_sentence_index + 1},\n        () => {\n          this.updateSentence(\n            this.state.data[this.state.curr_sentence_index]\n          );\n          this.state.socket.emit('client: update sentence_index', {\n            name: qs('name'),\n            curr_sentence_index: this.state.curr_sentence_index\n          });\n        }\n      );\n    } else if (curr_sentence === '$prev') {\n      this.setState(\n        {\n          curr_sentence_index: Math.max(this.state.curr_sentence_index - 1, 0)\n        },\n        () => {\n          this.updateSentence(this.state.data[this.state.curr_sentence_index]);\n          this.state.socket.emit('client: update sentence_index', {\n            name: qs('name'),\n            curr_sentence_index: this.state.curr_sentence_index\n          });\n        }\n      );\n    } else {\n      window.history.pushState(\n        null,\n        null,\n        '?name=' +\n          qs('name') +\n          '&sentence_index=' +\n          this.state.curr_sentence_index\n      );\n      // console.log(curr_sentence);\n      this.setState({\n        curr_sentence,\n        curr_page:\n          Math.floor(\n            Number(this.state.curr_sentence_index) / this.state.per_page\n          ) + 1\n      });\n    }\n  };\n\n  updatePage = new_page => {\n    if (new_page === 0) {\n      // do nothing\n    }\n    console.log('update page', new_page);\n    this.setState({\n      curr_page: new_page >= 1 ? new_page : 1\n    });\n  };\n\n  updateRecordProgress = curr_sentence_index => {\n    // { <sentence_index> : <bool: recorded/not> }\n    this.setState(\n      {\n        recordedProgress: curr_sentence_index\n      },\n      () => {\n        this.state.socket.emit(\n          'client: update recording progress',\n          curr_sentence_index\n        );\n      }\n    );\n  };\n\n  updateConnectionStatus = recordingStatus => {\n    if (this.state.computerStatus[this.state.computerID]) {\n      const status = {};\n      status[this.state.computerID] = recordingStatus;\n      this.setState({ computerStatus: status }, () => {\n      });\n      this.state.socket.emit('client: update recording status', status);\n    }\n    this.getStatus();\n  };\n\n  updateGreenLightStatus = bool => {\n    this.setState({ recordGreenLight: bool });\n  };\n\n  updateTotalTime = time => {\n    this.setState({ totalTime: time });\n  };\n\n  getStatus = () => {\n    this.state.socket.emit('client: ping for connection status');\n    this.state.socket.emit('client: ping for numFilesSaved');\n    this.state.socket.emit('client: ping for progress');\n  };\n\n  admin_resetCams = () => {\n    // cogoToast.info('Adding Cam', {hideAfter: 1})\n    // this.state.socket.emit('client: stop cams');\n    this.updateGreenLightStatus(true);\n    this.state.socket.emit('client: reset cams');\n    try {\n      document.getElementById('addCamBtn').click();\n    } catch (NotYetLoadedException) {\n      //\n    }\n    this.state.socket.emit('client: dummy vid, do not save');\n    // cogoToast.info('Cams are reset', { hideAfter: 0.3 });\n    // setTimeout(() => document.getElementById('resetCamsBtn').classList.remove('btn-active'), 1000);\n\n  };\n\n  admin_refreshAll = () => {\n    this.state.socket.emit('client: refresh all');\n  };\n\n  admin_resetProgress = () => {\n    this.state.socket.emit('client: update recording progress', 0);\n    this.state.socket.emit('client: delete total time');\n    this.state.socket.emit('client: reset total files');\n    this.state.socket.emit('client: save total start time', new Date());\n    window.location = window.location.origin;\n    this.state.socket.emit('client: save total time', [0, 0, 0]);\n  };\n\n  helper_emitInitialSocketMessages = () => {\n    if (!this.helper_checkIfMobileView) {\n      this.state.socket.emit('client: update sentence_index', {\n        name: qs('name'),\n        curr_sentence_index: this.state.curr_sentence_index\n      });\n    } else {\n      this.state.socket.emit('client: ask for recording status');\n    }\n    this.state.socket.emit('client: check for progress');\n    this.state.socket.emit('client: ask for sync id');\n  }\n\n  helper_toggleModal = id => {\n    document.getElementById(id).click();\n  };\n\n  helper_checkIfMobileView = () => {\n    return window.location.href.includes('mobile');\n  };\n\n  helper_showNoCamsConnected = () => {\n    return cogoToast.warn(\"No Webcams\", {\n      hideAfter: 0,\n      position: 'top-left'\n    });\n  }\n\n  helper_showServerNotOnline = () => {\n    console.log('no server')\n    return cogoToast.warn(\"Server is offline\", {\n      hideAfter: 0,\n      position: 'top-right'\n    });\n  }\n\n  helper_setServerIP = ip => {\n    this.state.socket.disconnect();\n    try {\n      document.getElementsByClassName('server_status')[0].classList.remove('server_online');\n      document.getElementById('inputServerIP').classList.remove('serverPlaceholderConnected');\n    } catch(NotYetLoadedException) {\n      //\n    }\n    this.setState({\n      socket: io(ip),\n      ip: ip\n    });\n    this.state.socket.emit('client: check server connection')\n    // if (hideLoadServer) {hideLoadServer()}\n    setTimeout(() => {\n      if (!document.getElementsByClassName('server_status')[0].className.includes('server_online')) {\n        this.hideServerOfflineRef = this.helper_showServerNotOnline();\n      }\n    }, 3000);\n    this.initSocketListeners();\n  }\n\n  helper_toggleCamState = () => {\n    this.setState({ addCamState: !this.state.addCamState });\n  };\n\n  handler_keyup() {\n    for (const btn of document.getElementsByClassName('debug_button')) {\n      btn.classList.remove('btn-active');\n    }\n  }\n\n  handler_keydown = (event) => {\n    let key = event.key;\n    const inputServerIP = document.getElementById('inputServerIP');\n\n    if ([' ', 'ArrowLeft', 'ArrowRight', 'Escape', 'Enter', 's'].includes(key)) {\n      try {\n        if (key === ' ') {\n          document.getElementById('testerRecordBtn').click();\n          event.preventDefault();\n        } else if (key === 'ArrowLeft') {\n          if (document.activeElement !== inputServerIP) {\n            document.getElementById('testerPrevBtn').click();\n            event.preventDefault();\n          }\n        } else if (key === 'ArrowRight') {\n          if (document.activeElement !== inputServerIP) {\n            document.getElementById('testerNextBtn').click();\n            event.preventDefault();\n          }\n        } else if (key === 'Escape') {\n          document.getElementById('resetCamsBtn').click();\n          event.preventDefault();\n        } else if (key === 'Enter') {\n          console.log('detected enter key');\n          if (document.getElementsByClassName('modali-button-destructive')[0]) {\n            document.getElementsByClassName('modali-button-destructive')[0].click();\n            this.admin_resetProgress();\n          }\n          if (document.activeElement === inputServerIP) {\n            this.helper_setServerIP(inputServerIP.value);\n            cogoToast.info('Updated IP: ' + inputServerIP.value, {\n              onClick: hide => {\n                hide()\n              }\n            })\n            event.preventDefault();\n          }\n        } else if (key === 's') {\n          if (document.activeElement !== document.getElementById('name')) this.helper_toggleModal('overallStatus');\n        }\n      } catch (NotYetLoadedException) {\n        // console.error(NotYetLoadedException);\n      }\n    }\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App.js';\n\nReactDOM.render(<App />, document.getElementById('root'));","module.exports = __webpack_public_path__ + \"static/media/collapse-chevron.126ea5d6.svg\";","module.exports = __webpack_public_path__ + \"static/media/expand-chevron.fd7409a7.svg\";","module.exports = __webpack_public_path__ + \"static/media/beg.565428a5.svg\";","module.exports = __webpack_public_path__ + \"static/media/end.b927e101.svg\";","module.exports = __webpack_public_path__ + \"static/media/sentences.16736696.txt\";","const os = require('os');\nconst ifaces = os.networkInterfaces();\n\nconst nodeGetIP = () => {\n  let address = undefined;\n  Object.keys(ifaces).forEach(function (ifname) {\n    ifaces[ifname].forEach(function (iface) {\n      if ('IPv4' !== iface.family || iface.internal !== false) {\n        // skip over internal (i.e. 127.0.0.1) and non-ipv4 addresses\n        return;\n      }\n      if (ifname === 'en0') {\n        address = iface.address;\n      }\n    });\n  });\n  console.log(address);\n  return address;\n}\n\nconst clientGetIP = onNewIP => { //  onNewIp - your listener function for new IPs\n  var myPeerConnection = window.RTCPeerConnection || window.mozRTCPeerConnection || window.webkitRTCPeerConnection; //compatibility for firefox and chrome\n  var pc = new myPeerConnection({\n      iceServers: []\n    }),\n    noop = function () {},\n    localIPs = {},\n    ipRegex = /([0-9]{1,3}(\\.[0-9]{1,3}){3}|[a-f0-9]{1,4}(:[a-f0-9]{1,4}){7})/g;\n\n  function ipIterate(ip) {\n    if (!localIPs[ip]) onNewIP(ip);\n    localIPs[ip] = true;\n  }\n  pc.createDataChannel(\"\"); //create a bogus data channel\n  pc.createOffer(function (sdp) {\n    sdp.sdp.split('\\n').forEach(function (line) {\n      if (line.indexOf('candidate') < 0) return;\n      line.match(ipRegex).forEach(ipIterate);\n    });\n    pc.setLocalDescription(sdp, noop, noop);\n  }, noop); // create offer and set local description\n  pc.onicecandidate = function (ice) { //listen for candidate events\n    if (!ice || !ice.candidate || !ice.candidate.candidate || !ice.candidate.candidate.match(ipRegex)) return;\n    ice.candidate.candidate.match(ipRegex).forEach(ipIterate);\n  };\n}\n\nmodule.exports = {\n  nodeGetIP,\n  clientGetIP\n}","module.exports = __webpack_public_path__ + \"static/media/up-chevron.fc2195aa.svg\";","module.exports = __webpack_public_path__ + \"static/media/down-chevron.61cf0702.svg\";"],"sourceRoot":""}