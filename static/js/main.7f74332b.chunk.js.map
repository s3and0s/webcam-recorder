{"version":3,"sources":["utils/qs.js","components/Webcam/Webcam.js","components/CameraList/CameraList.js","components/NameField/NameField.js","components/Tester/InProcessScreen.js","components/ProgressBar.js","components/Tester/Tester.js","components/Table/TableHeader.js","components/Table/TableRow.js","components/Table/TableData.js","components/Table/PageNum.js","components/Table/PageInput.js","components/Table/TableFooter.js","components/Table/Table.js","components/Table/DataCollection.js","components/Modal.js","components/Status.js","components/Toggle/Toggle.js","components/CompleteAnimation/Checkmark/Checkmark.js","components/CompleteAnimation/Fireworks/Fireworks.js","components/CompleteAnimation/CompleteAnimation.js","app/App.js","index.js","assets/svg/collapse-chevron.svg","assets/svg/expand-chevron.svg","assets/svg/beg.svg","assets/svg/end.svg","assets/data/sentences.txt","utils/ip.js","assets/svg/up-chevron.svg","assets/svg/down-chevron.svg"],"names":["qs","id","parsedUrl","URL","window","location","href","searchParams","has","get","Webcam","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isRecording","recorder","videoSrc","videoEle","startTime","video","React","createRef","today","Date","getFullYear","getMonth","getDate","getTime","react_default","a","createElement","className","onClick","startRecording","controls","autoPlay","playsInline","muted","ref","props","videoRef","name","Component","CameraList","_useState","useState","_useState2","slicedToArray","availableCams","setAvailableCams","_useState3","_useState4","recordingStatus","setRecordingStatus","_useState5","_useState6","availableMics","setAvailableMics","_useState7","_useState8","pluggedInDevices","setPluggedInDevices","helper_extractRelevantCamInfo","device","camera_info","deviceId","label","groupId","initCams","navigator","mediaDevices","enumerateDevices","then","devices","videoDevices","micDevices","numCams","num","reduce","accumulator","kind","updateDetectedNumCams","helper_getNumCams","console","log","map","toLowerCase","includes","indexOf","push","helper_addToMicDevices","videodevices","devicePrior","filter","cam","mic_info","helper_addToVideoDevices","document","getElementById","click","disabled","catch","err","message","Array","prototype","diff","i","isMac","startFaceTimeCam","faceTimeDevice","defaultMic","cogoToast","success","position","hideAfter","hide","addNewCamMic","resolve","undefined","Promise","checkIfMac","Exception","allDevices","detectedTwoDevices","idAoni","newPluggedInID","length","warn","_getNewMicCam","newCam","newMic","error","getNewMicCam","_getNewMicCam2","newMicID","newCamDevice","temp","substring","initCamsDummy","stopAllCams","startAllCams","getUserMedia","audio","exact","frameRate","ideal","width","height","camera","RecordRTC","recorderType","MediaStreamRecorder","type","desiredSampRate","numberOfAudioChannels","disableLogs","getState","current","srcObject","NotYetLoadedException","triggerRecordStatusUpdate","dummy","stopRecording","blob","getBlob","socket","emit","sentence_index","camera_id","updateConnectionStatus","resumeAllCams","_unused","resumeRecording","useEffect","addCamState","on","addCam","comp_camsList","components_Webcam_Webcam","key","debug","debugControls","style","marginTop","renderCams","NameField","saveName","value","url_state","history","pushState","updateTesterContents","updateGreenLightStatus","isNameEmpty","replace","detectEnter","e","innerText","which","startBtn","buttons","placeholder","onKeyPress","autoFocus","required","InProcessScreen","recording","setRecordState","done_recording","setDoneRecording","reset_state","reset","nameSet","setName","updateSentence","data","getRecordState","curr_sentence_index","showFileSavingLoader","stopTimer","updateRecordProgress","record","startTimer","displaySentenceToBeRead","debugMode","recordedYet","recordedProgress","disableNextButtonIfCurrNotRead","emoji","sentence","line1","line2","msg","makeEmojiLayout","recordedClassName","fontSize","recordTimeEle","recordTimeMsg","transition","color","recordGreenLight","numFilesSaved","requiredNumCams","connectedToServer","text","data_length","detectedNumCams","NameField_NameField_NameField","getContents","ProgressBar","percent","curr","total","toFixed","alignmentStyle","align","margin","es","strokeWidth","trailWidth","strokeColor","trailColor","Tester","intervalID","setIntervalID","clearInterval","innerHTML","time","setInterval","hour","min","sec","slice","createInterval","curr_sentence","hidden","TableHeader","TableRow","getClassOfRowItem","read","index","TableData","updateDataOnPageChange","_this2","page","curr_page","max_per_page","beg","end","rowItems","TableRow_TableRow","PageNum","selected","updatePage","PageInput","handleChange","event","Number","target","handleSubmit","preventDefault","onSubmit","htmlFor","onChange","TableFooter","page_num","mid_point","Math","floor","max_page","total_data","nums_list","from","x","PageNum_PageNum","PageInput_PageInput","src","alt","prev","next","Table","TableHeader_TableHeader","TableData_TableData","TableFooter_TableFooter","DataCollection","Table_Table_Table","Modal","_useModali","useModali","animated","title","dist_default","Button","buttonCancel","isStyleCancel","toggleCompleteModal","buttonConfirm","isStyleDestructive","confirmFunc","toast","info","_useModali2","completeModal","onLoadFunc","getElementsByClassName","modalID","Status","Infinity","remainingWords","setRemainingWords","startTimeTotalSecs","getSeconds","diffSecs","hours","mins","totalRecordingTime","displayTime","tick","showTime","initTime","SomeError","date","getHours","getMinutes","totalWords","helper_checkIfMobileView","Toggle","toggle","addEventListener","onChangeFunc","checked","updateDebugMode","Checkmark","version","xmlns","xlink","y","viewBox","enableBackground","xmlSpace","fill","stroke","strokeMiterlimit","d","cx","cy","r","strokeLinecap","points","strokeDasharray","Fireworks","CompleteAnimation","Fireworks_Fireworks","Checkmark_Checkmark","App","sentencesPerPageInTable","curr_index","ip_address","showNoCamsRef","hideServerOfflineRef","handler_hoverMouseOutDebug","handler_hoverMouseOverDebug","classList","remove","handler_hoverMouseOutBottom","handler_hoverMouseOverBottom","main_userView","comp_debug","comp_tester","helper_toggleHideBottom","down_chevron","comp_dataCollection","comp_cameraList","main_adminView","textAlign","main_playground","comp_debugHover","comp_completeAnimation","recordProgress","CompleteAnimation_CompleteAnimation","DataCollection_DataCollection","updateName","currSentence","currSentenceIndex","currPageInTable","components_Tester_Tester","first_sentence","numFilesSavedTotal","totalTime","updateTotalTime","disp_showFileSavingLoader","computerID","computerStatus","toggleCamState","helper_toggleCamState","admin_resetCams","comp_status","comp_modals","buttonConfirmId","admin_resetProgress","getStatus","setState","helper_toggleModal","handler_debugToggle","readOnly","ip","handler_IPOnChange","handler_useThisCompAsServer","helper_toggleHideDebug","up_chevron","disp_showFileSavedMessage","updateFilesSaved","numFiles","successMessage","ip_util","clientGetIP","split","loading","helper_setServerIP","helper_removeHoverEventListeners","helper_addHoverEventListeners","handler_fileSaveSuccess","numFilesSavedInd","style_makeEmojiToastLayout","updateCompID","status","style_addThisCpuIcon","str","find","re","RegExp","ref_hideLoader","NotOnPageError","initSocketListeners","add","helper_showServerNotOnline","JSON","stringify","progress","connectedOrder","connectedOrderMap","update","$merge","refreshRates","conectedOrderNum","setTimeout","reload","max","per_page","new_page","bool","admin_refreshAll","origin","helper_emitInitialSocketMessages","helper_showNoCamsConnected","disconnect","io","debugHoverArea","bottomHoverArea","removeEventListener","handler_keydown","inputServerIP","activeElement","nodeName","react_router_dom","react_router","path","component","readTextFile","sentences","handler_keyup","file","_this3","fetch","response","sum","serverID","opts","hostname","mode","ok","_context","t0","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","return","ReactDOM","render","src_app_App","module","exports","__webpack_require__","p","ifaces","require","networkInterfaces","nodeGetIP","address","keys","forEach","ifname","iface","family","internal","onNewIP","pc","RTCPeerConnection","mozRTCPeerConnection","webkitRTCPeerConnection","iceServers","noop","localIPs","ipRegex","ipIterate","createDataChannel","createOffer","sdp","line","match","setLocalDescription","onicecandidate","ice","candidate"],"mappings":"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","file":"static/js/main.7f74332b.chunk.js","sourcesContent":["// let qs = (function (a) {\n//   console.log(\"in qs:\" + window.location.href)\n//   if (a === \"\") return {};\n//   var b = {};\n//   for (var i = 0; i < a.length; ++i) {\n//     var p = a[i].split('=', 2);\n//     if (p.length === 1)\n//       b[p[0]] = \"\";\n//     else\n//       b[p[0]] = decodeURIComponent(p[1].replace(/\\+/g, \" \"));\n//   }\n//   return b;\n// })(window.location.search.substr(1).split('&'));\n\nconst qs = function(id) {\n  let parsedUrl = new URL(window.location.href);\n  if (parsedUrl.searchParams.has(id)) {\n    return parsedUrl.searchParams.get(id);\n  } else {\n    return false;\n  }\n}\nexport default qs;","import React from 'react';\nimport './Webcam.scss';\nimport PropTypes from 'prop-types';\n\nclass Webcam extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isRecording: false,\n      recorder: null,\n      videoSrc: null,\n      videoEle: null,\n      startTime: 'time',\n    };\n    this.video = React.createRef();\n  }\n  getCurrentTime() {\n    let today = new Date();\n    let date =\n      today.getFullYear() +\n      '-' +\n      (today.getMonth() + 1) +\n      '-' +\n      today.getDate();\n    let time = today.getTime(); //today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n    return date + '-' + time;\n  }\n  \n  render() {\n    // console.log(this.props.videoRef);\n    return (\n      <div className='vid_card' onClick={this.startRecording}>\n        <video\n          className='cam'\n          controls\n          autoPlay\n          playsInline\n          muted\n          ref={this.props.videoRef}\n        />\n        <p className='cam_label'>{this.props.name}</p>\n      </div>\n    );\n  }\n}\n\nWebcam.propTypes = {\n  name: PropTypes.string.isRequired,\n  videoRef: PropTypes.object.isRequired\n};\n\nexport default Webcam;\n","/* eslint-disable no-console */\nimport React, { useState, useEffect } from 'react';\n// import sample_cam from '../../assets/svg/sample-cam.svg';\nimport Webcam from '../Webcam/Webcam.js';\nimport RecordRTC, { MediaStreamRecorder } from 'recordrtc';\nimport qs from '../../utils/qs'\nimport cogoToast from 'cogo-toast';\n// import PropTypes from 'prop-types';\n\nexport default function CameraList(props) {\n  const [availableCams, setAvailableCams] = useState([]);\n  const [recordingStatus, setRecordingStatus] = useState(\"recording-status-loading...\");\n  const [availableMics, setAvailableMics] = useState([]);\n  const [pluggedInDevices, setPluggedInDevices] = useState([]);\n\n  const helper_extractRelevantCamInfo = device => {\n    return {\n      camera_info: {\n        id: device.deviceId,\n        label: device.label,\n        groupId: device.groupId\n      },\n      ref: React.createRef(),\n      recorder: null\n    };\n  }\n  const helper_addToVideoDevices = (device, videodevices) => {\n    device = helper_extractRelevantCamInfo(device);\n    console.log(availableCams);\n    const devicePrior = availableCams.filter(cam => {\n      return cam.camera_info.id === device.camera_info.id\n    })[0];\n    console.log(devicePrior);\n    if (devicePrior) {\n      console.log('found prior device');\n      device.mic_info = devicePrior.mic_info;\n    } else {\n      console.log('using first cam mic!!!')\n      device.mic_info = availableMics[0];\n    }\n    videodevices.push(device);\n  }\n  const helper_addToMicDevices = (device, micDevices) => {\n    if (micDevices.indexOf(device.deviceId) < 0)\n      micDevices.push(device);\n  }\n  const helper_getNumCams = devices => {\n    const num = devices.reduce((accumulator, device) => {\n      return device.kind === 'videoinput' ? accumulator + 1 : accumulator;\n    }, 0);\n    props.updateDetectedNumCams(num);\n    return num;\n  }\n\n  const initCams = () => {\n    if (!navigator.mediaDevices || !navigator.mediaDevices.enumerateDevices) {\n      console.log('enumerateDevices() not supported.');\n    } else {\n      navigator.mediaDevices.enumerateDevices().then(devices => {\n        let videoDevices = [];\n        let micDevices = [];\n        const numCams = helper_getNumCams(devices);\n\n        console.log(\"number of cams detected: \" + numCams);\n        devices.map(function(device) {\n          if (device.kind === 'audioinput') {\n            if (\n              !device.label.toLowerCase().includes('default') &&\n              !device.label.toLowerCase().includes('communications') && \n              !device.label.toLowerCase().includes('built-in')\n            ) {\n              helper_addToMicDevices(device, micDevices);\n            }\n          }            \n          if (device.kind === 'videoinput') {\n            helper_addToVideoDevices(device, videoDevices);\n          }\n          return null;\n        });\n        setAvailableMics(micDevices);\n        setAvailableCams(videoDevices);\n\n        document.getElementById('startBtn').click();\n        document.getElementById('startBtn').disabled = true;\n        // console.log('getAvailableDevices success!');\n      })\n      .catch(function(err) {\n        console.log(err.name + ': ' + err.message);\n      });\n    }\n  }\n  // const initMics = () => {\n  //   let id = 0;\n  //   availableCams.map(cam => {\n  //     if (availableMics[id]) cam.mic_info = availableMics[id++].deviceId;\n  //   });\n  // }\n\n  Array.prototype.diff = function(a) {\n    return this.filter(function(i) {\n      return a.indexOf(i) < 0;\n    });\n  };\n\n  const getNewMicCam = (newPluggedInID, allDevices) => {\n    const newCam = allDevices.filter(device => {\n      return (\n        newPluggedInID.indexOf(device.deviceId) >= 0 &&\n        device.kind === 'videoinput'\n      );\n    });\n    // should only contain one \n    const newMic = allDevices.filter(device => {\n      return (\n        newPluggedInID.indexOf(device.deviceId) >= 0 &&\n        device.kind === 'audioinput'\n      ); \n    });\n    if (newMic.length > 1) {\n      console.error('multiple new mics detected')\n    }\n    if (newCam.length > 1) {\n      console.error('multiple new cams detected');\n    }\n    const newMicID = newMic[0].deviceId;\n\n    return [newMicID, newCam[0]];\n  }\n\n  const checkIfMac = (resolve) => {\n    let faceTimeDevice = undefined;\n    let defaultMic = undefined;\n    return new Promise(() => {\n      navigator.mediaDevices.enumerateDevices().then(devices => {\n        faceTimeDevice = devices.filter(device => {\n          return device.label.toLowerCase().includes('facetime');\n        });\n        defaultMic = devices.filter(device => {\n          return device.deviceId === 'default'\n        });\n      }).then(()=> {\n        resolve(faceTimeDevice[0], defaultMic[0]);\n      });\n    })\n  }\n\n  let isMac = false;\n\n  const startFaceTimeCam = (faceTimeDevice, defaultMic) => {\n    if (faceTimeDevice) {\n      const device = helper_extractRelevantCamInfo(faceTimeDevice)\n      device.mic_info = defaultMic.deviceId;\n      setAvailableCams([device]);\n      document.getElementById('startBtn').disabled = false;\n      document.getElementById('startBtn').click();\n      document.getElementById('dummyBtn').disabled = false;\n      document.getElementById('dummyBtn').click();\n      cogoToast.success('Mac FaceTime Camera started', {\n        position: 'top-left',\n        hideAfter: 1,\n        onClick: hide => {\n          hide()\n        }\n      });\n      props.updateDetectedNumCams(1);\n      isMac = true;\n    }\n  }\n\n\n  const addNewCamMic = () => {\n    // let isMac = false;\n    try {\n      checkIfMac(startFaceTimeCam);\n    } catch (Exception) {\n      // console.err('not a mac')\n    }\n    navigator.mediaDevices.enumerateDevices().then(devices => {\n      const allDevices = devices.filter(device => {\n        return (\n          device.label.toLowerCase().includes('aoni') &&\n          !device.label.toLowerCase().includes('communication') &&\n          !device.label.toLowerCase().includes('default')\n        );\n      });\n      let detectedTwoDevices = false;\n\n      const idAoni = allDevices.map(device => {\n        return device.deviceId;\n      });\n      // const newPluggedInPaired = allDevices.map(device => [device.kind, device.deviceId])\n      // console.log(newPluggedInPaired);\n\n      const newPluggedInID = idAoni.diff(pluggedInDevices);\n      if (newPluggedInID.length === 0) {\n        // console.log('no new devices detected');\n        if (!isMac) \n          cogoToast.warn('No additional webcams detected.', {hideAfter: 1});\n      } else if (newPluggedInID.length === 2) {\n        detectedTwoDevices = true;\n        // console.log(\n        //   'new devices: ' + newPluggedInID.map(d => d.substring(0, 5))\n        // );\n      }\n\n      if (detectedTwoDevices) {\n        let [newMicID, newCamDevice] = getNewMicCam(newPluggedInID, allDevices);\n        newCamDevice = helper_extractRelevantCamInfo(newCamDevice);\n        const existCamera = availableCams.filter(cam => {\n          return cam.camera_info.id === newCamDevice.camera_info.id;\n        })[0];\n        if (!existCamera) {\n          newCamDevice.mic_info = newMicID;\n          let temp = availableCams;\n          temp.push(newCamDevice);\n          setAvailableCams(temp);\n          // cogoToast.success(\n          //   'New webcam: ' + newCamDevice.camera_info.id.substring(0, 5) + ' added.'\n          // ), {\n          //   hideAfter: 0.5,\n          //   position: 'top-left',\n          //   onClick: hide => {\n          //     hide();\n          //   }\n          // };\n          cogoToast.success('Webcam: ' + newCamDevice.camera_info.id.substring(0, 5) + ' added.', {\n            hideAfter: 1,\n            position: 'top-left',\n            onClick: hide => hide()\n          });\n          document.getElementById('startBtn').disabled = false;\n          initCams();\n          setPluggedInDevices(idAoni);\n        }\n      }      \n    }).then(() => {\n        document.getElementById('dummyBtn').disabled = false;\n        document.getElementById('dummyBtn').click();\n    });\n  }\n\n  function useAvailableWebCams() {\n    //  runs once\n    useEffect(() => {\n      props.updateConnectionStatus();\n    }, [props.addCamState]);\n  }\n\n  const initCamsDummy = () => {\n    stopAllCams(true);\n  }\n\n  const startAllCams = () => {\n    const temp =\n    recordingStatus === 'recording-status-loading...' ? {} : recordingStatus;\n    // goes through all cams array and through each ID, accesses and opens it using navigator\n    availableCams.map(cam => {\n      // console.log(cam.mic_info);\n      if (!cam.mic_info) {\n        console.error('using default microphone...');\n      }\n      navigator.mediaDevices\n        .getUserMedia({\n          audio: {\n            deviceId: {exact: (cam.mic_info) ? cam.mic_info : 'default'}\n          },\n          video: {\n            frameRate: {exact: 30, ideal: 30},\n            width: {ideal: 1920},\n            height: {ideal: 1080},\n            deviceId: cam['camera_info'].id\n          }\n        })\n        .then(camera => {\n          // console.log(camera.getTracks().forEach(track=> {console.log(\"track:\" + track.label + \",\" + track.kind)}));\n          // console.log(\"////////////////////////\");\n          let recorder = RecordRTC(camera, {\n            recorderType: MediaStreamRecorder, //WebAssemblyRecorder,\n            type: 'video',\n            frameRate: 30,\n            desiredSampRate: 16000,\n            width: 1920,\n            height: 1080,\n            numberOfAudioChannels: 2,\n            disableLogs: true\n          });\n          if (recorder.getState() !== 'recording') {\n            recorder.camera = camera;\n            cam['recorder'] = recorder;\n            let video = cam['ref'];\n            try {\n              video.current.srcObject = camera;\n            } catch (NotYetLoadedException) {\n              //\n            }\n            // resetInitialCams(recorder);\n            recorder.startRecording();\n          }\n          triggerRecordStatusUpdate(temp, recorder, cam);\n        })\n        .catch(error => {\n          console.error(error);\n        });\n        return availableCams;\n    });\n  };\n\n  const stopAllCams = (dummy) => {\n    const temp =\n      recordingStatus === 'recording-status-loading...' ? {} : recordingStatus;\n      \n    availableCams.map(cam => {\n      let recorder = cam['recorder'];\n      if (recorder !== null) {\n        recorder.stopRecording(() => {\n          let blob = recorder.getBlob();\n          console.log(\n            '%c recorded data',\n            'background: #222; color: #bada55',\n            blob\n          );\n          if (dummy !== true) {\n            props.socket.emit('client: save data', {\n              name: qs(\"name\"),\n              sentence_index: qs(\"sentence_index\"),\n              camera_id: cam['camera_info'].id,\n              blob: blob\n            });\n          } else {\n            console.log('dummy received, did not save blob');\n          }\n\n        });\n        triggerRecordStatusUpdate(temp, recorder, cam);\n      }\n      return availableCams;\n    });\n  };\n\n  const triggerRecordStatusUpdate = (temp, recorder, cam) => {\n    try {\n      temp[cam['camera_info'].id.substring(0, 15)] = recorder.getState();\n      setRecordingStatus(temp);\n      props.updateConnectionStatus(temp);\n    } catch (NotYetLoadedException) {\n      cogoToast.warn('Camera not yet loaded!', {\n        hideAfter: 0,\n        onClick: hide => {\n          hide()\n        }\n      });\n    }\n  }\n\n  const resumeAllCams = () => {\n    const temp =\n      recordingStatus === 'recording-status-loading...' ? {} : recordingStatus;\n    availableCams.map(cam => {\n      let recorder = cam['recorder'];\n      let state = undefined;\n      try {\n        state = recorder.getState();\n      } catch {\n        cogoToast.warn(\"Camera not yet loaded!\", {\n          hideAfter: 0,\n          onClick: hide => {\n            hide()\n          }\n        });\n      }\n      if (state === \"paused\") {\n        recorder.resumeRecording();\n      } else if (state === \"stopped\"){\n        try {\n          recorder.startRecording();\n        } catch (NotYetLoadedException) {\n          cogoToast.warn('Camera not yet loaded!', {\n            hideAfter: 0,\n            onClick: hide => {\n              hide()\n            }\n          });\n        }\n      }\n      triggerRecordStatusUpdate(temp, recorder, cam);\n      return availableCams;\n    });\n  }\n\n  useAvailableWebCams();\n\n  // dummy to fix bug of first video\n  props.socket.on('server: dummy vid, do not save', function() {\n    document.getElementById('dummyBtn').click();\n    document.getElementById('dummyBtn').disabled = true;\n  });\n\n  // this is actually what calls start cams\n  props.socket.on('server: start cams', function () {\n    document.getElementById(\"resumeBtn\").click();\n    document.getElementById(\"resumeBtn\").disabled = true;\n    document.getElementById('stopBtn').disabled = false;\n\n  });\n\n  // this is actually what calls stop cams\n  props.socket.on('server: stop cams', function () {\n    document.getElementById('stopBtn').click();\n    document.getElementById('stopBtn').disabled = true;\n    document.getElementById(\"resumeBtn\").disabled = false;\n  });\n\n  const debugControls = (debug) => {\n    if (debug) {\n      return (\n        <div>\n          {/* <p>Don't click these while actual testing</p> */}\n          <button id='dummyBtn' className=\"hidden_button\" onClick={initCamsDummy}>\n            dummy reset\n          </button>\n          <button id='startBtn' className=\"hidden_button\" onClick={startAllCams}>\n            start and pause all cams\n          </button>\n          <button id='resumeBtn' className=\"hidden_button\" onClick={resumeAllCams}>\n            resume all cams\n          </button>\n          <button id='stopBtn' className=\"hidden_button\" onClick={stopAllCams}>\n            stop all cams\n          </button>\n          <button\n            id='addCamBtn'\n            className='hidden_button'\n            onClick={addNewCamMic} \n          >\n            Add Cam\n          </button>\n          {/* <button id=\"setCompID\" onClick={getSetCompID}>get set computer ID</button> */}\n        </div>\n      );\n    }\n  }\n\n  const renderCams = addCam => {\n\n    // initMics()\n    const debug = true;\n    let i = 0; \n    const comp_camsList = availableCams.map(cam => {\n      return (\n        <Webcam\n          key={i++}\n          name={'ID: ' + cam['camera_info'].id.substring(0, 15)}\n          videoRef={cam['ref']}\n        />\n      );\n    });\n      \n\n    return (\n      <div id='camera_list'>\n        {debugControls(debug)}\n        <div>\n          <div className='cameras'>{comp_camsList}</div>\n          <button className='debug_button' style={{ marginTop: '1em'}} onClick={addCam}>Add Webcam</button>\n        </div>\n      </div>\n    );\n  };\n  \n  return renderCams(props.addCam);\n}","import React, { Component } from 'react'\nimport './NameField.scss'\nimport PropTypes from 'prop-types';\n\nexport default class NameField extends Component {\n  saveName = () => {\n    let name = document.getElementById(\"name\").value;\n    // document.location.search = \"name=\" + name + \"&sentence_index=0\";\n    let url_state = '?name=' + name + '&sentence_index=0'\n    window.history.pushState(\n      null,\n      null,\n      url_state\n    );\n    \n    this.props.socket.emit('client: start testing', {\n      name,\n      sentence_index: 0\n    })\n    this.props.socket.emit('client: dummy vid, do not save');\n    this.props.socket.emit('client: update recording progress', 0);\n    this.props.socket.emit('client: save total time', [0,0,0]);\n    this.props.socket.emit('client: save total start time', new Date())\n    this.props.updateTesterContents();\n    this.props.updateGreenLightStatus(true);\n    \n  }\n\n  isNameEmpty = () => {\n    try {\n      return !document.getElementById(\"name\").value.replace(/\\s/g, '').length\n    }\n    catch (NotYetLoadedException) {\n      //\n    }\n  }\n\n  detectEnter = (e) => {\n    if (!this.isNameEmpty()) {\n      if (e.which === 13) {\n        this.saveName(e);\n      } \n    } else {\n      document.getElementById('nameNotFilled').innerText='请输入名字'\n    }\n  }\n\n  startBtn = (e) => {\n    if (!this.isNameEmpty()) {\n      if (!e.buttons) {\n        this.saveName(document.getElementById(\"name\").value);\n      }\n    } else {\n      document.getElementById('nameNotFilled').innerText = '请输入名字'\n    }\n  }\n\n\n  render() {\n    return (\n      <div>\n        <div className='name_input'>\n          <input\n            type='text'\n            name='name'\n            id='name'\n            placeholder='输入名字（拼音）'\n            onKeyPress={this.detectEnter}\n            autoFocus\n            required\n          />\n          <br/>\n          <button className=\"btn btn-center\" onClick={this.startBtn}>开始实验</button>\n          {(this.isNameEmpty()) && <p className=\"warning_message\" id=\"nameNotFilled\"></p>}\n        </div>\n      </div>\n    );\n  }\n}\n\nNameField.propTypes = {\n  socket: PropTypes.object.isRequired,\n  updateTesterContents: PropTypes.func.isRequired,\n  updateGreenLightStatus: PropTypes.func.isRequired,\n};","/* eslint-disable no-console */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport NameField from '../NameField/NameField';\nimport qs from '../../utils/qs';\n\nexport default function InProcessScreen(props) {\n  const [recording, setRecordState] = useState(false);\n  const [done_recording, setDoneRecording] = useState(false);\n  const [reset_state, reset] = useState(false);\n  const [nameSet, setName] = useState(qs('name'));\n\n  function updateSentence(data) {\n    reset(true);\n    props.updateSentence(data);\n  }\n\n  function getRecordState() {\n    if (recording) {\n      return 'Done';\n    } else if (done_recording && !reset_state) {\n      return 'Retry';\n    } else {\n      return 'Record';\n    }\n  }\n\n  function stopRecording() {\n    setDoneRecording(true);\n    setRecordState(false);\n    props.socket.emit('client: stop cams', 'in process screen');\n    reset(false);\n    props.showFileSavingLoader();\n    props.updateSentence('$next');\n\n    props.updateGreenLightStatus(false);\n    props.stopTimer();\n    markSentenceAsDone(props.curr_sentence_index);\n  }\n\n  function markSentenceAsDone(curr_sentence_index) {\n    if (curr_sentence_index >= 0 ) props.updateRecordProgress(curr_sentence_index);\n  }\n\n  function startRecording() {\n    props.socket.emit('client: start cams', 'in process screen');\n    setRecordState(true);\n    props.startTimer();\n    document.getElementById('testerRecordBtn').className = 'btn btn-danger';\n\n  }\n\n  function record() {\n    document.getElementById('showSavedFilesBtn').disabled = false;\n    if (recording) {\n      stopRecording();\n    } else {\n      startRecording();\n    }\n  }\n\n  \n  function disableNextButtonIfCurrNotRead() {\n    if (!props.debugMode) {\n      const recordedYet =\n      props.recordedProgress > props.curr_sentence_index;\n      try {\n        if (recordedYet) {\n          document.getElementById('testerNextBtn').disabled = false;\n        } else {\n          document.getElementById('testerNextBtn').disabled = true;\n        }\n      } catch (Exception) {\n        // console.log(Exception);\n      }\n    }\n  }\n\n  function makeEmojiLayout(msg, emoji) {\n    return (\n      <div className='emoji-layout-container'>\n        <div className='emoji-layout-emoji-left'> {emoji}</div>\n        <div>\n          {msg[0]}\n          <br />\n          {msg[1]}\n        </div>\n        <div className='emoji-layout-emoji-right'> {emoji}</div>\n      </div>\n    );\n  }\n\n  function displaySentenceToBeRead() {\n    disableNextButtonIfCurrNotRead();\n    const recordedYet = \n      (props.curr_sentence_index > 0) ? \n      props.recordedProgress >= props.curr_sentence_index : \n      false;\n    const emoji = recordedYet ? '↺' : '';\n    let sentence = props.data[props.curr_sentence_index];\n    if (sentence) {\n      const line1 = sentence.substring(0,10)\n      const line2 = sentence.substring(10);\n      sentence = makeEmojiLayout([line1, line2], emoji);\n    }\n    \n    // const sentence = recordedMessage + ' ' + props.data[props.curr_sentence_index] + ' ' + recordedMessage;\n    const recordedClassName = recordedYet ? 'recorded_sentence_highlight sentence_to_be_read' : 'sentence_to_be_read'\n    return (\n      <div>\n        <br />\n        <div className={recordedClassName}>\n          <p style={{fontSize: '16px'}}>[{props.curr_sentence_index}]</p>\n          {sentence}\n        </div>\n      </div>\n    );\n  }\n\n  \n\n  function trans(text) {\n    if (text === 'Done') {\n      return '结束录制';\n    } else if (text === 'Retry') {\n      return '重新录制';\n    } else if (text === 'Record') {\n      return '开始录制'\n    } else {\n      return text;\n    }\n  }\n\n  function updateTesterContents() {\n    setName(true);\n  }\n\n  function getContents() {\n    if (!nameSet) {\n      return (\n        <div>\n          <NameField\n            socket={props.socket}\n            updateTesterContents={updateTesterContents}\n            updateGreenLightStatus={props.updateGreenLightStatus}\n          />\n        </div>\n      );\n    } else {\n      try {\n        let recordTimeEle = document.getElementById('record_time_content');\n        let recordTimeMsg = document.getElementById('record_time_msg');\n        let colorRecordTime = (recordTimeEle.innerText === '00:00:00') ? 'gray' : 'red';\n        if (colorRecordTime === 'gray') {\n          recordTimeEle.style.transition = 'all 0.5 ease'\n          recordTimeMsg.style.transition = 'all 0.5 ease'\n          recordTimeEle.style.color = 'black';\n          recordTimeMsg.style.color = 'black';\n        } else {\n          recordTimeEle.style.transition = 'all 0.5 ease'\n          recordTimeMsg.style.transition = 'all 0.5 ease'\n          recordTimeEle.style.color = '#FF1053';\n          recordTimeMsg.style.color = '#FF1053';\n        }\n      } catch (NotYetLoadedException) {\n        //\n      }\n      return (\n        <div>\n          {displaySentenceToBeRead()}\n          <div className='recording_hint'>\n          <pre id='record_time_content'>00:00:00</pre>\n          <pre id='record_time_msg'>录制中</pre>\n            \n          </div>\n          <button\n            id='testerRecordBtn'\n            className={\n              getRecordState() === 'Done'\n                ? 'btn btn-danger'\n                : 'btn_highlight_green'\n            }\n            onClick={record}\n            disabled={\n              !props.recordGreenLight ||\n              props.numFilesSaved % props.requiredNumCams !== 0 || \n              !props.connectedToServer\n            }\n          >\n            {trans(getRecordState())}\n          </button>\n          <br />\n          <button\n            className='btn'\n            id='testerPrevBtn'\n            onClick={() => updateSentence('$prev')}\n            disabled={\n              props.curr_sentence_index === 0 ||\n              !props.recordGreenLight ||\n              props.numFilesSaved % props.requiredNumCams !== 0 ||\n              recording\n            }\n          >\n            ⬅上一句\n          </button>\n          <button\n            className='btn'\n            id='testerNextBtn'\n            onClick={() => updateSentence('$next')}\n            disabled={\n              props.curr_sentence_index === props.data_length - 1 ||\n              !props.recordGreenLight ||\n              props.numFilesSaved % props.requiredNumCams !== 0 ||\n              recording\n            }\n          >\n            下一句➡\n          </button>\n          {(props.detectedNumCams === 0) && <p className=\"warning_message\">请加摄像头</p>}\n          {(!props.connectedToServer) && <p className=\"warning_message\">请确认您链接到服务器</p>}\n        </div>\n      );\n    }\n  }\n\n  return (\n    <div className='test_container'>\n      {getContents()}\n    </div>\n  );\n}\n\nInProcessScreen.propTypes = {\n  curr_sentence_index: PropTypes.number.isRequired,\n  curr_sentence: PropTypes.string.isRequired,\n  data_length: PropTypes.number.isRequired,\n  updateSentence: PropTypes.func.isRequired,\n  socket: PropTypes.object.isRequired,\n  data: PropTypes.array.isRequired,\n  updateGreenLightStatus: PropTypes.func.isRequired,\n  recordGreenLight: PropTypes.bool.isRequired,\n  numFilesSaved: PropTypes.number.isRequired,\n  requiredNumCams: PropTypes.number.isRequired,\n  stopTimer: PropTypes.func.isRequired,\n  startTimer: PropTypes.func.isRequired,\n  recordedProgress: PropTypes.number.isRequired,\n  updateRecordProgress: PropTypes.func.isRequired,\n  showFileSavingLoader: PropTypes.func.isRequired,\n  debugMode: PropTypes.bool.isRequired,\n  connectedToServer: PropTypes.bool.isRequired,\n  detectedNumCams: PropTypes.number.isRequired,\n};\n","import React from 'react'\nimport PropTypes from 'prop-types';\nimport { Line } from 'rc-progress';\n\nexport default function ProgressBar(props) {\n  const percent = ((props.curr ) / (props.total + 1) * 100).toFixed(2);\n  const alignmentStyle = props.align === 'left' ? { margin: '0' } : {};\n  return (\n    <div className='progress_bar' style={alignmentStyle}>\n      <pre>\n        进度: {props.curr} / {props.total + 1} ({percent}%)\n      </pre>\n      <Line\n        percent={percent}\n        strokeWidth={props.strokeWidth}\n        trailWidth={props.strokeWidth}\n        strokeColor = '#3bb8ce'\n        trailColor='#363732'\n      />\n    </div>\n  );\n}\n\nProgressBar.propTypes = {\n  curr: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  align: PropTypes.string.isRequired,\n  strokeWidth: PropTypes.number.isRequired,\n};\n","import React, { useState } from 'react';\nimport './Tester.scss';\nimport PropTypes from 'prop-types';\nimport InProcessScreen from './InProcessScreen.js';\nimport qs from '../../utils/qs'\nimport ProgressBar from '../ProgressBar'\n\nfunction Tester(props) {\n  const [intervalID, setIntervalID] = useState(undefined);\n\n  function comp_inProcessScreen() {\n    return (\n      <InProcessScreen\n        updateSentence={props.updateSentence}\n        curr_sentence_index={props.curr_sentence_index}\n        data_length={props.data_length}\n        socket={props.socket}\n        data={props.data}\n        curr_sentence={props.curr_sentence}\n        recordGreenLight={props.recordGreenLight}\n        updateGreenLightStatus={props.updateGreenLightStatus}\n        numFilesSaved={props.numFilesSaved}\n        requiredNumCams={props.requiredNumCams}\n        stopTimer={stopTimer}\n        startTimer={startTimer}\n        recordedProgress={props.recordedProgress}\n        updateRecordProgress={props.updateRecordProgress}\n        showFileSavingLoader={props.showFileSavingLoader}\n        debugMode={props.debugMode}\n        connectedToServer={props.connectedToServer}\n        detectedNumCams={props.detectedNumCams}\n      />\n    );\n  }\n\n  function stopTimer() {\n    clearInterval(intervalID);\n    document.getElementById('record_time_content').innerHTML = '00:00:00';\n  }\n\n  function startTimer() {\n    setIntervalID(createInterval());\n  }\n\n  function createInterval() {\n    let time = [0, 0, 0];\n    return setInterval(() => {\n      let hour = time[0];\n      let min = time[1];\n      let sec = time[2];\n\n      if (sec < 60) {\n        sec += 1;\n      }\n      if (sec === 60) {\n        min += 1;\n        sec = 0;\n      }\n      if (min === 60) {\n        hour += 1;\n        min = 0;\n      }\n      time = [hour, min, sec];\n      document.getElementById('record_time_content').innerHTML =\n        ('0' + hour).slice(-2) +\n        ':' +\n        ('0' + min).slice(-2) +\n        ':' +\n        ('0' + sec).slice(-2);\n      }, 10);\n  }\n\n  return (\n    <div className='testing_screen'>\n      <ProgressBar\n        curr={props.recordedProgress}\n        total={props.data_length - 1}\n        align={'center'}\n        strokeWidth={2}\n      />\n      <div className='middle'>\n        <div className='inner'>{comp_inProcessScreen()}</div>\n      </div>\n      <pre\n        hidden={\n          props.recordGreenLight ||\n          props.curr_sentence_index === 0 ||\n          !qs('name')\n        }\n        className='warning_message'\n      >\n        如果等保存时间多余10秒钟，通知老师来从设置机器\n      </pre>\n    </div>\n  );\n}\n\nTester.propTypes = {\n  updateSentence: PropTypes.func.isRequired,\n  curr_sentence_index: PropTypes.number.isRequired,\n  curr_sentence: PropTypes.string.isRequired,\n  data_length: PropTypes.number.isRequired,\n  socket: PropTypes.object.isRequired,\n  data: PropTypes.array.isRequired,\n  recordGreenLight: PropTypes.bool.isRequired,\n  updateGreenLightStatus: PropTypes.func.isRequired,\n  numFilesSaved: PropTypes.number.isRequired,\n  requiredNumCams: PropTypes.number.isRequired,\n  recordedProgress: PropTypes.number.isRequired,\n  updateRecordProgress: PropTypes.func.isRequired,\n  totalTime: PropTypes.array.isRequired,\n  updateTotalTime: PropTypes.func.isRequired,\n  showFileSavingLoader: PropTypes.func.isRequired,\n  debugMode: PropTypes.bool.isRequired,\n  connectedToServer: PropTypes.bool.isRequired,\n  detectedNumCams: PropTypes.number.isRequired,\n}\n\nexport default Tester;\n","import React, { Component } from 'react'\n\nexport default class TableHeader extends Component {\n  render() {\n    return (\n      <div>\n        <div className='table_header_footer'>\n          <h3>Sentence</h3>\n          {/* <div>Length</div>\n          <div>Actions</div> */}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './TableRow.scss';\n// import Actions from './Actions';\nimport PropTypes from 'prop-types';\n\nexport default class TableRow extends Component {\n  getClassOfRowItem = () => {\n    let read = this.props.read ? 'read row_item' : 'row_item';\n    // let sentence = this.props.sentence;\n    let is_current = this.props.curr_sentence_index === this.props.index ? ' curr_sentence' : '';\n    return read + is_current;\n  }\n\n\n  render() {\n    return (\n      <div>\n        <div className='table_row'>\n          <div className={this.getClassOfRowItem()}>\n            {this.props.index + \": \" + this.props.sentence}\n          </div>\n          {/* <div className='row_item'>00:00 / {this.props.time} </div> */}\n          {/* <Actions /> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nTableRow.propTypes = {\n  sentence: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  curr_sentence_index: PropTypes.number.isRequired,\n  time: PropTypes.string.isRequired,\n  read: PropTypes.bool.isRequired,\n};\n","import React, { Component } from 'react';\nimport TableRow from './TableRow.js';\nimport PropTypes from 'prop-types';\nimport './TableData.scss';\n\nexport default class TableData extends Component {\n  updateDataOnPageChange = () => {};\n  render() {\n    let data = this.props.data;\n    let page = this.props.curr_page;\n    let max_per_page = this.props.max_per_page;\n    let beg = page * max_per_page - max_per_page;\n    let end = beg + max_per_page;\n    let small_data = data.slice(beg, end);\n    let rowItems = small_data.map((sentence, i) => (\n      <TableRow\n        curr_sentence_index={this.props.curr_sentence_index}\n        sentence={sentence}\n        time='00:00'\n        read={false}\n        key={sentence+\":\"+i}\n        index={i + beg}\n      />\n    ));\n\n    return <div className='table'>{rowItems}</div>;\n  }\n}\n\nTableData.propTypes = {\n  data: PropTypes.array.isRequired,\n  curr_sentence_index: PropTypes.number.isRequired,\n  curr_page: PropTypes.number.isRequired,\n  max_per_page: PropTypes.number.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class PageNum extends Component {\n  render() {\n    return (\n      <div \n        className={this.props.selected ? 'page_num' : 'can_click_num page_num'}\n        onClick={() => this.props.updatePage(this.props.num)}>\n        {this.props.num}\n      </div>\n    );\n  }\n}\n\nPageNum.propTypes = {\n  num: PropTypes.number.isRequired,\n  selected: PropTypes.bool.isRequired,\n  updatePage: PropTypes.func.isRequired\n};\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\n\nexport default class PageInput extends Component {\n  handleChange = (event) => {\n    this.props.updatePage(Number(event.target.value));\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n  }\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor='page'>Page:</label>\n          <input\n            type='text'\n            value={this.props.curr_page}\n            onChange={this.handleChange}\n            className = 'debug_text_input'\n          />\n        </form>\n      </div>\n    );\n  }\n}\n\nPageInput.propTypes = {\n  updatePage: PropTypes.func.isRequired,\n  curr_page: PropTypes.number.isRequired\n}","import React, { Component } from 'react'\nimport './TableFooter.scss'\nimport PageNum from './PageNum.js'\nimport next from '../../assets/svg/collapse-chevron.svg'\nimport prev from '../../assets/svg/expand-chevron.svg';\nimport PropTypes from 'prop-types';\nimport PageInput from './PageInput.js'\nimport beg from '../../assets/svg/beg.svg'\nimport end from '../../assets/svg/end.svg';\n\nexport default class TableFooter extends Component {\n  updatePage=(page_num) => {\n    this.props.updatePage(page_num);\n  }\n\n  render() {\n    let curr_page = this.props.curr_page;\n    let max_per_page = this.props.max_per_page;\n    let mid_point = Math.floor(max_per_page / 2)\n    let max_page = Number(((this.props.total_data + 1) / this.props.max_per_page + 1).toFixed(0));\n    let page_nums = Array.from(new Array(max_per_page), (x, i) => { \n      let min = 0;\n      if (curr_page <= mid_point) {\n        min = i;\n      } else if (curr_page >= max_page - mid_point) {\n        min = i + max_page - max_per_page;\n      } else {\n        min = i + curr_page - mid_point - 1;\n      }\n      return min;\n    });\n    let nums_list = page_nums.map((i) => {\n      i = i + 1;\n      return <PageNum num={i} selected={curr_page === i} key={i} updatePage={this.props.updatePage}/>\n    });\n\n    return (\n      <div>\n        <div className='table_header_footer'>\n          <div className='table_footer'>\n            <div className='left_footer'>\n              <PageInput\n                updatePage={this.props.updatePage}\n                curr_page={this.props.curr_page}\n              />\n            </div>\n            <div className='right_footer'>\n              <img\n                src={beg}\n                alt=''\n                className='small_btn'\n                onClick={() => this.props.updatePage(1)}\n              />\n              <img\n                src={prev}\n                alt=''\n                className='small_btn'\n                onClick={() => this.props.updatePage(curr_page - 1)}\n              />\n              {nums_list}\n              <img\n                src={next}\n                alt=''\n                className='small_btn'\n                onClick={() => this.props.updatePage(curr_page + 1)}\n              />\n              <img\n                src={end}\n                alt=''\n                className='small_btn'\n                onClick={() => this.props.updatePage(max_page)}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nTableFooter.propTypes = {\n  updatePage: PropTypes.func.isRequired,\n  curr_page: PropTypes.number.isRequired,\n  total_data: PropTypes.number.isRequired,\n  max_per_page: PropTypes.number.isRequired\n};","import React, { Component } from 'react'\nimport TableHeader from './TableHeader.js'\nimport './Table.scss'\nimport TableData from './TableData.js'\nimport PropTypes from 'prop-types';\nimport TableFooter from './TableFooter';\nexport default class Table extends Component {\n  constructor(props) {\n    super(props);\n    let per_page = 8;\n    this.state = {\n      max_per_page: per_page\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <TableHeader />\n        <TableData\n          data={this.props.data}\n          curr_page={this.props.curr_page}\n          max_per_page={this.state.max_per_page}\n          curr_sentence_index={this.props.curr_sentence_index}\n        />\n        <TableFooter\n          total_data={this.props.data.length}\n          updatePage={this.props.updatePage}\n          curr_page={this.props.curr_page}\n          max_per_page={this.state.max_per_page}\n        />\n      </div>\n    );\n  }\n}\n\nTable.propTypes = {\n  curr_sentence_index: PropTypes.number.isRequired,\n  curr_page: PropTypes.number.isRequired,\n  updatePage: PropTypes.func.isRequired,\n  data: PropTypes.array.isRequired,\n};","import React, { Component } from 'react';\nimport Table from './Table';\nimport PropTypes from 'prop-types';\n\nexport default class DataCollection extends Component {\n\n\n  render() {\n    return (\n      <div>\n        <div className='data_table'>\n          <Table\n            data={this.props.data}\n            curr_sentence_index={\n              this.props.curr_sentence_index\n            }\n            curr_page={this.props.curr_page}\n            updatePage={this.props.updatePage}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nDataCollection.propTypes = {\n  data: PropTypes.array.isRequired,\n  curr_sentence_index: PropTypes.number.isRequired,\n  socket: PropTypes.object.isRequired,\n  updatePage: PropTypes.func.isRequired,\n  curr_page: PropTypes.number.isRequired\n};\n","import React, { useEffect } from 'react'\nimport Modali, { useModali } from 'modali';\nimport PropTypes from 'prop-types';\nimport cogoToast from 'cogo-toast';\n\nexport default function Modal(props) {\n  const [completeModal, toggleCompleteModal] = useModali({\n    animated: true,\n    title: props.title,\n    message: props.message,\n    buttons: [\n      <Modali.Button\n        label={props.buttonCancel ? props.buttonCancel : ''}\n        isStyleCancel\n        className={!props.buttonCancel ? 'display_none' : ''}\n        key={props.buttonCancel}\n        hidden={!props.buttonCancel}\n        onClick={() => toggleCompleteModal()}\n      />,\n      <Modali.Button\n        label={props.buttonConfirm}\n        isStyleDestructive\n        onClick={() => {\n          if (props.confirmFunc) props.confirmFunc();\n          toggleCompleteModal();\n          if (props.toast) cogoToast.info(props.toast, {\n            onClick: hide => {\n              hide()\n            }\n          });\n        }}\n        hidden={!props.buttonConfirm}\n        key={props.buttonConfirm}\n      />\n    ]\n  });\n  useEffect(() => {\n    if (props.onLoadFunc) props.onLoadFunc()\n    try {\n      if (!props.buttonCancel)\n        document.getElementsByClassName(\n          'modali-button-cancel'\n          )[0].className += ' display_none';\n      if (!props.buttonConfirm)\n        document.getElementsByClassName(\n          'modali-button-destructive'\n        )[0].className += ' display_none';\n    } catch (NotYetLoadedException) {\n      // console.log(NotYetLoadedException);\n    }\n  }, [])\n\n  return (\n    <div style={{ height: '0px' }}>\n      <button\n        className=\"hidden_button\"\n        id={props.modalID}\n        onClick={toggleCompleteModal}\n      >\n        toggle modal\n      </button>\n      <Modali.Modal {...completeModal} />\n    </div>\n  );\n}\n\nModal.propTypes = {\n  socket: PropTypes.object,\n  title: PropTypes.string,\n  message: PropTypes.any,\n  buttonCancel: PropTypes.string,\n  buttonConfirm: PropTypes.string,\n  toast: PropTypes.string,\n  confirmFunc: PropTypes.func,\n  modalID: PropTypes.string,\n  onLoadFunc: PropTypes.func,\n  buttonConfirmId: PropTypes.string\n};\n","import React, { useState, useEffect } from 'react';\nimport qs from '../utils/qs';\nimport PropTypes from 'prop-types';\nimport ProgressBar from './ProgressBar';\n\nexport default function Status(props) {\n  const [remainingWords, setRemainingWords] = useState(Infinity)\n\n  let intervalID = undefined\n\n  let i = 0; \n  useEffect(() => {\n    // console.log('status page loaded');\n    clearInterval(intervalID);\n    props.socket.on('server: response for start time', startTime => {\n      try {\n        // alert('setting starttime');\n        startTime = new Date(startTime);\n        const startTimeTotalSecs = getSeconds(startTime);\n        const nowSecs = getSeconds(new Date());\n        let diffSecs = nowSecs - startTimeTotalSecs;\n        // let expectedTime = diffSecs / (props.recordedProgress / props.data_length - 1)\n        // console.log(diffSecs);\n        const hours = Math.floor(diffSecs / 3600)\n        diffSecs -= hours * 3600;\n        const mins = Math.floor(diffSecs / 60);\n        diffSecs -= mins * 60;\n        const secs = diffSecs\n        const totalRecordingTime = [hours, mins, secs];\n        displayTime(totalRecordingTime);\n        intervalID = setInterval(() => tick(totalRecordingTime), 1000);\n      } catch (NotYetLoadedException) {\n        console.error(NotYetLoadedException);\n      }\n    });\n    showTime();\n    setRemainingWords(0);\n    console.log(remainingWords);\n    // setRemainingWords(totalWords - wordsCompleted)\n  }, [])\n\n  const displayTime = time => {\n    try {\n      document.getElementById('total_time_elapsed').innerText =\n        'Total Recording Time—' +\n        ('0' + time[0]).slice(-2) +\n        ':' +\n        ('0' + time[1]).slice(-2) +\n        ':' +\n        ('0' + time[2]).slice(-2);\n    } \n    catch(NotYetLoadedException) {\n      //\n    }\n  }\n\n  let time = undefined\n  const tick = initTime => {\n    if (!time) {\n      time = initTime;\n    } \n    // console.log('ticking')\n    let hour = time[0];\n    let min = time[1];\n    let sec = time[2];\n\n    if (sec < 60) {\n      sec += 1;\n    }\n    if (sec === 60) {\n      min += 1;\n      sec = 0;\n    }\n    if (min === 60) {\n      hour += 1;\n      min = 0;\n    }\n    time = [hour, min, sec];\n    // console.log(time);\n    try {\n      displayTime(time);\n    } catch (SomeError) {\n      console.error(SomeError);\n    }\n  };\n\n  const getSeconds = date => \n    date.getHours() * 60 * 60 +\n    date.getMinutes() * 60 +\n    date.getSeconds();\n\n  const helper_showTime = () => {\n    // console.log('asking for start time now');\n    props.socket.emit('client: ask for start time');\n  };\n\n  const showTime = () => {\n    try {\n      document.getElementById('showTimeBtn').click();\n      document.getElementById('showTimeBtn').disabled = true;\n    } catch (NotYetLoadedException) {\n      //\n    }\n  };\n\n\n\n  return (\n    <div>\n      <ProgressBar\n        curr={props.recordedProgress}\n        total={props.data_length - 1}\n        align={'left'}\n        strokeWidth={3}\n      />\n      <pre id='total_time_elapsed'>00:00:00</pre>\n      <pre id=\"total_words\"> / {props.totalWords}</pre>\n      <pre id='connection_status'></pre>\n      <pre id='num_files_saved'></pre>\n      {i++}\n      <pre\n        hidden={\n          props.recordGreenLight ||\n          props.helper_checkIfMobileView() ||\n          !qs('name')\n        }\n        className='warning_message'\n      >\n        Please Click Reset!\n      </pre>\n      <button\n        onClick={helper_showTime}\n        id='showTimeBtn'\n        className='hidden_button'\n      ></button>\n    </div>\n  );\n}\n\nStatus.propTypes = {\n  recordedProgress: PropTypes.number.isRequired,\n  data_length: PropTypes.number.isRequired,\n  recordGreenLight: PropTypes.bool.isRequired,\n  helper_checkIfMobileView: PropTypes.func.isRequired,\n  socket: PropTypes.object.isRequired,\n  totalWords: PropTypes.number.isRequired\n\n};","/**\n * **Based on: http://www.cssscript.com/demo/pure-css-css3-smooth-toggle-switch/**\n */\n\nimport React, { useEffect }from 'react'\nimport './toggle.scss'\nimport PropTypes from 'prop-types';\n\n/**\n * \n * @param {*} props \n */\nexport default function Toggle(props) {\n  useEffect(() => {\n    const toggle = document.getElementById(props.id);\n    try {\n      toggle.addEventListener('change', () => {\n        props.onChangeFunc(toggle.checked);\n      });\n      // document.getElementsByClassName('switch-wrapper')[0].addEventListener('mouseover', () => {\n      //   document.getElementsByClassName('inset-toggle')[0].classList.add('switch-hover');\n      //   console.log('hovered over')\n      // });\n      // document.getElementsByClassName('switch-wrapper')[0].addEventListener('mouseout', () => {\n      //   document.getElementsByClassName('inset-toggle')[0].classList.remove('switch-hover');\n      //   console.log('hovered out')\n      // })\n    } catch (NotYetLoadedException) {\n      //\n    }\n  }, [])\n  return (\n    <div className=\"switch-wrapper\">\n      <div className=\"switch\">\n      <div className=\"invisible_pushdown\"></div>\n        <input type=\"checkbox\" name=\"toggle\" id={props.id}  checked={props.checked} onChange={props.updateDebugMode}/>\n        <label htmlFor=\"toggle\" className=\"inset-toggle\"><i>🕷</i></label>\n      </div>  \n    </div>\n  )\n}\n\nToggle.propTypes = {\n  id: PropTypes.string.isRequired,\n  onChangeFunc: PropTypes.func.isRequired,\n  checked: PropTypes.bool.isRequired,\n  updateDebugMode: PropTypes.func.isRequired\n}","import React from 'react'\nimport './Checkmark.scss'\n\n/**\n * **Based on: https://codepen.io/ashleygalante/pen/nwoKh**\n */\nexport default function Checkmark() {\n  return (\n    <div className=\"checkmark\">\n      <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 161.2 161.2\" enableBackground=\"new 0 0 161.2 161.2\" xmlSpace=\"preserve\">\n        <path className=\"path\" fill=\"none\" stroke=\"#FFBA49\" strokeMiterlimit=\"10\" d=\"M425.9,52.1L425.9,52.1c-2.2-2.6-6-2.6-8.3-0.1l-42.7,46.2l-14.3-16.4\n          c-2.3-2.7-6.2-2.7-8.6-0.1c-1.9,2.1-2,5.6-0.1,7.7l17.6,20.3c0.2,0.3,0.4,0.6,0.6,0.9c1.8,2,4.4,2.5,6.6,1.4c0.7-0.3,1.4-0.8,2-1.5\n          c0.3-0.3,0.5-0.6,0.7-0.9l46.3-50.1C427.7,57.5,427.7,54.2,425.9,52.1z\"/>\n        <circle className=\"path\" fill=\"none\" stroke=\"#FFBA49\" strokeWidth=\"4\" strokeMiterlimit=\"10\" cx=\"80.6\" cy=\"80.6\" r=\"62.1\"/>\n        <polyline className=\"path\" fill=\"none\" stroke=\"#FFBA49\" strokeWidth=\"6\" strokeLinecap=\"round\" strokeMiterlimit=\"10\" points=\"113,52.8 \n          74.1,108.4 48.2,86.4 \"/>\n        <circle className=\"spin\" fill=\"none\" stroke=\"#FFBA49\" strokeWidth=\"4\" strokeMiterlimit=\"10\" strokeDasharray=\"12.2175,12.2175\" cx=\"80.6\" cy=\"80.6\" r=\"73.9\"/>\n      </svg>\n      <p id=\"complete_message\">🔥 恭喜您完成 🔥</p>\n    </div>\n  )\n}\n","import React from 'react'\nimport './Fireworks.scss'\n\nexport default function Fireworks() {\n  return (\n    <div className=\"pyro\">\n      <div className=\"before\"></div>\n      <div className=\"after\"></div>\n      </div>\n  )\n}\n","import React from 'react'\nimport Checkmark from './Checkmark/Checkmark'\nimport Fireworks from './Fireworks/Fireworks'\nimport './CompleteAnimation.scss'\n\nexport default function CompleteAnimation() {\n  return (\n    <div className=\"CompleteAnimationBG\">\n      <Fireworks />\n      <Checkmark />\n    </div>\n  )\n}","/* eslint-disable no-console */\nimport React from 'react';\nimport update from 'react-addons-update'\nimport qs from '../utils/qs'\nimport cogoToast from 'cogo-toast';\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport io from 'socket.io-client';\n\n// scss\nimport './App.scss';\n\n// components\nimport CameraList from '../components/CameraList/CameraList';\nimport Tester from '../components/Tester/Tester';\nimport DataCollection from '../components/Table/DataCollection';\nimport Modal from '../components/Modal'\nimport Status from '../components/Status'\nimport Toggle from '../components/Toggle/Toggle'\nimport CompleteAnimation from '../components/CompleteAnimation/CompleteAnimation'\n\n// data\nimport sentences from '../assets/data/sentences.txt';\n// import sentences from '../assets/data/sentences-english-test.txt';\n\n// util\nimport ip_util from '../utils/ip'\n\n// chevron\nimport up_chevron from '../assets/svg/up-chevron.svg'\nimport down_chevron from '../assets/svg/down-chevron.svg'\n\n\nclass App extends React.Component {\n  /**\n   * **Basic Configuration**\n   */\n  sentencesPerPageInTable = 8; // sentences per page of Table\n  curr_index = qs('sentence_index'); // extracts the curr index from URL\n  ip_address = 'http://192.168.0.103:5000'; // default IP address of server\n\n  /**\n   * **CogoToast References to call to hide toasts**\n   */\n  showNoCamsRef = undefined;\n  hideServerOfflineRef = undefined;\n\n  /**\n   * **ReactJS Framework Initializing States onCreate**\n   * Constructor for main react App Component\n   * @param {object} props\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      addCamState: false,\n      connectedOrderMap: {},\n      connectedToServer: false,\n      computerID: -1,\n      computerStatus: {},\n      currSentence: '',\n      currSentenceIndex: this.curr_index ? Number(this.curr_index) : 0,\n      currPageInTable: this.curr_index\n        ? Math.floor(Number(this.curr_index) / this.sentencesPerPageInTable) + 1\n        : 1,\n      data: [],\n      detectedNumCams: 0,\n      debugMode: true,\n      ip: this.ip_address,\n      numFilesSavedTotal: 0,\n      numFilesSavedInd: 0,\n      recordProgress: 0,\n      recordGreenLight: false,\n      remainingWords: 0,\n      requiredNumCams: 1,\n      sentencesPerPageInTable: this.sentencesPerPageInTable, // sentences per page\n      startTime: undefined,\n      socket: io(this.ip_address),\n      totalTime: [],\n      totalWords: 0\n    };\n  }\n\n  render() {\n    return (\n      <Router>\n        <Route path='/' exact component={this.main_userView} />\n        <Route path='/admin' exact component={this.main_adminView} />\n        <Route path='/playground' exact component={this.main_playground} />\n        {this.comp_modals()}\n        {this.comp_completeAnimation()}\n      </Router>\n    );\n  }\n\n  componentDidMount() {\n    try {\n      this.helper_emitInitialSocketMessages();\n      this.readTextFile(sentences);\n      this.initSocketListeners();\n      document.getElementById('debug_mode').checked =\n        this.state.requiredNumCams === 1;\n      window.addEventListener('keydown', this.handler_keydown);\n      window.addEventListener('keyup', this.handler_keyup);\n      this.showNoCamsRef = this.helper_showNoCamsConnected();\n      setTimeout(() => {\n        this.hideServerOfflineRef = this.helper_showServerNotOnline();\n      }, 1000);\n    } catch (NotYetLoadedException) {\n      //\n    }\n  }\n\n  handler_hoverMouseOutDebug = () => {\n    try {\n      document.getElementsByClassName('debug-group')[0].className +=\n        ' ' + 'hideDebug';\n    } catch (NotYetLoadedException) {\n      console.error(NotYetLoadedException);\n    }\n  };\n\n  handler_hoverMouseOverDebug = () => {\n    try {\n      document\n        .getElementsByClassName('debug-group')[0]\n        .classList.remove('hideDebug');\n    } catch (NotYetLoadedException) {\n      console.error(NotYetLoadedException);\n    }\n  };\n\n  handler_hoverMouseOutBottom = () => {\n    try {\n      document.getElementsByClassName('contents')[0].className +=\n        ' ' + 'hideBottom';\n    } catch (NotYetLoadedException) {\n      console.error(NotYetLoadedException);\n    }\n  };\n\n  handler_hoverMouseOverBottom = () => {\n    try {\n      document\n        .getElementsByClassName('contents')[0]\n        .classList.remove('hideBottom');\n    } catch (NotYetLoadedException) {\n      console.error(NotYetLoadedException);\n    }\n  };\n\n  /**\n   * **ReactJS Framework Method**\n   */\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handler_keydown);\n  }\n\n  /**\n   * **Component: User Page**\n   * Renders components for desktop view\n   */\n  main_userView = () => {\n    return (\n      <div className='container'>\n        <span id='debug_hover_area'>{this.comp_debug()}</span>\n        {this.comp_tester()}\n        <span id='bottom_hover_area'>\n          <div className='contents'>\n            <div\n              style={{ width: '100%', height: '100%' }}\n              onClick={this.helper_toggleHideBottom}\n            >\n              <img className='chevron' src={down_chevron}></img>\n            </div>\n            <div className='panel_container'>\n              <div className='left_panel'>{this.comp_dataCollection()}</div>\n              <div className='right_panel'>\n                <h3>Cameras</h3>\n                <div className='cameras_container'>\n                  {this.comp_cameraList()}\n                </div>\n              </div>\n            </div>\n          </div>\n        </span>\n      </div>\n    );\n  };\n\n  /**\n   * **Component: Admin Page**\n   * Renders components for mobile view\n   */\n  main_adminView = () => {\n    return <div style={{ textAlign: 'center' }}>{this.comp_debug()}</div>;\n  };\n\n  /**\n   * **Component: PlaygroundPage**\n   * Renders components for experimental purposes\n   */\n  main_playground = () => {\n    return <Toggle />;\n  };\n\n  comp_debugHover = () => {};\n\n  /**\n   * **Component: Animation for Study Completion**\n   */\n  comp_completeAnimation = () => {\n    if (this.state.recordProgress + 1 === this.state.data.length) {\n      try {\n        document.getElementById('testerNextBtn').disabled = true;\n      } catch (NotYetLoadedException) {\n        //\n      }\n      return <CompleteAnimation />;\n    }\n  };\n\n  // * COMPONENT * //\n  comp_dataCollection = () => {\n    return (\n      <DataCollection\n        data={this.state.data}\n        updateName={this.updateName}\n        curr_sentence={this.state.currSentence}\n        socket={this.state.socket}\n        curr_sentence_index={this.state.currSentenceIndex}\n        curr_page={this.state.currPageInTable}\n        updatePage={this.updatePage}\n      />\n    );\n  };\n\n  // * COMPONENT * //\n  comp_tester = () => {\n    return (\n      <Tester\n        updateSentence={this.updateSentence}\n        data={this.state.data}\n        curr_sentence_index={this.state.currSentenceIndex}\n        data_length={this.state.data.length}\n        first_sentence={this.state.data[this.state.currSentenceIndex]}\n        curr_sentence={this.state.currSentence}\n        socket={this.state.socket}\n        recordGreenLight={\n          this.state.recordGreenLight &&\n          this.state.numFilesSavedTotal % this.state.requiredNumCams === 0\n        }\n        debugMode={this.state.debugMode}\n        numFilesSaved={this.state.numFilesSavedTotal}\n        requiredNumCams={this.state.requiredNumCams}\n        updateGreenLightStatus={this.updateGreenLightStatus}\n        recordedProgress={this.state.recordProgress}\n        updateRecordProgress={this.updateRecordProgress}\n        totalTime={this.state.totalTime}\n        updateTotalTime={this.updateTotalTime}\n        showFileSavingLoader={this.disp_showFileSavingLoader}\n        connectedToServer={this.state.connectedToServer}\n        detectedNumCams={this.state.detectedNumCams}\n      />\n    );\n  };\n\n  // * COMPONENT * //\n  comp_cameraList = () => {\n    return (\n      <CameraList\n        socket={this.state.socket}\n        computerID={this.state.computerID}\n        computerStatus={this.state.computerStatus}\n        updateConnectionStatus={this.updateConnectionStatus}\n        addCamState={this.state.addCamState}\n        toggleCamState={this.helper_toggleCamState}\n        updateDetectedNumCams={this.updateDetectedNumCams}\n        addCam={this.admin_resetCams}\n      />\n    );\n  };\n\n  // * COMPONENT * //\n  comp_status = () => {\n    return (\n      <Status\n        totalWords={this.state.totalWords}\n        data_length={this.state.data.length}\n        recordedProgress={this.state.recordProgress}\n        helper_checkIfMobileView={this.helper_checkIfMobileView}\n        recordGreenLight={this.state.recordGreenLight}\n        socket={this.state.socket}\n      />\n    );\n  };\n\n  // * COMPONENT * //\n  comp_modals = () => {\n    return (\n      <div>\n        <Modal\n          modalID={'resetProgressModal'}\n          socket={this.state.socket}\n          title={'Are you sure?'}\n          message={'Resetting progress will be permanent.'}\n          buttonCancel={'Cancel'}\n          buttonConfirm={'Reset Progress'}\n          buttonConfirmId={'resetProgressBtn'}\n          toast={'Progress reset'}\n          confirmFunc={this.admin_resetProgress}\n        />\n        <Modal\n          modalID={'overallStatus'}\n          socket={this.state.socket}\n          title={'Status'}\n          onLoadFunc={this.getStatus}\n          message={this.comp_status()}\n          buttonConfirm={'Hide'}\n        />\n      </div>\n    );\n  };\n\n  updateDebugMode = () => {\n    this.setState({ debugMode: !this.state.debugMode });\n  };\n\n  // * COMPONENT * //\n  comp_debug = () => {\n    return (\n      <div className='debug-group'>\n        <span className='vert-bar'>|</span>\n        <label className='debug_label'>Admin: </label>\n\n        <button\n          onClick={() => {\n            this.helper_toggleModal('overallStatus');\n            this.getStatus();\n          }}\n          className='debug_button'\n        >\n          Status\n        </button>\n        <button\n          id='resetCamsBtn'\n          className='debug_button'\n          onClick={this.admin_resetCams}\n        >\n          Add Webcam\n        </button>\n        <button\n          className='debug_button'\n          onClick={() => {\n            this.helper_toggleModal('resetProgressModal');\n          }}\n        >\n          Reset Progress\n        </button>\n        <span className='vert-bar'>|</span>\n\n        <div className='debug_inline_group'>\n          <label className='debug_label'>Debug: </label>\n          <Toggle\n            id='debug_mode'\n            onChangeFunc={this.handler_debugToggle}\n            checked={this.state.debugMode}\n            updateDebugMode={this.updateDebugMode}\n          />\n        </div>\n        <span className='vert-bar'>|</span>\n\n        <br />\n        <span className='vert-bar'>|</span>\n        <div className='debug_inline_group'>\n          <label htmlFor='' className='debug_label'>\n            Cams:{' '}\n          </label>\n          <input\n            id='numCamsInput'\n            type='text'\n            className='debug_text_input debug_sm_input warning_message'\n            value={this.state.detectedNumCams}\n            readOnly\n          />\n        </div>\n\n        <div className='debug_inline_group'>\n          <span className='vert-bar'>|</span>\n          <label htmlFor='' className='debug_label'>\n            Server:{' '}\n          </label>\n          <span className='server_status'></span>\n          <input\n            id='inputServerIP'\n            type='text'\n            className='debug_text_input warning_message'\n            value={this.state.ip}\n            onChange={this.handler_IPOnChange}\n          />\n          <button\n            className='debug_button'\n            onClick={this.handler_useThisCompAsServer}\n          >\n            {' '}\n            📡{' '}\n          </button>\n        </div>\n\n        <span className='vert-bar'>|</span>\n\n        <div\n          style={{ width: '100%', height: '100%' }}\n          onClick={this.helper_toggleHideDebug}\n        >\n          <img className='chevron' src={up_chevron}></img>\n        </div>\n\n        {/* <button className='debug_button' onClick={this.admin_refreshAll}>\n          Refresh All\n        </button> */}\n\n        <button\n          onClick={this.disp_showFileSavedMessage}\n          id='showSavedFilesBtn'\n          className='hidden_button'\n        ></button>\n\n        {/* <pre hidden={this.state.numCams === 8}>\n          debug mode, remember to change num cams back to 8\n        </pre> */}\n      </div>\n    );\n  };\n\n  // * UTILITY * //\n  readTextFile(file) {\n    return fetch(file)\n      .then(response => response.text())\n      .then(text => {\n        this.setState({ data: text.split('\\n') }, () => {\n          let curr_sentence = qs('sentence_index')\n            ? this.state.data[Number(qs('sentence_index'))]\n            : this.state.data[0];\n          this.setState({ curr_sentence }, () => {\n            // console.log(this.state.curr_sentence)\n          });\n          this.setState({\n            totalWords: this.state.data.reduce(\n              (sum, sentence) => sum + sentence.length,\n              0\n            )\n          });\n        });\n      });\n  }\n\n  /**\n   * * UPDATE *\n   *\n   */\n  updateFilesSaved = numFiles => {\n    const successMessage =\n      numFiles % this.state.requiredNumCams === 0\n        ? ' (successful)'\n        : ' (not all cams saved!!)';\n    this.setState({\n      numFilesSavedTotal: numFiles\n    });\n    if (successMessage === ' (successful)') {\n      this.updateGreenLightStatus(true);\n    }\n    try {\n      document.getElementById('num_files_saved').innerHTML =\n        'Total Files Saved: ' + numFiles + successMessage;\n    } catch (NotYetLoadedException) {\n      // console.error(NotYetLoadedException);\n    }\n  };\n\n  handler_useThisCompAsServer = () => {\n    ip_util.clientGetIP(ip => {\n      console.log(ip);\n      if (ip.split('.').length === 4) {\n        ip = 'http://' + ip + ':5000';\n        cogoToast.loading(ip, {\n          position: 'top-right',\n          hideAfter: 3,\n          onClick: hide => {\n            hide();\n          }\n        });\n        this.helper_setServerIP(ip);\n        // if (!this.hideServerOfflineRef) {\n        //   this.hideServerOfflineRef = this.helper_showServerNotOnline();\n        // } else {\n        //   this.hideServerOfflineRef();\n        // }\n      }\n    });\n    // const [ip_v6, ip_v4] = [temp[0], temp[1]]\n    // console.log(ip_v4);\n  };\n\n  handler_IPOnChange = e => {\n    this.setState({ ip: e.target.value });\n  };\n\n  handler_debugToggle = debugMode => {\n    console.log('toggling debug mode');\n    this.setState({ debugMode }, () => {\n      if (debugMode) {\n        this.setState({ requiredNumCams: 1 });\n        this.helper_removeHoverEventListeners();\n      } else {\n        this.setState({ requiredNumCams: 8 });\n        this.helper_addHoverEventListeners();\n        this.handler_hoverMouseOutBottom();\n      }\n    });\n  };\n\n  handler_fileSaveSuccess = numFiles => {\n    this.updateFilesSaved(numFiles);\n    this.setState(\n      {\n        numFilesSavedInd: this.state.numFilesSavedInd + 1\n      },\n      () => {\n        console.log('this occured: ' + this.state.numFilesSavedInd + ' times.');\n        try {\n          document.getElementById('testerNextBtn').disabled = true;\n        } catch (NotYetLoadedException) {\n          //\n        }\n        if (this.state.numFilesSavedInd === this.state.requiredNumCams) {\n          console.log('correct number of files saved');\n          try {\n            document.getElementById('showSavedFilesBtn').click();\n            document.getElementById('showSavedFilesBtn').disabled = true;\n            this.setState(\n              {\n                numFilesSavedInd: 0\n              },\n              () => {\n                cogoToast.success(\n                  this.style_makeEmojiToastLayout(\n                    ['视频已成功保存', '可继续录'],\n                    '🔥'\n                  ),\n                  {\n                    hideAfter: 1,\n                    onClick: hide => {\n                      hide();\n                    }\n                  }\n                );\n              }\n            );\n\n            this.updateGreenLightStatus(true);\n          } catch (Exception) {\n            console.error(Exception);\n          }\n          try {\n            if (this.helper_checkIfMobileView()) {\n              // console.log('here here??');\n              cogoToast.info(\n                'Completed @ Sentence [' + this.state.recordProgress + ']',\n                {\n                  hideAfter: 0.75,\n                  onClick: hide => {\n                    hide();\n                  }\n                }\n              );\n            }\n          } catch (NotYetLoadedException) {\n            console.error(NotYetLoadedException);\n          }\n        }\n      }\n    );\n  };\n\n  updateDetectedNumCams = detectedNumCams => {\n    this.setState({ detectedNumCams });\n    this.updateGreenLightStatus(true);\n    this.showNoCamsRef();\n    try {\n      document.getElementsByClassName('debug_sm_input')[0].className +=\n        this.state.detectedNumCams > 0 ? ' serverPlaceholderConnected' : '';\n      document\n        .getElementById('numCamsInput')\n        .classList.remove('warning_message');\n    } catch (NotYetLoadedException) {\n      //\n    }\n  };\n\n  /**\n   * * UPDATE *\n   * Updates the state computerID with param id\n   * @param {string} id\n   */\n  updateCompID = id => {\n    const status = {};\n    this.setState({ computerID: id });\n    status[this.state.computerID] = [];\n    this.setState({ computerStatus: status }, () => {\n      // console.log(\"init computer status\", this.state.computerStatus);\n    });\n  };\n\n  /**\n   * * STYLE *\n   * Takes a string and finds a substring and returns a stylized version of it,\n   * specifically to add the 🖥 icon in front of the ID.\n   * @param {string} str The full string\n   * @param {string} find The particular substring to find\n   * @returns {string} The stylized string\n   */\n  style_addThisCpuIcon = (str, find) => {\n    var re = new RegExp(find, 'g');\n    return str.replace(re, '🖥: ' + find);\n  };\n\n  style_makeEmojiToastLayout = (msg, emoji) => {\n    return (\n      <div className='cogo-toast'>\n        <div className='cogo-toast-emoji-left'> {emoji}</div>\n        <div>\n          {msg[0]}\n          <br />\n          {msg[1]}\n        </div>\n        <div className='cogo-toast-emoji-right'> {emoji}</div>\n      </div>\n    );\n  };\n\n  ref_hideLoader = undefined;\n  disp_showFileSavingLoader = () => {\n    this.ref_hideLoader = cogoToast.loading(\n      this.style_makeEmojiToastLayout(['视频正在保存', '请耐心等待'], '⌛️'),\n      {\n        hideAfter: 0,\n        onClick: hide => {\n          hide();\n        }\n      }\n    );\n    // setTimeout(hideLoader, 2000);\n    // hideLoader();\n    // this.setState({ hideLoader }, () => {\n    //   console.log(hideLoader);\n    // });\n  };\n\n\n  /**\n   * Hides file saved loader\n   */\n  disp_showFileSavedMessage = () => {\n    try {\n      this.ref_hideLoader();\n    } catch (NotOnPageError) {\n      //\n    }\n  };\n\n  /**\n   * Socket Listeners — adds socket listeners to the page to respond to \n   * messages sent from server\n   */\n  initSocketListeners = () => {\n    this.state.socket.on('server: online', () => {\n      cogoToast.success('Server is online.', {\n        position: 'top-right',\n        hideAfter: 0,\n        onClick: hide => {\n          hide();\n        }\n      });\n      if (this.hideServerOfflineRef) this.hideServerOfflineRef();\n      document\n        .getElementsByClassName('server_status')[0]\n        .classList.add('server_online');\n      document\n        .getElementById('inputServerIP')\n        .classList.add('serverPlaceholderConnected');\n      document\n        .getElementById('inputServerIP')\n        .classList.remove('warning_message');\n    });\n\n    if (!this.hideServerOfflineRef) {\n      this.hideServerOfflineRef = this.helper_showServerNotOnline();\n    } else {\n      this.hideServerOfflineRef();\n    }\n\n    this.state.socket.on('server: disconnected', () => {\n      this.setState({ connectedToServer: false }, () => {\n        document\n          .getElementsByClassName('server_status')[0]\n          .classList.remove('server_online');\n        document\n          .getElementById('inputServerIP')\n          .classList.remove('serverPlaceholderConnected');\n      });\n    });\n\n    this.state.socket.on('server: connected', computerID => {\n      console.log('detected server connected');\n      this.setState({ connectedToServer: true, computerID }, () => {\n        document\n          .getElementById('inputServerIP')\n          .classList.add('serverPlaceholderConnected');\n      });\n    });\n\n    this.state.socket.on('server: connected sync id', id => {\n      if (this.updateCompID) this.updateCompID(id);\n      this.updateCompID = null;\n    });\n\n    this.state.socket.on('server: reset cams', () => {\n      this.updateGreenLightStatus(true);\n    });\n\n    this.state.socket.on('server: response for connection status', status => {\n      try {\n        document.getElementById(\n          'connection_status'\n        ).innerHTML = this.style_addThisCpuIcon(\n          JSON.stringify(status, null, 2),\n          this.state.computerID\n        );\n      } catch (NotOnPageError) {\n        //\n      }\n    });\n\n    this.state.socket.on('server: response for progress', progress => {\n      this.setState({ recordedProgress: progress ? progress : 0 });\n    });\n\n    this.state.socket.on('server: response for numFilesSaved', numFiles => {\n      this.updateFilesSaved(numFiles);\n    });\n\n    this.state.socket.on('server: save files successful', numFiles => {\n      this.handler_fileSaveSuccess(numFiles);\n    });\n\n    this.state.socket.on('server: computer connected order', connectedOrder => {\n      this.setState({\n        connectedOrderMap: update(this.state.connectedOrderMap, {\n          $merge: connectedOrder\n        })\n      });\n    });\n\n    const refreshRates = [0, 666, 1332];\n    this.state.socket.on('server: refresh all', () => {\n      const conectedOrderNum = this.state.connectedOrderMap[\n        this.state.computerID\n      ];\n      const indexRefresh = conectedOrderNum % 3;\n      const time = refreshRates[indexRefresh];\n      setTimeout(() => {\n        window.location.reload(false);\n      }, time);\n    });\n  };\n\n  async pingServer() {\n    try {\n      const serverID = this.state.socket.io.opts.hostname;\n      const response = await fetch(serverID, { mode: 'no-cors' });\n      if (!response.ok) {\n        console.error('no response from server');\n      } else {\n        console.log('connection successful');\n      }\n    } catch (ServerPingFailedException) {\n      console.error(ServerPingFailedException);\n    }\n  }\n\n  /**\n   * **Update: Sentence**\n   * Sent as a prop to components to update app-level state of\n   * curr_sentence_index, and updates server with new index. It also updates\n   * url query without refreshing to reflect current index.\n   * @param {string} curr_sentence\n   */\n  updateSentence = curr_sentence => {\n    if (curr_sentence === '$next') {\n      this.setState(\n        { curr_sentence_index: this.state.currSentenceIndex + 1 },\n        () => {\n          this.updateSentence(this.state.data[this.state.currSentenceIndex]);\n          this.state.socket.emit('client: update sentence_index', {\n            name: qs('name'),\n            curr_sentence_index: this.state.currSentenceIndex\n          });\n        }\n      );\n    } else if (curr_sentence === '$prev') {\n      this.setState(\n        {\n          curr_sentence_index: Math.max(this.state.currSentenceIndex - 1, 0)\n        },\n        () => {\n          this.updateSentence(this.state.data[this.state.currSentenceIndex]);\n          this.state.socket.emit('client: update sentence_index', {\n            name: qs('name'),\n            curr_sentence_index: this.state.currSentenceIndex\n          });\n        }\n      );\n    } else {\n      window.history.pushState(\n        null,\n        null,\n        '?name=' +\n          qs('name') +\n          '&sentence_index=' +\n          this.state.currSentenceIndex\n      );\n      // console.log(curr_sentence);\n      this.setState({\n        curr_sentence,\n        curr_page:\n          Math.floor(\n            Number(this.state.curr_sentence_index) / this.state.per_page\n          ) + 1\n      });\n    }\n  };\n\n  updatePage = new_page => {\n    if (new_page === 0) {\n      // do nothing\n    }\n    console.log('update page', new_page);\n    this.setState({\n      curr_page: new_page >= 1 ? new_page : 1\n    });\n  };\n\n  updateRecordProgress = curr_sentence_index => {\n    // { <sentence_index> : <bool: recorded/not> }\n    this.setState(\n      {\n        recordedProgress: curr_sentence_index\n      },\n      () => {\n        this.state.socket.emit(\n          'client: update recording progress',\n          curr_sentence_index\n        );\n      }\n    );\n  };\n\n  updateConnectionStatus = recordingStatus => {\n    if (this.state.computerStatus[this.state.computerID]) {\n      const status = {};\n      status[this.state.computerID] = recordingStatus;\n      this.setState({ computerStatus: status }, () => {});\n      this.state.socket.emit('client: update recording status', status);\n    }\n    this.getStatus();\n  };\n\n  updateGreenLightStatus = bool => {\n    this.setState({ recordGreenLight: bool });\n  };\n\n  updateTotalTime = time => {\n    this.setState({ totalTime: time });\n  };\n\n  getStatus = () => {\n    this.state.socket.emit('client: ping for connection status');\n    this.state.socket.emit('client: ping for numFilesSaved');\n    this.state.socket.emit('client: ping for progress');\n  };\n\n  admin_resetCams = () => {\n    // cogoToast.info('Adding Cam', {hideAfter: 1})\n    // this.state.socket.emit('client: stop cams');\n    // this.updateGreenLightStatus(true);\n    this.state.socket.emit('client: reset cams');\n    try {\n      document.getElementById('addCamBtn').click();\n    } catch (NotYetLoadedException) {\n      //\n    }\n    this.state.socket.emit('client: dummy vid, do not save');\n    // cogoToast.info('Cams are reset', { hideAfter: 0.3 });\n    // setTimeout(() => document.getElementById('resetCamsBtn').classList.remove('btn-active'), 1000);\n  };\n\n  admin_refreshAll = () => {\n    this.state.socket.emit('client: refresh all');\n  };\n\n  admin_resetProgress = () => {\n    this.state.socket.emit('client: update recording progress', 0);\n    this.state.socket.emit('client: delete total time');\n    this.state.socket.emit('client: reset total files');\n    this.state.socket.emit('client: save total start time', new Date());\n    window.location = window.location.origin;\n    this.state.socket.emit('client: save total time', [0, 0, 0]);\n  };\n\n  helper_emitInitialSocketMessages = () => {\n    if (!this.helper_checkIfMobileView) {\n      this.state.socket.emit('client: update sentence_index', {\n        name: qs('name'),\n        curr_sentence_index: this.state.currSentenceIndex\n      });\n    } else {\n      this.state.socket.emit('client: ask for recording status');\n    }\n    this.state.socket.emit('client: check for progress');\n    this.state.socket.emit('client: ask for sync id');\n  };\n\n  helper_toggleModal = id => {\n    document.getElementById(id).click();\n  };\n\n  helper_checkIfMobileView = () => {\n    return window.location.href.includes('mobile');\n  };\n\n  helper_showNoCamsConnected = () => {\n    return cogoToast.warn('No Webcams', {\n      hideAfter: 0,\n      position: 'top-left',\n      onClick: this.admin_resetCams\n    });\n  };\n\n  helper_showServerNotOnline = () => {\n    console.log('no server');\n    return cogoToast.warn('Server is offline', {\n      hideAfter: 0,\n      position: 'top-right',\n      onClick: hide => {\n        this.handler_useThisCompAsServer();\n        hide();\n      }\n    });\n  };\n\n  helper_setServerIP = ip => {\n    this.state.socket.disconnect();\n    try {\n      document\n        .getElementsByClassName('server_status')[0]\n        .classList.remove('server_online');\n      document\n        .getElementById('inputServerIP')\n        .classList.remove('serverPlaceholderConnected');\n    } catch (NotYetLoadedException) {\n      //\n    }\n    this.setState({\n      socket: io(ip),\n      ip: ip\n    });\n    this.state.socket.emit('client: check server connection');\n    // if (hideLoadServer) {hideLoadServer()}\n    setTimeout(() => {\n      if (\n        !document\n          .getElementsByClassName('server_status')[0]\n          .className.includes('server_online')\n      ) {\n        this.hideServerOfflineRef = this.helper_showServerNotOnline();\n      }\n    }, 3000);\n    this.initSocketListeners();\n  };\n\n  helper_addHoverEventListeners = () => {\n    const debugHoverArea = document.getElementById('debug_hover_area');\n    const bottomHoverArea = document.getElementById('bottom_hover_area');\n    debugHoverArea.addEventListener(\n      'mouseout',\n      this.handler_hoverMouseOutDebug\n    );\n    debugHoverArea.addEventListener(\n      'mouseover',\n      this.handler_hoverMouseOverDebug\n    );\n    bottomHoverArea.addEventListener(\n      'mouseout',\n      this.handler_hoverMouseOutBottom\n    );\n    bottomHoverArea.addEventListener(\n      'mouseover',\n      this.handler_hoverMouseOverBottom\n    );\n  };\n\n  helper_removeHoverEventListeners = () => {\n    const debugHoverArea = document.getElementById('debug_hover_area');\n    const bottomHoverArea = document.getElementById('bottom_hover_area');\n    debugHoverArea.removeEventListener(\n      'mouseout',\n      this.handler_hoverMouseOutDebug\n    );\n    debugHoverArea.removeEventListener(\n      'mouseover',\n      this.handler_hoverMouseOverDebug\n    );\n    bottomHoverArea.removeEventListener(\n      'mouseout',\n      this.handler_hoverMouseOutBottom\n    );\n    bottomHoverArea.removeEventListener(\n      'mouseover',\n      this.handler_hoverMouseOverBottom\n    );\n    this.handler_hoverMouseOverBottom();\n  };\n\n  helper_toggleHideDebug = () => {\n    console.log('toggling');\n    try {\n      if (\n        document\n          .getElementsByClassName('debug-group')[0]\n          .className.includes('hideDebug')\n      ) {\n        this.handler_hoverMouseOverDebug();\n      } else {\n        this.handler_hoverMouseOutDebug();\n      }\n    } catch (NotYetLoadedException) {\n      //\n    }\n  };\n\n  helper_toggleHideBottom = () => {\n    console.log('toggling');\n    try {\n      if (\n        document\n          .getElementsByClassName('contents')[0]\n          .className.includes('hideBottom')\n      ) {\n        this.handler_hoverMouseOverBottom();\n      } else {\n        this.handler_hoverMouseOutBottom();\n      }\n    } catch (NotYetLoadedException) {\n      //\n    }\n  };\n\n  helper_toggleCamState = () => {\n    this.setState({ addCamState: !this.state.addCamState });\n  };\n\n  handler_keyup() {\n    for (const btn of document.getElementsByClassName('debug_button')) {\n      btn.classList.remove('btn-active');\n    }\n  }\n\n  handler_keydown = event => {\n    let key = event.key;\n    const inputServerIP = document.getElementById('inputServerIP');\n\n    if (\n      [' ', 'ArrowLeft', 'ArrowRight', 'Escape', 'Enter', 's'].includes(key)\n    ) {\n      try {\n        if (key === ' ') {\n          document.getElementById('testerRecordBtn').click();\n          event.preventDefault();\n        } else if (key === 'ArrowLeft') {\n          if (document.activeElement !== inputServerIP) {\n            document.getElementById('testerPrevBtn').click();\n            event.preventDefault();\n          }\n        } else if (key === 'ArrowRight') {\n          if (document.activeElement !== inputServerIP) {\n            document.getElementById('testerNextBtn').click();\n            event.preventDefault();\n          }\n        } else if (key === 'Escape') {\n          document.getElementById('resetCamsBtn').click();\n          event.preventDefault();\n        } else if (key === 'Enter') {\n          console.log('detected enter key');\n          if (document.getElementsByClassName('modali-button-destructive')[0]) {\n            document\n              .getElementsByClassName('modali-button-destructive')[0]\n              .click();\n            this.admin_resetProgress();\n          }\n          if (document.activeElement === inputServerIP) {\n            this.helper_setServerIP(inputServerIP.value);\n            cogoToast.info('Updated IP: ' + inputServerIP.value, {\n              onClick: hide => {\n                hide();\n              }\n            });\n            event.preventDefault();\n          }\n        } else if (key === 's') {\n          if (document.activeElement.nodeName.toLowerCase() !== 'input')\n            this.helper_toggleModal('overallStatus');\n        }\n      } catch (NotYetLoadedException) {\n        // console.error(NotYetLoadedException);\n      }\n    }\n  };\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App.js';\n\nReactDOM.render(<App />, document.getElementById('root'));","module.exports = __webpack_public_path__ + \"static/media/collapse-chevron.126ea5d6.svg\";","module.exports = __webpack_public_path__ + \"static/media/expand-chevron.fd7409a7.svg\";","module.exports = __webpack_public_path__ + \"static/media/beg.565428a5.svg\";","module.exports = __webpack_public_path__ + \"static/media/end.b927e101.svg\";","module.exports = __webpack_public_path__ + \"static/media/sentences.16736696.txt\";","const os = require('os');\nconst ifaces = os.networkInterfaces();\n\nconst nodeGetIP = () => {\n  let address = undefined;\n  Object.keys(ifaces).forEach(function (ifname) {\n    ifaces[ifname].forEach(function (iface) {\n      if ('IPv4' !== iface.family || iface.internal !== false) {\n        // skip over internal (i.e. 127.0.0.1) and non-ipv4 addresses\n        return;\n      }\n      if (ifname === 'en0') {\n        address = iface.address;\n      }\n    });\n  });\n  console.log(address);\n  return address;\n}\n\nconst clientGetIP = onNewIP => { //  onNewIp - your listener function for new IPs\n  var myPeerConnection = window.RTCPeerConnection || window.mozRTCPeerConnection || window.webkitRTCPeerConnection; //compatibility for firefox and chrome\n  var pc = new myPeerConnection({\n      iceServers: []\n    }),\n    noop = function () {},\n    localIPs = {},\n    ipRegex = /([0-9]{1,3}(\\.[0-9]{1,3}){3}|[a-f0-9]{1,4}(:[a-f0-9]{1,4}){7})/g;\n\n  function ipIterate(ip) {\n    if (!localIPs[ip]) onNewIP(ip);\n    localIPs[ip] = true;\n  }\n  pc.createDataChannel(\"\"); //create a bogus data channel\n  pc.createOffer(function (sdp) {\n    sdp.sdp.split('\\n').forEach(function (line) {\n      if (line.indexOf('candidate') < 0) return;\n      line.match(ipRegex).forEach(ipIterate);\n    });\n    pc.setLocalDescription(sdp, noop, noop);\n  }, noop); // create offer and set local description\n  pc.onicecandidate = function (ice) { //listen for candidate events\n    if (!ice || !ice.candidate || !ice.candidate.candidate || !ice.candidate.candidate.match(ipRegex)) return;\n    ice.candidate.candidate.match(ipRegex).forEach(ipIterate);\n  };\n}\n\nmodule.exports = {\n  nodeGetIP,\n  clientGetIP\n}","module.exports = __webpack_public_path__ + \"static/media/up-chevron.fc2195aa.svg\";","module.exports = __webpack_public_path__ + \"static/media/down-chevron.61cf0702.svg\";"],"sourceRoot":""}